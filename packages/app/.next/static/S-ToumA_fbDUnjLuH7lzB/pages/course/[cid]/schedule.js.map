{"version":3,"sources":["webpack:///./components/Schedule/UpdateCalendarButton.tsx","webpack:///./components/Schedule/SchedulePanel.tsx","webpack:////var/www/source/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?165c","webpack:////var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///../../../next-server/lib/side-effect.tsx","webpack:///../../../next-server/lib/amp-context.ts","webpack:///./pages/course/[cid]/schedule.tsx","webpack:////var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///../../../next-server/lib/amp.ts","webpack:////var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///../../../next-server/lib/head-manager-context.ts","webpack:////var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///../../../next-server/lib/head.tsx"],"names":["CalendarUpdateStatus","UpdateCalendarButton","courseId","useState","BEFORE","updated","setUpdated","updateCalendar","a","UPDATING","API","course","AFTER","type","onClick","loading","disabled","ScheduleCalendar","styled","Calendar","SchedulePanel","defaultView","useCourse","role","useRoleInCourse","myEvents","officeHours","map","e","start","startTime","end","endTime","title","today","Date","localizer","momentLocalizer","moment","events","scrollToTime","getFullYear","getMonth","getDate","showMultiDayTimes","Role","PROFESSOR","window","__NEXT_P","push","module","exports","iter","Symbol","iterator","Object","Array","from","isServer","mountedInstances","state","component","constructor","emitChange","recordedState","Component","AmpStateContext","React","ScheduleContainer","div","Schedule","useProfile","cid","useRouter","query","Number","name","arrayLikeToArray","arr","isArray","isInAmpMode","ampFirst","hybrid","hasQuery","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","HeadManagerContext","TypeError","defaultHead","inAmpMode","head","charSet","content","onlyReactElement","child","list","fragmentChild","fragmentList","METATYPES","reduceComponents","headElements","headElementChildren","headElement","props","keys","tags","metaTypes","metaCategories","h","unique","key","i","len","metatype","category","categories","c","Effect","Head","ampState","updateHead","reduceComponentsToState","handleStateChange"],"mappings":"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","file":"static/S-ToumA_fbDUnjLuH7lzB/pages/course/[cid]/schedule.js","sourcesContent":["import { API } from \"@koh/api-client\";\nimport { Button } from \"antd\";\nimport React, { ReactElement, useState } from \"react\";\n\nenum CalendarUpdateStatus {\n  BEFORE,\n  UPDATING,\n  AFTER,\n}\n\ntype UpdateCalendarButtonProps = {\n  courseId: number;\n};\n\nexport default function UpdateCalendarButton({\n  courseId,\n}: UpdateCalendarButtonProps): ReactElement {\n  const [updated, setUpdated] = useState(CalendarUpdateStatus.BEFORE);\n\n  const updateCalendar = async () => {\n    setUpdated(CalendarUpdateStatus.UPDATING);\n    await API.course.updateCalendar(courseId);\n    setUpdated(CalendarUpdateStatus.AFTER);\n  };\n\n  switch (updated) {\n    case CalendarUpdateStatus.BEFORE:\n      return (\n        <Button type=\"primary\" onClick={updateCalendar}>\n          Update Calendar\n        </Button>\n      );\n    case CalendarUpdateStatus.UPDATING:\n      return (\n        <Button type=\"primary\" loading>\n          Updating Calendar...\n        </Button>\n      );\n    case CalendarUpdateStatus.AFTER:\n      return (\n        <Button type=\"primary\" disabled>\n          Calendar Updated!\n        </Button>\n      );\n  }\n}\n","import { Role } from \"@koh/common\";\nimport moment from \"moment\";\nimport React, { ReactElement } from \"react\";\nimport {\n  Calendar,\n  CalendarProps,\n  Event,\n  momentLocalizer,\n  View,\n} from \"react-big-calendar\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport UpdateCalendarButton from \"./UpdateCalendarButton\";\n\nconst ScheduleCalendar = styled(Calendar)<CalendarProps>`\n  height: 70vh;\n`;\n\ntype ScheduleProps = {\n  courseId: number;\n  defaultView?: View;\n};\n\nexport default function SchedulePanel({\n  courseId,\n  defaultView = \"week\",\n}: ScheduleProps): ReactElement {\n  const { course } = useCourse(courseId);\n  const role = useRoleInCourse(courseId);\n\n  const myEvents: Event[] =\n    course?.officeHours.map((e) => ({\n      start: e.startTime,\n      end: e.endTime,\n      title: e.title,\n    })) ?? [];\n\n  const today: Date = new Date();\n  return (\n    <div>\n      <ScheduleCalendar\n        localizer={momentLocalizer(moment)}\n        events={myEvents}\n        defaultView={defaultView}\n        scrollToTime={\n          new Date(today.getFullYear(), today.getMonth(), today.getDate(), 8)\n        }\n        showMultiDayTimes\n      />\n      {role === Role.PROFESSOR && <UpdateCalendarButton courseId={courseId} />}\n    </div>\n  );\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/course/[cid]/schedule\",\n      function () {\n        return require(\"private-next-pages/course/[cid]/schedule.tsx\");\n      }\n    ]);\n  ","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = Array<React.ReactElement<any>> | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  inAmpMode?: boolean\n}\n\nexport default () => {\n  const mountedInstances: Set<any> = new Set()\n  let state: State\n\n  function emitChange(component: React.Component<SideEffectProps>): void {\n    state = component.props.reduceComponentsToState(\n      [...mountedInstances],\n      component.props\n    )\n    if (component.props.handleStateChange) {\n      component.props.handleStateChange(state)\n    }\n  }\n\n  return class extends Component<SideEffectProps> {\n    // Used when server rendering\n    static rewind() {\n      const recordedState = state\n      state = undefined\n      mountedInstances.clear()\n      return recordedState\n    }\n\n    constructor(props: any) {\n      super(props)\n      if (isServer) {\n        mountedInstances.add(this)\n        emitChange(this)\n      }\n    }\n    componentDidMount() {\n      mountedInstances.add(this)\n      emitChange(this)\n    }\n    componentDidUpdate() {\n      emitChange(this)\n    }\n    componentWillUnmount() {\n      mountedInstances.delete(this)\n      emitChange(this)\n    }\n\n    render() {\n      return null\n    }\n  }\n}\n","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","import styled from \"styled-components\";\nimport { useRouter } from \"next/router\";\nimport React, { ReactElement } from \"react\";\nimport { useCourse } from \"../../../hooks/useCourse\";\nimport { useProfile } from \"../../../hooks/useProfile\";\nimport Head from \"next/head\";\nimport NavBar from \"../../../components/Nav/NavBar\";\nimport SchedulePanel from \"../../../components/Schedule/SchedulePanel\";\nimport { StandardPageContainer } from \"../../../components/common/PageContainer\";\n\nconst ScheduleContainer = styled.div`\n  margin-top: 32px;\n`;\n\nexport default function Schedule(): ReactElement {\n  useProfile(); // Check logged in so we can redirect to login page\n  const router = useRouter();\n  const { cid } = router.query;\n\n  const { course } = useCourse(Number(cid));\n\n  return (\n    <StandardPageContainer>\n      <Head>\n        <title>{course?.name} Schedule | Khoury Office Hours</title>\n      </Head>\n      <NavBar courseId={Number(cid)} />\n      <ScheduleContainer>\n        <SchedulePanel courseId={Number(cid)} />\n      </ScheduleContainer>\n    </StandardPageContainer>\n  );\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import React from 'react'\n\nexport const HeadManagerContext: React.Context<any> = React.createContext(null)\n\nif (process.env.NODE_ENV !== 'production') {\n  HeadManagerContext.displayName = 'HeadManagerContext'\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import React from 'react'\nimport withSideEffect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let unique = true\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        unique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          unique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              unique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if (categories.has(category)) {\n              unique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return unique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      return React.cloneElement(c, { key })\n    })\n}\n\nconst Effect = withSideEffect()\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  return (\n    <AmpStateContext.Consumer>\n      {(ampState) => (\n        <HeadManagerContext.Consumer>\n          {(updateHead) => (\n            <Effect\n              reduceComponentsToState={reduceComponents}\n              handleStateChange={updateHead}\n              inAmpMode={isInAmpMode(ampState)}\n            >\n              {children}\n            </Effect>\n          )}\n        </HeadManagerContext.Consumer>\n      )}\n    </AmpStateContext.Consumer>\n  )\n}\n\nHead.rewind = Effect.rewind\n\nexport default Head\n"],"sourceRoot":""}