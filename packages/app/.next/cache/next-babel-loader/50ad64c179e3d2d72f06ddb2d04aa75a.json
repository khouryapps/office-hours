{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { API } from \"@koh/api-client\";\nimport useSWR from \"swr\";\nimport { Divider, Switch } from \"antd\";\nimport styled from \"styled-components\";\nvar Row = styled.div.withConfig({\n  displayName: \"InsightsDisplayOptions__Row\",\n  componentId: \"pl63wh-0\"\n})([\"display:flex;flex-direction:row;justify-content:space-between;font-size:18px;align-items:center;margin-bottom:16px;\"]);\nexport default function InsightsDisplayOptions() {\n  var _Object$entries;\n\n  var _useSWR = useSWR(\"api/v1/profile\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", API.profile.index());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      profile = _useSWR.data,\n      mutateProfile = _useSWR.mutate;\n\n  var _useSWR2 = useSWR(\"api/v1/insights\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", API.insights.list());\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }))),\n      insightsList = _useSWR2.data;\n\n  var toggleInsightOnOrOff = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(checked, insightName) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!checked) {\n                _context3.next = 5;\n                break;\n              }\n\n              _context3.next = 3;\n              return API.insights.toggleOn(insightName);\n\n            case 3:\n              _context3.next = 7;\n              break;\n\n            case 5:\n              _context3.next = 7;\n              return API.insights.toggleOff(insightName);\n\n            case 7:\n              mutateProfile();\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function toggleInsightOnOrOff(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", null, insightsList && ((_Object$entries = Object.entries(insightsList)) === null || _Object$entries === void 0 ? void 0 : _Object$entries.map(function (_ref4) {\n    var _profile$insights;\n\n    var _ref5 = _slicedToArray(_ref4, 2),\n        insightName = _ref5[0],\n        insightPartial = _ref5[1];\n\n    return __jsx(\"div\", {\n      key: insightName\n    }, __jsx(Row, null, __jsx(\"div\", null, insightPartial.displayName), __jsx(Switch, {\n      checked: profile === null || profile === void 0 ? void 0 : (_profile$insights = profile.insights) === null || _profile$insights === void 0 ? void 0 : _profile$insights.includes(insightName),\n      onChange: function onChange(checked) {\n        return toggleInsightOnOrOff(checked, insightName);\n      }\n    })), __jsx(Divider, null));\n  }))));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Insights/components/InsightsDisplayOptions.tsx"],"names":["React","API","useSWR","Divider","Switch","styled","Row","div","InsightsDisplayOptions","profile","index","data","mutateProfile","mutate","insights","list","insightsList","toggleInsightOnOrOff","checked","insightName","toggleOn","toggleOff","Object","entries","map","insightPartial","displayName","includes"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,MAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,GAAG,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,2HAAT;AASA,eAAe,SAASC,sBAAT,GAAgD;AAAA;;AAAA,gBACZN,MAAM,yFAErD;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAYD,GAAG,CAACQ,OAAJ,CAAYC,KAAZ,EAAZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFqD,GADM;AAAA,MAC/CD,OAD+C,WACrDE,IADqD;AAAA,MAC9BC,aAD8B,WACtCC,MADsC;;AAAA,iBAK9BX,MAAM,0FAAoB;AAAA;AAAA;AAAA;AAAA;AAAA,8CACvDD,GAAG,CAACa,QAAJ,CAAaC,IAAb,EADuD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB,GALwB;AAAA,MAK/CC,YAL+C,YAKrDL,IALqD;;AAS7D,MAAMM,oBAAoB;AAAA,yEAAG,kBAC3BC,OAD2B,EAE3BC,WAF2B;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIvBD,OAJuB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAKnBjB,GAAG,CAACa,QAAJ,CAAaM,QAAb,CAAsBD,WAAtB,CALmB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAOnBlB,GAAG,CAACa,QAAJ,CAAaO,SAAb,CAAuBF,WAAvB,CAPmB;;AAAA;AAS3BP,cAAAA,aAAa;;AATc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAApBK,oBAAoB;AAAA;AAAA;AAAA,KAA1B;;AAYA,SACE,4BACE,mBACGD,YAAY,wBACXM,MAAM,CAACC,OAAP,CAAeP,YAAf,CADW,oDACX,gBAA8BQ,GAA9B,CAAkC;AAAA;;AAAA;AAAA,QAAEL,WAAF;AAAA,QAAeM,cAAf;;AAAA,WAChC;AAAK,MAAA,GAAG,EAAEN;AAAV,OACE,MAAC,GAAD,QACE,mBAAMM,cAAc,CAACC,WAArB,CADF,EAEE,MAAC,MAAD;AACE,MAAA,OAAO,EAAEjB,OAAF,aAAEA,OAAF,4CAAEA,OAAO,CAAEK,QAAX,sDAAE,kBAAmBa,QAAnB,CAA4BR,WAA5B,CADX;AAEE,MAAA,QAAQ,EAAE,kBAACD,OAAD;AAAA,eACRD,oBAAoB,CAACC,OAAD,EAAUC,WAAV,CADZ;AAAA;AAFZ,MAFF,CADF,EAUE,MAAC,OAAD,OAVF,CADgC;AAAA,GAAlC,CADW,CADf,CADF,CADF;AAqBD","sourcesContent":["import React, { ReactElement } from \"react\";\nimport { API } from \"@koh/api-client\";\nimport useSWR from \"swr\";\nimport { Divider, Switch } from \"antd\";\nimport styled from \"styled-components\";\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  font-size: 18px;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nexport default function InsightsDisplayOptions(): ReactElement {\n  const { data: profile, mutate: mutateProfile } = useSWR(\n    `api/v1/profile`,\n    async () => API.profile.index()\n  );\n  const { data: insightsList } = useSWR(`api/v1/insights`, async () =>\n    API.insights.list()\n  );\n\n  const toggleInsightOnOrOff = async (\n    checked: boolean,\n    insightName: string\n  ) => {\n    if (checked) {\n      await API.insights.toggleOn(insightName);\n    } else {\n      await API.insights.toggleOff(insightName);\n    }\n    mutateProfile();\n  };\n\n  return (\n    <>\n      <div>\n        {insightsList &&\n          Object.entries(insightsList)?.map(([insightName, insightPartial]) => (\n            <div key={insightName}>\n              <Row>\n                <div>{insightPartial.displayName}</div>\n                <Switch\n                  checked={profile?.insights?.includes(insightName)}\n                  onChange={(checked) =>\n                    toggleInsightOnOrOff(checked, insightName)\n                  }\n                />\n              </Row>\n              <Divider />\n            </div>\n          ))}\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}