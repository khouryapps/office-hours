{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Input, Select, Button, Space } from \"antd\";\nimport { useEffect } from \"react\";\nimport { createSGString, Highlight } from \"./ApplyPage\";\nexport var TimezoneCampusMapping = {\n  \"America/New_York\": \"Boston / Charlotte\",\n  \"America/Los_Angeles\": \"San Francisco / Seattle\",\n  \"America/Toronto\": \"Toronto\",\n  \"America/Vancouver\": \"Vancouver\"\n};\nvar Option = Select.Option;\nexport default function EditCourse(_ref) {\n  var courseInfo = _ref.courseInfo,\n      onSubmitCourse = _ref.onSubmitCourse,\n      onBack = _ref.onBack;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var sectionGroupString = createSGString(courseInfo);\n  useEffect(function () {\n    form.resetFields();\n  }, [courseInfo]);\n\n  var handleSubmitCourse = function handleSubmitCourse() {\n    form.validateFields().then(function (value) {\n      return onSubmitCourse(value);\n    })[\"catch\"](function () {// don't submit if the fields are not valid\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(\"h3\", {\n    style: {\n      marginBottom: \"1.5em\"\n    }\n  }, \"Please fill out the following course information for\", \" \", __jsx(Highlight, null, sectionGroupString)), __jsx(Form, {\n    form: form,\n    layout: \"vertical\",\n    initialValues: courseInfo\n  }, __jsx(Form.Item, {\n    name: \"displayName\",\n    label: \"Course Display Name\",\n    tooltip: \"This is the course name that will be displayed within the app\",\n    rules: [{\n      required: true,\n      message: \"Please input a display name.\"\n    }]\n  }, __jsx(Input, {\n    placeholder: \"ex: CS 2500\",\n    maxLength: 20\n  })), __jsx(Form.Item, {\n    name: \"timezone\",\n    label: \"Campus\",\n    rules: [{\n      required: true,\n      message: \"Please select a Northeastern campus (for purpose of timezone).\"\n    }]\n  }, __jsx(Select, null, Object.entries(TimezoneCampusMapping).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        timezone = _ref3[0],\n        campus = _ref3[1];\n\n    return __jsx(Option, {\n      value: timezone,\n      key: timezone\n    }, campus);\n  }))), __jsx(Form.Item, {\n    name: \"coordinator_email\",\n    label: \"Coordinator Email\",\n    rules: [{\n      required: true,\n      type: \"email\",\n      message: \"Please input your email.\"\n    }]\n  }, __jsx(Input, {\n    placeholder: \"example@northeastern.edu\"\n  })), __jsx(Form.Item, {\n    label: \"Office Hours Calendar URL\",\n    tooltip: __jsx(\"div\", null, \"See\", \" \", __jsx(\"a\", {\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      href: \"https://info.khouryofficehours.com/coordinators-manual\"\n    }, \"here\"), \" \", \"to create your office hours calendar\"),\n    name: \"iCalURL\",\n    rules: [{\n      required: true,\n      type: \"url\",\n      message: \"Please input your office hours calendar URL.\"\n    }]\n  }, __jsx(Input, {\n    placeholder: \"https://calendar.google.com/calendar/ical/.../basic.ics\"\n  }))), __jsx(Space, null, __jsx(Button, {\n    onClick: onBack\n  }, \"Back\"), __jsx(Button, {\n    onClick: handleSubmitCourse,\n    type: \"primary\"\n  }, \"Next\")));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Apply/EditCourse.tsx"],"names":["Form","Input","Select","Button","Space","useEffect","createSGString","Highlight","TimezoneCampusMapping","Option","EditCourse","courseInfo","onSubmitCourse","onBack","useForm","form","sectionGroupString","resetFields","handleSubmitCourse","validateFields","then","value","marginBottom","required","message","Object","entries","map","timezone","campus","type"],"mappings":"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","sourcesContent":["import { ReactElement } from \"react\";\nimport { Form, Input, Select, Button, Space } from \"antd\";\nimport { useEffect } from \"react\";\nimport { createSGString, Highlight } from \"./ApplyPage\";\n\nexport interface EditCourseInfo {\n  displayName: string;\n  iCalURL: string;\n  coordinator_email: string;\n  timezone: string;\n}\n\ntype EditCourseProps = {\n  courseInfo: { name: string; crns: number[] };\n  onSubmitCourse: (courseInfo: EditCourseInfo) => any;\n  onBack: () => any;\n};\n\nexport const TimezoneCampusMapping = {\n  \"America/New_York\": \"Boston / Charlotte\",\n  \"America/Los_Angeles\": \"San Francisco / Seattle\",\n  \"America/Toronto\": \"Toronto\",\n  \"America/Vancouver\": \"Vancouver\",\n};\n\nconst { Option } = Select;\n\nexport default function EditCourse({\n  courseInfo,\n  onSubmitCourse,\n  onBack,\n}: EditCourseProps): ReactElement {\n  const [form] = Form.useForm();\n  const sectionGroupString = createSGString(courseInfo);\n\n  useEffect(() => {\n    form.resetFields();\n  }, [courseInfo]);\n\n  const handleSubmitCourse = () => {\n    form\n      .validateFields()\n      .then((value) => onSubmitCourse(value))\n      .catch(() => {\n        // don't submit if the fields are not valid\n      });\n  };\n\n  return (\n    <div>\n      <h3 style={{ marginBottom: \"1.5em\" }}>\n        Please fill out the following course information for{\" \"}\n        <Highlight>{sectionGroupString}</Highlight>\n      </h3>\n\n      <Form form={form} layout=\"vertical\" initialValues={courseInfo}>\n        <Form.Item\n          name=\"displayName\"\n          label=\"Course Display Name\"\n          tooltip=\"This is the course name that will be displayed within the app\"\n          rules={[{ required: true, message: \"Please input a display name.\" }]}\n        >\n          <Input placeholder=\"ex: CS 2500\" maxLength={20} />\n        </Form.Item>\n\n        <Form.Item\n          name=\"timezone\"\n          label=\"Campus\"\n          rules={[\n            {\n              required: true,\n              message:\n                \"Please select a Northeastern campus (for purpose of timezone).\",\n            },\n          ]}\n        >\n          <Select>\n            {Object.entries(TimezoneCampusMapping).map(([timezone, campus]) => (\n              <Option value={timezone} key={timezone}>\n                {campus}\n              </Option>\n            ))}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          name=\"coordinator_email\"\n          label=\"Coordinator Email\"\n          rules={[\n            {\n              required: true,\n              type: \"email\",\n              message: \"Please input your email.\",\n            },\n          ]}\n        >\n          <Input placeholder=\"example@northeastern.edu\" />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Office Hours Calendar URL\"\n          tooltip={\n            <div>\n              See{\" \"}\n              <a\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                href=\"https://info.khouryofficehours.com/coordinators-manual\"\n              >\n                here\n              </a>{\" \"}\n              to create your office hours calendar\n            </div>\n          }\n          name=\"iCalURL\"\n          rules={[\n            {\n              required: true,\n              type: \"url\",\n              message: \"Please input your office hours calendar URL.\",\n            },\n          ]}\n        >\n          <Input placeholder=\"https://calendar.google.com/calendar/ical/.../basic.ics\" />\n        </Form.Item>\n      </Form>\n      <Space>\n        <Button onClick={onBack}>Back</Button>\n\n        <Button onClick={handleSubmitCourse} type=\"primary\">\n          Next\n        </Button>\n      </Space>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}