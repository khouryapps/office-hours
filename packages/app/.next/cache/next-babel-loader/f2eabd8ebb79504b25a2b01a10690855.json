{"ast":null,"code":"var __jsx = React.createElement;\nimport { BellOutlined, BookOutlined, DeleteOutlined, UploadOutlined, UserOutlined, WindowsOutlined } from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport { API } from \"@koh/api-client\";\nimport { Role } from \"@koh/common\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\nimport { Button, Col, Menu, message, Row, Skeleton, Space, Upload } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport NotificationsSettings from \"./NotificationsSettings\";\nimport ProfileSettings from \"./ProfileSettings\";\nimport TeamsSettings from \"./TeamsSettings\";\nimport CoursePreferenceSettings from \"./CoursePreferenceSettings\";\nimport { useIsMobile } from \"../../hooks/useIsMobile\";\nimport { SettingsPanelAvatar } from \"./SettingsSharedComponents\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport { useRouter } from \"next/router\";\nexport let SettingsOptions;\n\n(function (SettingsOptions) {\n  SettingsOptions[\"PROFILE\"] = \"PROFILE\";\n  SettingsOptions[\"NOTIFICATIONS\"] = \"NOTIFICATIONS\";\n  SettingsOptions[\"TEAMS_SETTINGS\"] = \"TEAMS_SETTINGS\";\n  SettingsOptions[\"PREFERENCES\"] = \"PREFERENCES\";\n})(SettingsOptions || (SettingsOptions = {}));\n\nexport const VerticalDivider = styled.div.withConfig({\n  displayName: \"SettingsPage__VerticalDivider\",\n  componentId: \"sc-14ibjpn-0\"\n})([\"@media (min-width:767px){border-right:1px solid #cfd6de;margin-right:32px;}\"]);\nconst ProfilePicButton = styled(Button).withConfig({\n  displayName: \"SettingsPage__ProfilePicButton\",\n  componentId: \"sc-14ibjpn-1\"\n})([\"flex:wrap;width:calc(5vw);min-width:180px;\"]);\nconst {\n  Panel\n} = Collapse;\nexport default function SettingsPage({\n  defaultPage\n}) {\n  const {\n    data: profile,\n    error,\n    mutate\n  } = useSWR(`api/v1/profile`, async () => API.profile.index());\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const role = useRoleInCourse(Number(cid));\n  const isTAOrProfessor = role === Role.TA || role === Role.PROFESSOR;\n  const {\n    0: currentSettings,\n    1: setCurrentSettings\n  } = useState(defaultPage || SettingsOptions.PROFILE);\n  const {\n    0: uploading,\n    1: setUploading\n  } = useState(false);\n  const isMobile = useIsMobile();\n  const windowWidth = useWindowWidth();\n  const {\n    0: avatarSize,\n    1: setAvatarSize\n  } = useState(windowWidth / 2);\n  useEffect(() => {\n    const widthDivider = isMobile ? 6 : 10;\n    setAvatarSize(windowWidth / widthDivider);\n  });\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPGs or PNGs!\");\n    }\n\n    const isLt1M = file.size / 1024 / 1024 < 1;\n\n    if (!isLt1M) {\n      message.error(\"Image must smaller than 1MB!\");\n    }\n\n    return isJpgOrPng && isLt1M;\n  };\n\n  if (error) {\n    message.error(error);\n  }\n\n  const AvatarSettings = () => __jsx(Col, null, avatarSize ? __jsx(Row, {\n    style: {\n      marginTop: avatarSize / 6,\n      justifyContent: `${isMobile ? \"left\" : \"center\"}`\n    }\n  }, uploading ? __jsx(Skeleton.Avatar, {\n    active: true,\n    size: avatarSize,\n    shape: \"circle\",\n    style: {\n      marginTop: avatarSize / 6,\n      marginBottom: avatarSize / 12,\n      marginLeft: avatarSize / 6,\n      marginRight: avatarSize / 6\n    }\n  }) : __jsx(SettingsPanelAvatar, {\n    avatarSize: avatarSize\n  }), __jsx(Col, null, profile && __jsx(\"h2\", null, profile.firstName, \" \", profile.lastName), __jsx(Upload, {\n    action: \"/api/v1/profile/upload_picture\",\n    beforeUpload: beforeUpload,\n    showUploadList: false,\n    onChange: info => {\n      setUploading(info.file.status === \"uploading\");\n      mutate();\n    }\n  }, __jsx(ProfilePicButton, {\n    icon: __jsx(UploadOutlined, null)\n  }, \"Edit photo\")), (profile === null || profile === void 0 ? void 0 : profile.photoURL) && __jsx(ProfilePicButton, {\n    icon: __jsx(DeleteOutlined, null),\n    style: {\n      marginTop: \"10px\"\n    },\n    onClick: async () => {\n      try {\n        await API.profile.deleteProfilePicture();\n        message.success(\"You've successfully deleted your profile picture\");\n        mutate();\n      } catch (e) {\n        message.error(\"There was an error with deleting your profile picture, please contact the Khoury Office Hours team for assistance\");\n        throw e;\n      }\n    }\n  }, \"Delete my Profile Picture\"))) : null);\n\n  const SettingsMenu = () => __jsx(React.Fragment, null, isMobile ? __jsx(Collapse, {\n    accordion: true,\n    style: {\n      marginTop: \"10px\"\n    }\n  }, __jsx(Panel, {\n    header: \"Personal Information\",\n    key: \"profile\"\n  }, __jsx(ProfileSettings, null)), isTAOrProfessor && __jsx(Panel, {\n    header: \"Teams Settings\",\n    key: \"teams_settings\"\n  }, __jsx(TeamsSettings, null)), __jsx(Panel, {\n    header: \"Notifications\",\n    key: \"notifications\"\n  }, __jsx(NotificationsSettings, null)), __jsx(Panel, {\n    header: \"Course Preferences\",\n    key: \"preferences\"\n  }, __jsx(CoursePreferenceSettings, null))) : __jsx(Menu, {\n    style: {\n      background: \"none\",\n      marginTop: \"10px\"\n    },\n    defaultSelectedKeys: [currentSettings],\n    onClick: e => setCurrentSettings(e.key)\n  }, __jsx(Menu.Item, {\n    key: SettingsOptions.PROFILE,\n    icon: __jsx(UserOutlined, null)\n  }, \"Personal Information\"), isTAOrProfessor && __jsx(Menu.Item, {\n    key: SettingsOptions.TEAMS_SETTINGS,\n    icon: __jsx(WindowsOutlined, null)\n  }, \"Teams Settings\"), __jsx(Menu.Item, {\n    key: SettingsOptions.NOTIFICATIONS,\n    icon: __jsx(BellOutlined, null)\n  }, \"Notifications\"), __jsx(Menu.Item, {\n    key: SettingsOptions.PREFERENCES,\n    icon: __jsx(BookOutlined, null)\n  }, \"Course Preferences\")));\n\n  const DesktopSettingsSubpage = () => __jsx(Col, null, currentSettings === SettingsOptions.PROFILE && __jsx(ProfileSettings, null), currentSettings === SettingsOptions.NOTIFICATIONS && __jsx(NotificationsSettings, null), currentSettings === SettingsOptions.TEAMS_SETTINGS && __jsx(TeamsSettings, null), currentSettings === SettingsOptions.PREFERENCES && __jsx(CoursePreferenceSettings, null));\n\n  return __jsx(\"div\", null, isMobile ? __jsx(Col, null, __jsx(AvatarSettings, null), __jsx(SettingsMenu, null)) : __jsx(Row, null, __jsx(Col, {\n    span: 5,\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(AvatarSettings, null), __jsx(SettingsMenu, null)), __jsx(VerticalDivider, null), __jsx(Space, {\n    direction: \"vertical\",\n    size: 40,\n    style: {\n      flexGrow: 1\n    }\n  }, __jsx(DesktopSettingsSubpage, null))));\n}","map":null,"metadata":{},"sourceType":"module"}