{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport { BellOutlined, BookOutlined, DeleteOutlined, UploadOutlined, UserOutlined, WindowsOutlined } from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport { API } from \"@koh/api-client\";\nimport { Role } from \"@koh/common\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\nimport { Button, Col, Menu, message, Row, Skeleton, Space, Upload } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport NotificationsSettings from \"./NotificationsSettings\";\nimport ProfileSettings from \"./ProfileSettings\";\nimport TeamsSettings from \"./TeamsSettings\";\nimport CoursePreferenceSettings from \"./CoursePreferenceSettings\";\nimport { useIsMobile } from \"../../hooks/useIsMobile\";\nimport { SettingsPanelAvatar } from \"./SettingsSharedComponents\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport { useRouter } from \"next/router\";\nexport var SettingsOptions;\n\n(function (SettingsOptions) {\n  SettingsOptions[\"PROFILE\"] = \"PROFILE\";\n  SettingsOptions[\"NOTIFICATIONS\"] = \"NOTIFICATIONS\";\n  SettingsOptions[\"TEAMS_SETTINGS\"] = \"TEAMS_SETTINGS\";\n  SettingsOptions[\"PREFERENCES\"] = \"PREFERENCES\";\n})(SettingsOptions || (SettingsOptions = {}));\n\nexport var VerticalDivider = styled.div.withConfig({\n  displayName: \"SettingsPage__VerticalDivider\",\n  componentId: \"sc-14ibjpn-0\"\n})([\"@media (min-width:767px){border-right:1px solid #cfd6de;margin-right:32px;}\"]);\nvar ProfilePicButton = styled(Button).withConfig({\n  displayName: \"SettingsPage__ProfilePicButton\",\n  componentId: \"sc-14ibjpn-1\"\n})([\"flex:wrap;width:calc(5vw);min-width:180px;\"]);\nvar Panel = Collapse.Panel;\nexport default function SettingsPage(_ref) {\n  var defaultPage = _ref.defaultPage;\n\n  var _useSWR = useSWR(\"api/v1/profile\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", API.profile.index());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      profile = _useSWR.data,\n      error = _useSWR.error,\n      mutate = _useSWR.mutate;\n\n  var router = useRouter();\n  var cid = router.query.cid;\n  var role = useRoleInCourse(Number(cid));\n  var isTAOrProfessor = role === Role.TA || role === Role.PROFESSOR;\n\n  var _useState = useState(defaultPage || SettingsOptions.PROFILE),\n      currentSettings = _useState[0],\n      setCurrentSettings = _useState[1];\n\n  var _useState2 = useState(false),\n      uploading = _useState2[0],\n      setUploading = _useState2[1];\n\n  var isMobile = useIsMobile();\n  var windowWidth = useWindowWidth();\n\n  var _useState3 = useState(windowWidth / 2),\n      avatarSize = _useState3[0],\n      setAvatarSize = _useState3[1];\n\n  useEffect(function () {\n    var widthDivider = isMobile ? 6 : 10;\n    setAvatarSize(windowWidth / widthDivider);\n  });\n\n  var beforeUpload = function beforeUpload(file) {\n    var isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPGs or PNGs!\");\n    }\n\n    var isLt1M = file.size / 1024 / 1024 < 1;\n\n    if (!isLt1M) {\n      message.error(\"Image must smaller than 1MB!\");\n    }\n\n    return isJpgOrPng && isLt1M;\n  };\n\n  if (error) {\n    message.error(error);\n  }\n\n  var AvatarSettings = function AvatarSettings() {\n    return __jsx(Col, null, avatarSize ? __jsx(Row, {\n      style: {\n        marginTop: avatarSize / 6,\n        justifyContent: \"\".concat(isMobile ? \"left\" : \"center\")\n      }\n    }, uploading ? __jsx(Skeleton.Avatar, {\n      active: true,\n      size: avatarSize,\n      shape: \"circle\",\n      style: {\n        marginTop: avatarSize / 6,\n        marginBottom: avatarSize / 12,\n        marginLeft: avatarSize / 6,\n        marginRight: avatarSize / 6\n      }\n    }) : __jsx(SettingsPanelAvatar, {\n      avatarSize: avatarSize\n    }), __jsx(Col, null, profile && __jsx(\"h2\", null, profile.firstName, \" \", profile.lastName), __jsx(Upload, {\n      action: \"/api/v1/profile/upload_picture\",\n      beforeUpload: beforeUpload,\n      showUploadList: false,\n      onChange: function onChange(info) {\n        setUploading(info.file.status === \"uploading\");\n        mutate();\n      }\n    }, __jsx(ProfilePicButton, {\n      icon: __jsx(UploadOutlined, null)\n    }, \"Edit photo\")), (profile === null || profile === void 0 ? void 0 : profile.photoURL) && __jsx(ProfilePicButton, {\n      icon: __jsx(DeleteOutlined, null),\n      style: {\n        marginTop: \"10px\"\n      },\n      onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return API.profile.deleteProfilePicture();\n\n              case 3:\n                message.success(\"You've successfully deleted your profile picture\");\n                mutate();\n                _context2.next = 11;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                message.error(\"There was an error with deleting your profile picture, please contact the Khoury Office Hours team for assistance\");\n                throw _context2.t0;\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }))\n    }, \"Delete my Profile Picture\"))) : null);\n  };\n\n  var SettingsMenu = function SettingsMenu() {\n    return __jsx(React.Fragment, null, isMobile ? __jsx(Collapse, {\n      accordion: true,\n      style: {\n        marginTop: \"10px\"\n      }\n    }, __jsx(Panel, {\n      header: \"Personal Information\",\n      key: \"profile\"\n    }, __jsx(ProfileSettings, null)), isTAOrProfessor && __jsx(Panel, {\n      header: \"Teams Settings\",\n      key: \"teams_settings\"\n    }, __jsx(TeamsSettings, null)), __jsx(Panel, {\n      header: \"Notifications\",\n      key: \"notifications\"\n    }, __jsx(NotificationsSettings, null)), __jsx(Panel, {\n      header: \"Course Preferences\",\n      key: \"preferences\"\n    }, __jsx(CoursePreferenceSettings, null))) : __jsx(Menu, {\n      style: {\n        background: \"none\",\n        marginTop: \"10px\"\n      },\n      defaultSelectedKeys: [currentSettings],\n      onClick: function onClick(e) {\n        return setCurrentSettings(e.key);\n      }\n    }, __jsx(Menu.Item, {\n      key: SettingsOptions.PROFILE,\n      icon: __jsx(UserOutlined, null)\n    }, \"Personal Information\"), isTAOrProfessor && __jsx(Menu.Item, {\n      key: SettingsOptions.TEAMS_SETTINGS,\n      icon: __jsx(WindowsOutlined, null)\n    }, \"Teams Settings\"), __jsx(Menu.Item, {\n      key: SettingsOptions.NOTIFICATIONS,\n      icon: __jsx(BellOutlined, null)\n    }, \"Notifications\"), __jsx(Menu.Item, {\n      key: SettingsOptions.PREFERENCES,\n      icon: __jsx(BookOutlined, null)\n    }, \"Course Preferences\")));\n  };\n\n  var DesktopSettingsSubpage = function DesktopSettingsSubpage() {\n    return __jsx(Col, null, currentSettings === SettingsOptions.PROFILE && __jsx(ProfileSettings, null), currentSettings === SettingsOptions.NOTIFICATIONS && __jsx(NotificationsSettings, null), currentSettings === SettingsOptions.TEAMS_SETTINGS && __jsx(TeamsSettings, null), currentSettings === SettingsOptions.PREFERENCES && __jsx(CoursePreferenceSettings, null));\n  };\n\n  return __jsx(\"div\", null, isMobile ? __jsx(Col, null, __jsx(AvatarSettings, null), __jsx(SettingsMenu, null)) : __jsx(Row, null, __jsx(Col, {\n    span: 5,\n    style: {\n      textAlign: \"center\"\n    }\n  }, __jsx(AvatarSettings, null), __jsx(SettingsMenu, null)), __jsx(VerticalDivider, null), __jsx(Space, {\n    direction: \"vertical\",\n    size: 40,\n    style: {\n      flexGrow: 1\n    }\n  }, __jsx(DesktopSettingsSubpage, null))));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Settings/SettingsPage.tsx"],"names":["BellOutlined","BookOutlined","DeleteOutlined","UploadOutlined","UserOutlined","WindowsOutlined","Collapse","API","Role","useWindowWidth","Button","Col","Menu","message","Row","Skeleton","Space","Upload","React","useEffect","useState","styled","useSWR","NotificationsSettings","ProfileSettings","TeamsSettings","CoursePreferenceSettings","useIsMobile","SettingsPanelAvatar","useRoleInCourse","useRouter","SettingsOptions","VerticalDivider","div","ProfilePicButton","Panel","SettingsPage","defaultPage","profile","index","data","error","mutate","router","cid","query","role","Number","isTAOrProfessor","TA","PROFESSOR","PROFILE","currentSettings","setCurrentSettings","uploading","setUploading","isMobile","windowWidth","avatarSize","setAvatarSize","widthDivider","beforeUpload","file","isJpgOrPng","type","isLt1M","size","AvatarSettings","marginTop","justifyContent","marginBottom","marginLeft","marginRight","firstName","lastName","info","status","photoURL","deleteProfilePicture","success","SettingsMenu","background","e","key","TEAMS_SETTINGS","NOTIFICATIONS","PREFERENCES","DesktopSettingsSubpage","textAlign","flexGrow"],"mappings":"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","sourcesContent":["import {\n  BellOutlined,\n  BookOutlined,\n  DeleteOutlined,\n  UploadOutlined,\n  UserOutlined,\n  WindowsOutlined,\n} from \"@ant-design/icons\";\nimport { Collapse } from \"antd\";\nimport { API } from \"@koh/api-client\";\nimport { Role } from \"@koh/common\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\nimport { Button, Col, Menu, message, Row, Skeleton, Space, Upload } from \"antd\";\nimport React, { ReactElement, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport NotificationsSettings from \"./NotificationsSettings\";\nimport ProfileSettings from \"./ProfileSettings\";\nimport TeamsSettings from \"./TeamsSettings\";\nimport CoursePreferenceSettings from \"./CoursePreferenceSettings\";\nimport { useIsMobile } from \"../../hooks/useIsMobile\";\nimport { SettingsPanelAvatar } from \"./SettingsSharedComponents\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport { useRouter } from \"next/router\";\n\nexport enum SettingsOptions {\n  PROFILE = \"PROFILE\",\n  NOTIFICATIONS = \"NOTIFICATIONS\",\n  TEAMS_SETTINGS = \"TEAMS_SETTINGS\",\n  PREFERENCES = \"PREFERENCES\",\n}\n\ninterface SettingsPageProps {\n  defaultPage: SettingsOptions;\n}\n\nexport const VerticalDivider = styled.div`\n  @media (min-width: 767px) {\n    border-right: 1px solid #cfd6de;\n    margin-right: 32px;\n  }\n`;\n\nconst ProfilePicButton = styled(Button)`\n  flex: wrap;\n  width: calc(5vw);\n  min-width: 180px;\n`;\n\nconst { Panel } = Collapse;\n\nexport default function SettingsPage({\n  defaultPage,\n}: SettingsPageProps): ReactElement {\n  const {\n    data: profile,\n    error,\n    mutate,\n  } = useSWR(`api/v1/profile`, async () => API.profile.index());\n  const router = useRouter();\n  const { cid } = router.query;\n  const role = useRoleInCourse(Number(cid));\n  const isTAOrProfessor = role === Role.TA || role === Role.PROFESSOR;\n\n  const [currentSettings, setCurrentSettings] = useState(\n    defaultPage || SettingsOptions.PROFILE\n  );\n  const [uploading, setUploading] = useState(false);\n  const isMobile = useIsMobile();\n  const windowWidth = useWindowWidth();\n  const [avatarSize, setAvatarSize] = useState(windowWidth / 2);\n\n  useEffect(() => {\n    const widthDivider = isMobile ? 6 : 10;\n    setAvatarSize(windowWidth / widthDivider);\n  });\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPGs or PNGs!\");\n    }\n\n    const isLt1M = file.size / 1024 / 1024 < 1;\n    if (!isLt1M) {\n      message.error(\"Image must smaller than 1MB!\");\n    }\n\n    return isJpgOrPng && isLt1M;\n  };\n\n  if (error) {\n    message.error(error);\n  }\n\n  const AvatarSettings = () => (\n    <Col>\n      {avatarSize ? (\n        <Row\n          style={{\n            marginTop: avatarSize / 6,\n            justifyContent: `${isMobile ? \"left\" : \"center\"}`,\n          }}\n        >\n          {uploading ? (\n            <Skeleton.Avatar\n              active={true}\n              size={avatarSize}\n              shape=\"circle\"\n              style={{\n                marginTop: avatarSize / 6,\n                marginBottom: avatarSize / 12,\n                marginLeft: avatarSize / 6,\n                marginRight: avatarSize / 6,\n              }}\n            />\n          ) : (\n            <SettingsPanelAvatar avatarSize={avatarSize} />\n          )}\n          <Col>\n            {profile && (\n              <h2>\n                {profile.firstName} {profile.lastName}\n              </h2>\n            )}\n            <Upload\n              action={\"/api/v1/profile/upload_picture\"}\n              beforeUpload={beforeUpload}\n              showUploadList={false}\n              onChange={(info) => {\n                setUploading(info.file.status === \"uploading\");\n                mutate();\n              }}\n            >\n              <ProfilePicButton icon={<UploadOutlined />}>\n                Edit photo\n              </ProfilePicButton>\n            </Upload>\n            {profile?.photoURL && (\n              <ProfilePicButton\n                icon={<DeleteOutlined />}\n                style={{ marginTop: \"10px\" }}\n                onClick={async () => {\n                  try {\n                    await API.profile.deleteProfilePicture();\n                    message.success(\n                      \"You've successfully deleted your profile picture\"\n                    );\n                    mutate();\n                  } catch (e) {\n                    message.error(\n                      \"There was an error with deleting your profile picture, please contact the Khoury Office Hours team for assistance\"\n                    );\n                    throw e;\n                  }\n                }}\n              >\n                Delete my Profile Picture\n              </ProfilePicButton>\n            )}\n          </Col>\n        </Row>\n      ) : null}\n    </Col>\n  );\n\n  const SettingsMenu = () => (\n    <>\n      {isMobile ? (\n        <Collapse accordion style={{ marginTop: \"10px\" }}>\n          <Panel header=\"Personal Information\" key=\"profile\">\n            <ProfileSettings />\n          </Panel>\n          {isTAOrProfessor && (\n            <Panel header=\"Teams Settings\" key=\"teams_settings\">\n              <TeamsSettings />\n            </Panel>\n          )}\n          <Panel header=\"Notifications\" key=\"notifications\">\n            <NotificationsSettings />\n          </Panel>\n          <Panel header=\"Course Preferences\" key=\"preferences\">\n            <CoursePreferenceSettings />\n          </Panel>\n        </Collapse>\n      ) : (\n        <Menu\n          style={{ background: \"none\", marginTop: \"10px\" }}\n          defaultSelectedKeys={[currentSettings]}\n          onClick={(e) => setCurrentSettings(e.key as SettingsOptions)}\n        >\n          <Menu.Item key={SettingsOptions.PROFILE} icon={<UserOutlined />}>\n            Personal Information\n          </Menu.Item>\n          {isTAOrProfessor && (\n            <Menu.Item\n              key={SettingsOptions.TEAMS_SETTINGS}\n              icon={<WindowsOutlined />}\n            >\n              Teams Settings\n            </Menu.Item>\n          )}\n          <Menu.Item\n            key={SettingsOptions.NOTIFICATIONS}\n            icon={<BellOutlined />}\n          >\n            Notifications\n          </Menu.Item>\n          <Menu.Item key={SettingsOptions.PREFERENCES} icon={<BookOutlined />}>\n            Course Preferences\n          </Menu.Item>\n        </Menu>\n      )}\n    </>\n  );\n\n  const DesktopSettingsSubpage = () => (\n    <Col>\n      {currentSettings === SettingsOptions.PROFILE && <ProfileSettings />}\n      {currentSettings === SettingsOptions.NOTIFICATIONS && (\n        <NotificationsSettings />\n      )}\n      {currentSettings === SettingsOptions.TEAMS_SETTINGS && <TeamsSettings />}\n      {currentSettings === SettingsOptions.PREFERENCES && (\n        <CoursePreferenceSettings />\n      )}\n    </Col>\n  );\n\n  return (\n    <div>\n      {isMobile ? (\n        <Col>\n          <AvatarSettings />\n          <SettingsMenu />\n        </Col>\n      ) : (\n        <Row>\n          <Col span={5} style={{ textAlign: \"center\" }}>\n            <AvatarSettings />\n            <SettingsMenu />\n          </Col>\n          <VerticalDivider />\n          <Space direction=\"vertical\" size={40} style={{ flexGrow: 1 }}>\n            <DesktopSettingsSubpage />\n          </Space>\n        </Row>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}