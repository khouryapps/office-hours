{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport useSWR from \"swr\";\nimport React from \"react\";\nimport { API } from \"@koh/api-client\";\nimport { Button, message, Modal, Table } from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport Router from \"next/router\";\nimport { useCourse } from \"../../hooks/useCourse\";\nvar confirm = Modal.confirm;\nexport default function CoursePreferenceSettings() {\n  var _useSWR = useSWR(\"api/v1/profile\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", API.profile.index());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      profile = _useSWR.data,\n      mutate = _useSWR.mutate;\n\n  var formattedRoles = {\n    student: \"Student\",\n    ta: \"TA\",\n    professor: \"Professor\"\n  };\n\n  function withdraw(_x) {\n    return _withdraw.apply(this, arguments);\n  }\n\n  function _withdraw() {\n    _withdraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(course) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return API.course.withdrawCourse(course.course.id);\n\n            case 2:\n              message.success(\"Successfully withdrew from \" + course.course.name);\n              _context2.next = 5;\n              return mutate();\n\n            case 5:\n              _context2.next = 7;\n              return Router.push(\"/\");\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _withdraw.apply(this, arguments);\n  }\n\n  function showConfirm(courseId) {\n    var course = profile === null || profile === void 0 ? void 0 : profile.courses.find(function (c) {\n      return c.course.id === courseId;\n    });\n    confirm({\n      title: \"Please Confirm!\",\n      icon: __jsx(ExclamationCircleOutlined, null),\n      content: \"Please confirm that you want to unenroll from \".concat(course.course.name, \" as a \").concat(formattedRoles[course.role], \".  The only way to get back is by contacting a professor!\"),\n      onOk: function onOk() {\n        withdraw(course);\n      }\n    });\n  }\n\n  var InstructorCell = function InstructorCell(_ref2) {\n    var courseId = _ref2.courseId;\n    var course = useCourse(courseId);\n    return __jsx(React.Fragment, null, course.course.coordinator_email);\n  };\n\n  var columns = [{\n    title: \"Course name\",\n    dataIndex: \"name\",\n    key: \"name\"\n  }, {\n    title: \"Role\",\n    dataIndex: \"role\",\n    key: \"role\"\n  }, {\n    title: \"Instructor\",\n    dataIndex: \"instructor\",\n    key: \"instructor\",\n    render: function createInstructorCell(courseId) {\n      return __jsx(InstructorCell, {\n        courseId: courseId\n      });\n    }\n  }, {\n    title: \"\",\n    key: \"courseId\",\n    dataIndex: \"courseId\",\n    render: function withdrawButton(courseId) {\n      return __jsx(Button, {\n        style: {\n          marginLeft: \"20px\"\n        },\n        type: \"primary\",\n        shape: \"round\",\n        onClick: function onClick() {\n          showConfirm(courseId);\n        },\n        danger: true\n      }, \"Withdraw\");\n    }\n  }];\n\n  function createCourseDataSource() {\n    return profile === null || profile === void 0 ? void 0 : profile.courses.map(function (c) {\n      return {\n        key: c.course.id,\n        name: c.course.name,\n        role: formattedRoles[c.role],\n        instructor: c.course.id,\n        courseId: c.course.id\n      };\n    });\n  }\n\n  return profile && __jsx(\"div\", {\n    style: {\n      paddingTop: \"50px\"\n    }\n  }, __jsx(\"h1\", null, \"Course Preferences\"), __jsx(Table, {\n    columns: columns,\n    dataSource: createCourseDataSource()\n  }));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Settings/CoursePreferenceSettings.tsx"],"names":["useSWR","React","API","Button","message","Modal","Table","ExclamationCircleOutlined","Router","useCourse","confirm","CoursePreferenceSettings","profile","index","data","mutate","formattedRoles","student","ta","professor","withdraw","course","withdrawCourse","id","success","name","push","showConfirm","courseId","courses","find","c","title","icon","content","role","onOk","InstructorCell","coordinator_email","columns","dataIndex","key","render","createInstructorCell","withdrawButton","marginLeft","createCourseDataSource","map","instructor","paddingTop"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,OAAOC,KAAP,MAAoC,OAApC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,KAA1B,EAAiCC,KAAjC,QAA8C,MAA9C;AAEA,SAASC,yBAAT,QAA0C,mBAA1C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,QAA0B,uBAA1B;IAEQC,O,GAAYL,K,CAAZK,O;AAER,eAAe,SAASC,wBAAT,GAAkD;AAAA,gBAC7BX,MAAM,yFAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,6CACzDE,GAAG,CAACU,OAAJ,CAAYC,KAAZ,EADyD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB,GADuB;AAAA,MACjDD,OADiD,WACvDE,IADuD;AAAA,MACxCC,MADwC,WACxCA,MADwC;;AAK/D,MAAMC,cAAc,GAAG;AACrBC,IAAAA,OAAO,EAAE,SADY;AAErBC,IAAAA,EAAE,EAAE,IAFiB;AAGrBC,IAAAA,SAAS,EAAE;AAHU,GAAvB;;AAL+D,WAWhDC,QAXgD;AAAA;AAAA;;AAAA;AAAA,yEAW/D,kBAAwBC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQnB,GAAG,CAACmB,MAAJ,CAAWC,cAAX,CAA0BD,MAAM,CAACA,MAAP,CAAcE,EAAxC,CADR;;AAAA;AAEEnB,cAAAA,OAAO,CAACoB,OAAR,CAAgB,gCAAgCH,MAAM,CAACA,MAAP,CAAcI,IAA9D;AAFF;AAAA,qBAGQV,MAAM,EAHd;;AAAA;AAAA;AAAA,qBAIQP,MAAM,CAACkB,IAAP,CAAY,GAAZ,CAJR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAX+D;AAAA;AAAA;;AAkB/D,WAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,QAAMP,MAAM,GAAGT,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEiB,OAAT,CAAiBC,IAAjB,CAAsB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACV,MAAF,CAASE,EAAT,KAAgBK,QAAvB;AAAA,KAAtB,CAAf;AAEAlB,IAAAA,OAAO,CAAC;AACNsB,MAAAA,KAAK,mBADC;AAENC,MAAAA,IAAI,EAAE,MAAC,yBAAD,OAFA;AAGNC,MAAAA,OAAO,0DACLb,MAAM,CAACA,MAAP,CAAcI,IADT,mBAGLT,cAAc,CAACK,MAAM,CAACc,IAAR,CAHT,8DAHD;AAQNC,MAAAA,IARM,kBAQC;AACLhB,QAAAA,QAAQ,CAACC,MAAD,CAAR;AACD;AAVK,KAAD,CAAP;AAYD;;AAED,MAAMgB,cAAc,GAAG,SAAjBA,cAAiB,QAAwC;AAAA,QAArCT,QAAqC,SAArCA,QAAqC;AAC7D,QAAMP,MAAM,GAAGZ,SAAS,CAACmB,QAAD,CAAxB;AAEA,WAAO,4BAAGP,MAAM,CAACA,MAAP,CAAciB,iBAAjB,CAAP;AACD,GAJD;;AAMA,MAAMC,OAAO,GAAG,CACd;AACEP,IAAAA,KAAK,EAAE,aADT;AAEEQ,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GADc,EAMd;AACET,IAAAA,KAAK,EAAE,MADT;AAEEQ,IAAAA,SAAS,EAAE,MAFb;AAGEC,IAAAA,GAAG,EAAE;AAHP,GANc,EAWd;AACET,IAAAA,KAAK,EAAE,YADT;AAEEQ,IAAAA,SAAS,EAAE,YAFb;AAGEC,IAAAA,GAAG,EAAE,YAHP;AAIEC,IAAAA,MAAM,EAAE,SAASC,oBAAT,CAA8Bf,QAA9B,EAAwC;AAC9C,aAAO,MAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEA;AAA1B,QAAP;AACD;AANH,GAXc,EAmBd;AACEI,IAAAA,KAAK,EAAE,EADT;AAEES,IAAAA,GAAG,EAAE,UAFP;AAGED,IAAAA,SAAS,EAAE,UAHb;AAIEE,IAAAA,MAAM,EAAE,SAASE,cAAT,CAAwBhB,QAAxB,EAAkC;AACxC,aACE,MAAC,MAAD;AACE,QAAA,KAAK,EAAE;AAAEiB,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,KAAK,EAAC,OAHR;AAIE,QAAA,OAAO,EAAE,mBAAM;AACblB,UAAAA,WAAW,CAACC,QAAD,CAAX;AACD,SANH;AAOE,QAAA,MAAM;AAPR,oBADF;AAaD;AAlBH,GAnBc,CAAhB;;AAyCA,WAASkB,sBAAT,GAAkC;AAChC,WAAOlC,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEiB,OAAT,CAAiBkB,GAAjB,CAAqB,UAAChB,CAAD;AAAA,aAAQ;AAClCU,QAAAA,GAAG,EAAEV,CAAC,CAACV,MAAF,CAASE,EADoB;AAElCE,QAAAA,IAAI,EAAEM,CAAC,CAACV,MAAF,CAASI,IAFmB;AAGlCU,QAAAA,IAAI,EAAEnB,cAAc,CAACe,CAAC,CAACI,IAAH,CAHc;AAIlCa,QAAAA,UAAU,EAAEjB,CAAC,CAACV,MAAF,CAASE,EAJa;AAKlCK,QAAAA,QAAQ,EAAEG,CAAC,CAACV,MAAF,CAASE;AALe,OAAR;AAAA,KAArB,CAAP;AAOD;;AAED,SACEX,OAAO,IACL;AAAK,IAAA,KAAK,EAAE;AAAEqC,MAAAA,UAAU,EAAE;AAAd;AAAZ,KACE,uCADF,EAEE,MAAC,KAAD;AAAO,IAAA,OAAO,EAAEV,OAAhB;AAAyB,IAAA,UAAU,EAAEO,sBAAsB;AAA3D,IAFF,CAFJ;AAQD","sourcesContent":["import useSWR from \"swr\";\nimport React, { ReactElement } from \"react\";\nimport { API } from \"@koh/api-client\";\nimport { Button, message, Modal, Table } from \"antd\";\nimport { UserCourse } from \"@koh/common\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport Router from \"next/router\";\nimport { useCourse } from \"../../hooks/useCourse\";\n\nconst { confirm } = Modal;\n\nexport default function CoursePreferenceSettings(): ReactElement {\n  const { data: profile, mutate } = useSWR(`api/v1/profile`, async () =>\n    API.profile.index()\n  );\n\n  const formattedRoles = {\n    student: \"Student\",\n    ta: \"TA\",\n    professor: \"Professor\",\n  };\n\n  async function withdraw(course: UserCourse) {\n    await API.course.withdrawCourse(course.course.id);\n    message.success(\"Successfully withdrew from \" + course.course.name);\n    await mutate();\n    await Router.push(\"/\");\n  }\n\n  function showConfirm(courseId) {\n    const course = profile?.courses.find((c) => c.course.id === courseId);\n\n    confirm({\n      title: `Please Confirm!`,\n      icon: <ExclamationCircleOutlined />,\n      content: `Please confirm that you want to unenroll from ${\n        course.course.name\n      } as a ${\n        formattedRoles[course.role]\n      }.  The only way to get back is by contacting a professor!`,\n      onOk() {\n        withdraw(course);\n      },\n    });\n  }\n\n  const InstructorCell = ({ courseId }: { courseId: number }) => {\n    const course = useCourse(courseId);\n\n    return <>{course.course.coordinator_email}</>;\n  };\n\n  const columns = [\n    {\n      title: \"Course name\",\n      dataIndex: \"name\",\n      key: \"name\",\n    },\n    {\n      title: \"Role\",\n      dataIndex: \"role\",\n      key: \"role\",\n    },\n    {\n      title: \"Instructor\",\n      dataIndex: \"instructor\",\n      key: \"instructor\",\n      render: function createInstructorCell(courseId) {\n        return <InstructorCell courseId={courseId} />;\n      },\n    },\n    {\n      title: \"\",\n      key: \"courseId\",\n      dataIndex: \"courseId\",\n      render: function withdrawButton(courseId) {\n        return (\n          <Button\n            style={{ marginLeft: \"20px\" }}\n            type=\"primary\"\n            shape=\"round\"\n            onClick={() => {\n              showConfirm(courseId);\n            }}\n            danger\n          >\n            Withdraw\n          </Button>\n        );\n      },\n    },\n  ];\n\n  function createCourseDataSource() {\n    return profile?.courses.map((c) => ({\n      key: c.course.id,\n      name: c.course.name,\n      role: formattedRoles[c.role],\n      instructor: c.course.id,\n      courseId: c.course.id,\n    }));\n  }\n\n  return (\n    profile && (\n      <div style={{ paddingTop: \"50px\" }}>\n        <h1>Course Preferences</h1>\n        <Table columns={columns} dataSource={createCourseDataSource()} />\n      </div>\n    )\n  );\n}\n"]},"metadata":{},"sourceType":"module"}