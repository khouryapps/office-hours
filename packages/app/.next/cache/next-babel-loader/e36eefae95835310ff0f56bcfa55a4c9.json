{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { API } from \"@koh/api-client\";\nimport React, { useState } from \"react\";\nimport { Form, Input, Tooltip, Row, Select, Button, Result } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport { useRouter } from \"next/router\";\nvar HalfFormItem = styled(Form.Item).withConfig({\n  displayName: \"ApplyPage__HalfFormItem\",\n  componentId: \"dtpg8c-0\"\n})([\"width:48%;\"]);\nvar Option = Select.Option;\nexport default function ApplyPage() {\n  var _useState = useState(false),\n      submitted = _useState[0],\n      setSubmitted = _useState[1];\n\n  var _useState2 = useState(false),\n      unauthorized = _useState2[0],\n      setUnauthorized = _useState2[1];\n\n  var router = useRouter();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var _useSWR = useSWR(\"/api/v1/semesters\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", API.semesters.get());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      semesters = _useSWR.data;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var value;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return form.validateFields();\n\n            case 2:\n              value = _context2.sent;\n              value.sections = value.sections.replace(/\\s+/g, \"\").split(\",\").map(Number);\n              value.password = Object.keys(router.query).length == 1 ? Object.keys(router.query)[0] : \"\";\n              _context2.prev = 5;\n              _context2.next = 8;\n              return API.course.submitCourse(value);\n\n            case 8:\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](5);\n              setUnauthorized(true);\n\n            case 13:\n              setSubmitted(true);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 10]]);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var resubmit = function resubmit() {\n    form.resetFields();\n    setSubmitted(false);\n  };\n\n  var validateSections = function validateSections(value) {\n    var values = value.replace(/\\s+/g, \"\").split(\",\");\n\n    var _iterator = _createForOfIteratorHelper(values),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var val = _step.value;\n        if (isNaN(Number(val))) return false;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return true;\n  };\n\n  var validateCourseName = function validateCourseName(value) {\n    var split = value.split(\" \");\n    var subject = split[0] == \"CS\" || split[0] == \"DS\" || split[0] == \"CY\" || split[0] == \"IS\";\n    return split.length == 2 && subject && /^\\d+$/.test(split[1]);\n  };\n\n  if (unauthorized) {\n    return __jsx(Result, {\n      status: \"403\",\n      title: \"403\",\n      subTitle: __jsx(\"div\", null, \"Sorry, you are not authorized to submit an application.\", __jsx(\"br\", null), \"Please email\", \" \", __jsx(\"a\", {\n        href: \"mailto:help@khouryofficehours.com\"\n      }, \"help@khouryofficehours.com\"), \" \", \"for the correct URL.\")\n    });\n  }\n\n  if (submitted) {\n    return __jsx(Result, {\n      status: \"success\",\n      title: \"Application successfully submitted!\",\n      subTitle: __jsx(\"div\", null, \"Thanks for applying to use Khoury Office Hours, we'll email you with next steps as the semester gets closer.\", __jsx(\"br\", null), \"If you have any questions, feel free to email us at\", \" \", __jsx(\"a\", {\n        href: \"mailto:help@khouryofficehours.com\"\n      }, \"help@khouryofficehours.com\"), \".\"),\n      extra: [__jsx(Button, {\n        type: \"primary\",\n        key: \"info\",\n        href: \"https://info.khouryofficehours.com\"\n      }, \"Go to Info Site\"), __jsx(Button, {\n        key: \"submit\",\n        onClick: resubmit\n      }, \"Submit another course\")]\n    });\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      padding: \"3% 12%\"\n    }\n  }, __jsx(\"h1\", null, \"Apply for Khoury Office Hours\"), __jsx(\"div\", null, \"Please submit an application for each course you want to use Khoury Office Hours for.\"), __jsx(\"br\", null), __jsx(Form, {\n    form: form,\n    layout: \"vertical\",\n    initialValues: {\n      remember: true,\n      semester: \"Summer_1 2021\",\n      timezone: \"America/New_York\"\n    }\n  }, __jsx(Form.Item, {\n    label: \"Email\",\n    name: \"coordinator_email\",\n    rules: [{\n      required: true,\n      type: \"email\",\n      message: \"Please input your email.\"\n    }]\n  }, __jsx(Input, {\n    placeholder: \"example@northeastern.edu\"\n  })), __jsx(Row, {\n    justify: \"space-between\"\n  }, __jsx(HalfFormItem, {\n    label: \"Course Name\",\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: \"Please input your course name.\"\n    }, {\n      validator: function validator(_, value) {\n        return validateCourseName(value) ? Promise.resolve() : Promise.reject(new Error(\"Please enter a valid course format (e.g. CS 2500).\"));\n      }\n    }]\n  }, __jsx(Input, {\n    placeholder: \"Ex: CS 2500\"\n  })), __jsx(HalfFormItem, {\n    label: \"Section Number(s)\",\n    name: \"sections\",\n    rules: [{\n      required: true,\n      message: \"Please input your section number(s).\"\n    }, {\n      validator: function validator(_, value) {\n        return validateSections(value) ? Promise.resolve() : Promise.reject(new Error(\"Please enter a comma separated list of section numbers.\"));\n      }\n    }]\n  }, __jsx(Input, {\n    placeholder: \"Ex: 1, 2, 3\"\n  }))), __jsx(Row, {\n    justify: \"space-between\"\n  }, __jsx(HalfFormItem, {\n    label: \"Semester\",\n    name: \"semester\",\n    rules: [{\n      required: true,\n      message: \"Please select a semester.\"\n    }]\n  }, __jsx(Select, null, semesters && semesters.map(function (semester) {\n    return __jsx(Option, {\n      key: semester.id,\n      value: \"\".concat(semester.season, \" \").concat(semester.year)\n    }, \"\".concat(semester.season, \" \").concat(semester.year).replaceAll(\"_\", \" \"));\n  }))), __jsx(HalfFormItem, {\n    label: \"Campus\",\n    name: \"timezone\",\n    rules: [{\n      required: true,\n      message: \"Please select a Northeastern campus (for purpose of timezone).\"\n    }]\n  }, __jsx(Select, null, __jsx(Option, {\n    value: \"America/New_York\"\n  }, \"Boston / Charlotte\"), __jsx(Option, {\n    value: \"America/Los_Angeles\"\n  }, \"San Francisco / Seattle\"), __jsx(Option, {\n    value: \"America/Toronto\"\n  }, \"Toronto\"), __jsx(Option, {\n    value: \"America/Vancouver\"\n  }, \"Vancouver\")))), __jsx(Form.Item, {\n    label: __jsx(Row, {\n      align: \"middle\"\n    }, __jsx(\"span\", {\n      style: {\n        marginRight: 8\n      }\n    }, \"Office Hours Calendar URL\"), \" \", __jsx(Tooltip, {\n      title: __jsx(\"div\", null, \"See\", \" \", __jsx(\"a\", {\n        target: \"_blank\",\n        rel: \"noreferrer\",\n        href: \"https://info.khouryofficehours.com/coordinators-manual\"\n      }, \"here\"), \" \", \"to create your office hours calendar\")\n    }, __jsx(InfoCircleOutlined, null))),\n    name: \"icalURL\",\n    rules: [{\n      required: true,\n      type: \"url\",\n      message: \"Please input your office hours calendar URL.\"\n    }]\n  }, __jsx(Input, {\n    placeholder: \"https://calendar.google.com/calendar/ical/.../basic.ics\"\n  })), __jsx(\"br\", null), __jsx(Form.Item, null, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    onClick: handleSubmit\n  }, \"Submit\"))));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Apply/ApplyPage.tsx"],"names":["API","React","useState","Form","Input","Tooltip","Row","Select","Button","Result","InfoCircleOutlined","styled","useSWR","useRouter","HalfFormItem","Item","Option","ApplyPage","submitted","setSubmitted","unauthorized","setUnauthorized","router","useForm","form","semesters","get","data","handleSubmit","validateFields","value","sections","replace","split","map","Number","password","Object","keys","query","length","course","submitCourse","resubmit","resetFields","validateSections","values","val","isNaN","validateCourseName","subject","test","padding","remember","semester","timezone","required","type","message","validator","_","Promise","resolve","reject","Error","id","season","year","replaceAll","marginRight"],"mappings":"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","sourcesContent":["import { SubmitCourseParams } from \"@koh/common\";\nimport { API } from \"@koh/api-client\";\nimport React, { ReactElement, useState } from \"react\";\nimport { Form, Input, Tooltip, Row, Select, Button, Result } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport { useRouter } from \"next/router\";\n\nconst HalfFormItem = styled(Form.Item)`\n  width: 48%;\n`;\n\nconst { Option } = Select;\n\nexport default function ApplyPage(): ReactElement {\n  const [submitted, setSubmitted] = useState(false);\n  const [unauthorized, setUnauthorized] = useState(false);\n  const router = useRouter();\n  const [form] = Form.useForm();\n  const { data: semesters } = useSWR(\"/api/v1/semesters\", async () =>\n    API.semesters.get()\n  );\n\n  const handleSubmit = async () => {\n    const value = await form.validateFields();\n    value.sections = value.sections.replace(/\\s+/g, \"\").split(\",\").map(Number);\n    value.password =\n      Object.keys(router.query).length == 1 ? Object.keys(router.query)[0] : \"\";\n\n    try {\n      await API.course.submitCourse(value as SubmitCourseParams);\n    } catch (error) {\n      setUnauthorized(true);\n    }\n\n    setSubmitted(true);\n  };\n\n  const resubmit = () => {\n    form.resetFields();\n    setSubmitted(false);\n  };\n\n  const validateSections = (value: string): boolean => {\n    const values = value.replace(/\\s+/g, \"\").split(\",\");\n    for (const val of values) {\n      if (isNaN(Number(val))) return false;\n    }\n    return true;\n  };\n\n  const validateCourseName = (value: string): boolean => {\n    const split = value.split(\" \");\n    const subject =\n      split[0] == \"CS\" ||\n      split[0] == \"DS\" ||\n      split[0] == \"CY\" ||\n      split[0] == \"IS\";\n    return split.length == 2 && subject && /^\\d+$/.test(split[1]);\n  };\n\n  if (unauthorized) {\n    return (\n      <Result\n        status=\"403\"\n        title=\"403\"\n        subTitle={\n          <div>\n            Sorry, you are not authorized to submit an application.\n            <br />\n            Please email{\" \"}\n            <a href=\"mailto:help@khouryofficehours.com\">\n              help@khouryofficehours.com\n            </a>{\" \"}\n            for the correct URL.\n          </div>\n        }\n      />\n    );\n  }\n\n  if (submitted) {\n    return (\n      <Result\n        status=\"success\"\n        title=\"Application successfully submitted!\"\n        subTitle={\n          <div>\n            Thanks for applying to use Khoury Office Hours, we&apos;ll email you\n            with next steps as the semester gets closer.\n            <br />\n            If you have any questions, feel free to email us at{\" \"}\n            <a href=\"mailto:help@khouryofficehours.com\">\n              help@khouryofficehours.com\n            </a>\n            .\n          </div>\n        }\n        extra={[\n          <Button\n            type=\"primary\"\n            key=\"info\"\n            href=\"https://info.khouryofficehours.com\"\n          >\n            Go to Info Site\n          </Button>,\n          <Button key=\"submit\" onClick={resubmit}>\n            Submit another course\n          </Button>,\n        ]}\n      />\n    );\n  }\n\n  return (\n    <div style={{ padding: \"3% 12%\" }}>\n      <h1>Apply for Khoury Office Hours</h1>\n\n      <div>\n        Please submit an application for each course you want to use Khoury\n        Office Hours for.\n      </div>\n      <br />\n      <Form\n        form={form}\n        layout=\"vertical\"\n        initialValues={{\n          remember: true,\n          semester: \"Summer_1 2021\",\n          timezone: \"America/New_York\",\n        }}\n      >\n        <Form.Item\n          label=\"Email\"\n          name=\"coordinator_email\"\n          rules={[\n            {\n              required: true,\n              type: \"email\",\n              message: \"Please input your email.\",\n            },\n          ]}\n        >\n          <Input placeholder=\"example@northeastern.edu\" />\n        </Form.Item>\n\n        <Row justify=\"space-between\">\n          <HalfFormItem\n            label=\"Course Name\"\n            name=\"name\"\n            rules={[\n              { required: true, message: \"Please input your course name.\" },\n              {\n                validator: (_, value) =>\n                  validateCourseName(value)\n                    ? Promise.resolve()\n                    : Promise.reject(\n                        new Error(\n                          \"Please enter a valid course format (e.g. CS 2500).\"\n                        )\n                      ),\n              },\n            ]}\n          >\n            <Input placeholder=\"Ex: CS 2500\" />\n          </HalfFormItem>\n\n          <HalfFormItem\n            label=\"Section Number(s)\"\n            name=\"sections\"\n            rules={[\n              {\n                required: true,\n                message: \"Please input your section number(s).\",\n              },\n              {\n                validator: (_, value) =>\n                  validateSections(value)\n                    ? Promise.resolve()\n                    : Promise.reject(\n                        new Error(\n                          \"Please enter a comma separated list of section numbers.\"\n                        )\n                      ),\n              },\n            ]}\n          >\n            <Input placeholder=\"Ex: 1, 2, 3\" />\n          </HalfFormItem>\n        </Row>\n\n        <Row justify=\"space-between\">\n          <HalfFormItem\n            label=\"Semester\"\n            name=\"semester\"\n            rules={[{ required: true, message: \"Please select a semester.\" }]}\n          >\n            <Select>\n              {semesters &&\n                semesters.map((semester) => (\n                  <Option\n                    key={semester.id}\n                    value={`${semester.season} ${semester.year}`}\n                  >\n                    {`${semester.season} ${semester.year}`.replaceAll(\"_\", \" \")}\n                  </Option>\n                ))}\n            </Select>\n          </HalfFormItem>\n\n          <HalfFormItem\n            label=\"Campus\"\n            name=\"timezone\"\n            rules={[\n              {\n                required: true,\n                message:\n                  \"Please select a Northeastern campus (for purpose of timezone).\",\n              },\n            ]}\n          >\n            <Select>\n              <Option value=\"America/New_York\">Boston / Charlotte</Option>\n              <Option value=\"America/Los_Angeles\">\n                San Francisco / Seattle\n              </Option>\n              <Option value=\"America/Toronto\">Toronto</Option>\n              <Option value=\"America/Vancouver\">Vancouver</Option>\n            </Select>\n          </HalfFormItem>\n        </Row>\n\n        <Form.Item\n          label={\n            <Row align=\"middle\">\n              <span style={{ marginRight: 8 }}>Office Hours Calendar URL</span>{\" \"}\n              <Tooltip\n                title={\n                  <div>\n                    See{\" \"}\n                    <a\n                      target=\"_blank\"\n                      rel=\"noreferrer\"\n                      href=\"https://info.khouryofficehours.com/coordinators-manual\"\n                    >\n                      here\n                    </a>{\" \"}\n                    to create your office hours calendar\n                  </div>\n                }\n              >\n                <InfoCircleOutlined />\n              </Tooltip>\n            </Row>\n          }\n          name=\"icalURL\"\n          rules={[\n            {\n              required: true,\n              type: \"url\",\n              message: \"Please input your office hours calendar URL.\",\n            },\n          ]}\n        >\n          <Input placeholder=\"https://calendar.google.com/calendar/ical/.../basic.ics\" />\n        </Form.Item>\n\n        <br />\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}