{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _temp, _dec2, _class3, _descriptor2, _temp2, _dec3, _dec4, _class5, _descriptor3, _descriptor4, _temp3, _dec5, _dec6, _dec7, _class7, _descriptor5, _descriptor6, _descriptor7, _temp4, _dec8, _dec9, _dec10, _dec11, _dec12, _class9, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _temp5, _dec13, _dec14, _dec15, _class11, _descriptor13, _descriptor14, _descriptor15, _temp6, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _class13, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _temp7, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _class15, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _temp8, _dec34, _dec35, _dec36, _dec37, _class17, _descriptor30, _descriptor31, _descriptor32, _temp9, _dec38, _dec39, _dec40, _dec41, _dec42, _dec43, _dec44, _dec45, _dec46, _dec47, _dec48, _dec49, _dec50, _dec51, _dec52, _class19, _descriptor33, _descriptor34, _descriptor35, _descriptor36, _descriptor37, _descriptor38, _descriptor39, _temp10, _dec53, _dec54, _class21, _descriptor40, _descriptor41, _temp11, _dec55, _class23, _descriptor42, _temp12, _dec56, _dec57, _class25, _descriptor43, _descriptor44, _temp13, _dec58, _dec59, _dec60, _dec61, _dec62, _class27, _descriptor45, _descriptor46, _descriptor47, _descriptor48, _descriptor49, _temp14, _dec63, _class29, _descriptor50, _temp15, _dec64, _dec65, _dec66, _dec67, _dec68, _dec69, _dec70, _dec71, _dec72, _dec73, _class31, _descriptor51, _descriptor52, _descriptor53, _descriptor54, _descriptor55, _descriptor56, _descriptor57, _temp16, _dec74, _dec75, _dec76, _dec77, _dec78, _dec79, _dec80, _dec81, _dec82, _dec83, _dec84, _dec85, _dec86, _dec87, _class33, _descriptor58, _descriptor59, _descriptor60, _descriptor61, _descriptor62, _descriptor63, _descriptor64, _temp17, _dec88, _dec89, _dec90, _class35, _descriptor65, _descriptor66, _temp18, _dec91, _class37, _descriptor67, _temp19, _dec92, _class39, _descriptor68, _temp20, _dec93, _dec94, _dec95, _class41, _descriptor69, _descriptor70, _temp21, _dec96, _class43, _descriptor71, _temp22, _dec97, _dec98, _dec99, _dec100, _dec101, _dec102, _dec103, _dec104, _class45, _descriptor72, _descriptor73, _descriptor74, _descriptor75, _descriptor76, _descriptor77, _temp23, _dec105, _dec106, _dec107, _dec108, _class47, _descriptor78, _descriptor79, _descriptor80, _descriptor81, _temp24, _dec109, _dec110, _dec111, _class49, _descriptor82, _descriptor83, _descriptor84, _temp25, _dec112, _dec113, _dec114, _dec115, _class51, _descriptor85, _descriptor86, _descriptor87, _descriptor88, _temp26, _dec116, _class53, _descriptor89, _temp27, _dec117, _dec118, _dec119, _dec120, _dec121, _dec122, _dec123, _class55, _descriptor90, _descriptor91, _descriptor92, _descriptor93, _descriptor94, _descriptor95, _descriptor96, _temp28;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Type } from \"class-transformer\";\nimport { IsArray, IsBoolean, IsDate, IsDefined, IsEnum, IsInt, IsNotEmpty, IsNumber, IsObject, IsOptional, IsString, ValidateIf } from \"class-validator\";\nimport \"reflect-metadata\";\nexport var PROD_URL = \"https://officehours.khoury.northeastern.edu\";\nexport var STAGING_URL = \"https://staging.khouryofficehours.com\"; // Get domain. works on node and browser\n\nvar domain = function domain() {\n  var _window, _window$location;\n\n  return process.env.DOMAIN || true && ((_window = window) === null || _window === void 0 ? void 0 : (_window$location = _window.location) === null || _window$location === void 0 ? void 0 : _window$location.origin);\n};\n\nexport var getEnv = function getEnv() {\n  switch (domain()) {\n    case PROD_URL:\n      return \"production\";\n\n    case STAGING_URL:\n      return \"staging\";\n\n    default:\n      return \"dev\";\n  }\n};\nexport var isProd = function isProd() {\n  return domain() === PROD_URL;\n}; // TODO: Clean this up, move it somwhere else, use moment???\n// a - b, in minutes\n\nexport function timeDiffInMins(a, b) {\n  return (a.getTime() - b.getTime()) / (1000 * 60);\n} /////////////////////////\n// API Base Data Types //\n/////////////////////////\n// NOTE: These are not the DB data types. They are only used for the api\n\n/**\n * Represents a user.\n * @param id - The unique id of the user in our db.\n * @param email - The email string of the user if they provide it (nullable)\n * @param name - The full name of this user: First Last.\n * @param photoURL - The URL string of this user photo. This is pulled from the admin site\n * @param courses - The list of courses that the user is accociated with (as either a 'student', 'ta' or 'professor')\n * @param desktopNotifs - list of endpoints so that frontend can figure out if device is enabled\n */\n\nexport var User = (_dec = Type(function () {\n  return DesktopNotifPartial;\n}), (_class = (_temp = function User() {\n  _classCallCheck(this, User);\n\n  this.id = void 0;\n  this.email = void 0;\n  this.firstName = void 0;\n  this.lastName = void 0;\n  this.name = void 0;\n  this.photoURL = void 0;\n  this.defaultMessage = void 0;\n  this.includeDefaultMessage = void 0;\n  this.courses = void 0;\n  this.desktopNotifsEnabled = void 0;\n\n  _initializerDefineProperty(this, \"desktopNotifs\", _descriptor, this);\n\n  this.phoneNotifsEnabled = void 0;\n  this.phoneNumber = void 0;\n  this.insights = void 0;\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"desktopNotifs\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));\nexport var DesktopNotifPartial = (_dec2 = Type(function () {\n  return Date;\n}), (_class3 = (_temp2 = function DesktopNotifPartial() {\n  _classCallCheck(this, DesktopNotifPartial);\n\n  this.id = void 0;\n  this.endpoint = void 0;\n  this.name = void 0;\n\n  _initializerDefineProperty(this, \"createdAt\", _descriptor2, this);\n}, _temp2), (_descriptor2 = _applyDecoratedDescriptor(_class3.prototype, \"createdAt\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class3));\n/**\n * Contains the partial user info needed by the frontend when nested in a response\n * @param id - The unique id of the user in our db.\n * @param name - The full name of this user: First Last.\n * @param photoURL - The URL string of this user photo. This is pulled from the admin site\n */\n\nexport var UserPartial = function UserPartial() {\n  _classCallCheck(this, UserPartial);\n\n  this.id = void 0;\n  this.email = void 0;\n  this.name = void 0;\n  this.photoURL = void 0;\n};\n/**\n * Represents a partial course data needed on the front end when nested in a response.\n * @param id - The id number of this Course.\n * @param name - The subject and course number of this course. Ex: \"CS 2500\"\n */\n\n/**\n * Represents one of three possible user roles in a course.\n */\nexport var Role;\n\n(function (Role) {\n  Role[\"STUDENT\"] = \"student\";\n  Role[\"TA\"] = \"ta\";\n  Role[\"PROFESSOR\"] = \"professor\";\n})(Role || (Role = {}));\n\nvar OfficeHourPartial = (_dec3 = Type(function () {\n  return Date;\n}), _dec4 = Type(function () {\n  return Date;\n}), (_class5 = (_temp3 = function OfficeHourPartial() {\n  _classCallCheck(this, OfficeHourPartial);\n\n  this.id = void 0;\n  this.title = void 0;\n\n  _initializerDefineProperty(this, \"startTime\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"endTime\", _descriptor4, this);\n}, _temp3), (_descriptor3 = _applyDecoratedDescriptor(_class5.prototype, \"startTime\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class5.prototype, \"endTime\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class5));\n/**\n * A Queue that students can join with thier tickets.\n * @param id - The unique id number for a Queue.\n * @param course - The course that this office hours queue is for.\n * @param room - The full name of the building + room # that the current office hours queue is in.\n * @param staffList - The list of TA user's that are currently helping at office hours.\n * @param questions - The list of the students questions assocaited with the queue.\n * @param startTime - The scheduled start time of this queue based on the parsed ical.\n * @param endTime - The scheduled end time of this queue.\n */\n\n/**\n * A Queue partial to be shown on the today page.\n * @param id - The unique id number for a Queue.\n * @param room - The full name of the building + room # that the current office hours queue is in.\n * @param staffList - The list of TA user's that are currently helping at office hours.\n * @param startTime - The scheduled start time of this queue based on the parsed ical.\n * @param endTime - The scheduled end time of this queue.\n */\nexport var QueuePartial = (_dec5 = Type(function () {\n  return UserPartial;\n}), _dec6 = Type(function () {\n  return Date;\n}), _dec7 = Type(function () {\n  return Date;\n}), (_class7 = (_temp4 = function QueuePartial() {\n  _classCallCheck(this, QueuePartial);\n\n  this.id = void 0;\n  this.room = void 0;\n\n  _initializerDefineProperty(this, \"staffList\", _descriptor5, this);\n\n  this.queueSize = void 0;\n  this.notes = void 0;\n  this.isOpen = void 0;\n\n  _initializerDefineProperty(this, \"startTime\", _descriptor6, this);\n\n  _initializerDefineProperty(this, \"endTime\", _descriptor7, this);\n\n  this.allowQuestions = void 0;\n  this.isProfessorQueue = void 0;\n}, _temp4), (_descriptor5 = _applyDecoratedDescriptor(_class7.prototype, \"staffList\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class7.prototype, \"startTime\", [_dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class7.prototype, \"endTime\", [_dec7], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class7)); // Represents a list of office hours wait times of each hour of the week.\n// The first element of the array is the wait time for the first hour of Sunday, UTC.\n//   Users of the heatmap should rotate it according to their timezone.\n// INVARIANT: Must have 24*7 elements\n//\n// Wait time = -1 represents no office hours data at that time.\n\n/**\n * A Question is created when a student wants help from a TA.\n * @param id - The unique id number for a student question.\n * @param creator - The Student that has created the question.\n * @param text - The text descritipn of what he/she needs help with.\n * @param createdAt - The date string for the time that the Ticket was created. Ex: \"2020-09-12T12:00:00-04:00\"\n * @param helpedAt - The date string for the time that the TA began helping the Student.\n * @param closedAt - The date string for the time that the TA finished helping the Student.\n * @param questionType - The question type helps distinguish question for TA's and data insights.\n * @param status - The current status of the question in the queue.\n * @param position - The current position of this question in the queue.\n * @param location - The location of the particular student, to help TA's find them\n * @param isOnline - Wether or not the question will helped online or in-person\n */\nexport var Question = (_dec8 = Type(function () {\n  return UserPartial;\n}), _dec9 = Type(function () {\n  return UserPartial;\n}), _dec10 = Type(function () {\n  return Date;\n}), _dec11 = Type(function () {\n  return Date;\n}), _dec12 = Type(function () {\n  return Date;\n}), (_class9 = (_temp5 = function Question() {\n  _classCallCheck(this, Question);\n\n  this.id = void 0;\n\n  _initializerDefineProperty(this, \"creator\", _descriptor8, this);\n\n  this.text = void 0;\n\n  _initializerDefineProperty(this, \"taHelped\", _descriptor9, this);\n\n  _initializerDefineProperty(this, \"createdAt\", _descriptor10, this);\n\n  _initializerDefineProperty(this, \"helpedAt\", _descriptor11, this);\n\n  _initializerDefineProperty(this, \"closedAt\", _descriptor12, this);\n\n  this.questionType = void 0;\n  this.groupable = void 0;\n  this.status = void 0;\n  this.location = void 0;\n  this.isOnline = void 0;\n}, _temp5), (_descriptor8 = _applyDecoratedDescriptor(_class9.prototype, \"creator\", [_dec8], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor9 = _applyDecoratedDescriptor(_class9.prototype, \"taHelped\", [_dec9], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor10 = _applyDecoratedDescriptor(_class9.prototype, \"createdAt\", [_dec10], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor11 = _applyDecoratedDescriptor(_class9.prototype, \"helpedAt\", [_dec11], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor12 = _applyDecoratedDescriptor(_class9.prototype, \"closedAt\", [_dec12], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class9)); // Question Types\n\nexport var QuestionType;\n\n(function (QuestionType) {\n  QuestionType[\"Concept\"] = \"Concept\";\n  QuestionType[\"Clarification\"] = \"Clarification\";\n  QuestionType[\"Testing\"] = \"Testing\";\n  QuestionType[\"Bug\"] = \"Bug\";\n  QuestionType[\"Setup\"] = \"Setup\";\n  QuestionType[\"Other\"] = \"Other\";\n})(QuestionType || (QuestionType = {}));\n\nexport var OpenQuestionStatus;\n/**\n * Limbo statuses are awaiting some confirmation from the student\n */\n\n(function (OpenQuestionStatus) {\n  OpenQuestionStatus[\"Drafting\"] = \"Drafting\";\n  OpenQuestionStatus[\"Queued\"] = \"Queued\";\n  OpenQuestionStatus[\"Helping\"] = \"Helping\";\n  OpenQuestionStatus[\"PriorityQueued\"] = \"PriorityQueued\";\n})(OpenQuestionStatus || (OpenQuestionStatus = {}));\n\nexport var LimboQuestionStatus;\n\n(function (LimboQuestionStatus) {\n  LimboQuestionStatus[\"CantFind\"] = \"CantFind\";\n  LimboQuestionStatus[\"ReQueueing\"] = \"ReQueueing\";\n  LimboQuestionStatus[\"TADeleted\"] = \"TADeleted\";\n})(LimboQuestionStatus || (LimboQuestionStatus = {}));\n\nexport var ClosedQuestionStatus;\n\n(function (ClosedQuestionStatus) {\n  ClosedQuestionStatus[\"Resolved\"] = \"Resolved\";\n  ClosedQuestionStatus[\"DeletedDraft\"] = \"DeletedDraft\";\n  ClosedQuestionStatus[\"ConfirmedDeleted\"] = \"ConfirmedDeleted\";\n  ClosedQuestionStatus[\"Stale\"] = \"Stale\";\n})(ClosedQuestionStatus || (ClosedQuestionStatus = {}));\n\nexport var StatusInQueue = [OpenQuestionStatus.Drafting, OpenQuestionStatus.Queued];\nexport var StatusInPriorityQueue = [OpenQuestionStatus.PriorityQueued];\nexport var StatusSentToCreator = [].concat(StatusInPriorityQueue, StatusInQueue, [OpenQuestionStatus.Helping, LimboQuestionStatus.ReQueueing, LimboQuestionStatus.CantFind, LimboQuestionStatus.TADeleted]); // Ticket Status - Represents a given status of as student's ticket\n\n// an Enum-like constant that contains all the statuses for convenience.\nexport var QuestionStatusKeys = _objectSpread(_objectSpread(_objectSpread({}, OpenQuestionStatus), ClosedQuestionStatus), LimboQuestionStatus);\nexport var QuestionGroup = (_dec13 = IsInt(), _dec14 = Type(function () {\n  return Question;\n}), _dec15 = Type(function () {\n  return UserPartial;\n}), (_class11 = (_temp6 = function QuestionGroup() {\n  _classCallCheck(this, QuestionGroup);\n\n  _initializerDefineProperty(this, \"id\", _descriptor13, this);\n\n  _initializerDefineProperty(this, \"questions\", _descriptor14, this);\n\n  _initializerDefineProperty(this, \"creator\", _descriptor15, this);\n} //Might want to add a list of students in group so they can be added without a question\n, _temp6), (_descriptor13 = _applyDecoratedDescriptor(_class11.prototype, \"id\", [_dec13], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor14 = _applyDecoratedDescriptor(_class11.prototype, \"questions\", [_dec14], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor15 = _applyDecoratedDescriptor(_class11.prototype, \"creator\", [_dec15], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class11)); // /**\n//  * A Semester object, representing a schedule semester term for the purposes of a course.\n//  * @param season - The season of this semester.\n//  * @param year - The year of this semester.\n//  */\n// interface Semester {\n//   season: Season;\n//   year: number;\n// }\n\n/**\n * Represents one of the seasons in which a course can take place.\n */\n\n// =================== API Route Types ===========================\n// On backend, validated with https://docs.nestjs.com/techniques/validation\n// API route Params and Responses\n// Office Hours Response Types\nexport var GetProfileResponse = /*#__PURE__*/function (_User) {\n  _inherits(GetProfileResponse, _User);\n\n  var _super = _createSuper(GetProfileResponse);\n\n  function GetProfileResponse() {\n    _classCallCheck(this, GetProfileResponse);\n\n    return _super.apply(this, arguments);\n  }\n\n  return GetProfileResponse;\n}(User);\nexport var KhouryDataParams = (_dec16 = IsString(), _dec17 = IsString(), _dec18 = IsString(), _dec19 = IsInt(), _dec20 = IsOptional(), _dec21 = IsString(), _dec22 = IsOptional(), _dec23 = IsDefined(), _dec24 = IsOptional(), _dec25 = IsDefined(), (_class13 = (_temp7 = function KhouryDataParams() {\n  _classCallCheck(this, KhouryDataParams);\n\n  _initializerDefineProperty(this, \"email\", _descriptor16, this);\n\n  _initializerDefineProperty(this, \"first_name\", _descriptor17, this);\n\n  _initializerDefineProperty(this, \"last_name\", _descriptor18, this);\n\n  _initializerDefineProperty(this, \"campus\", _descriptor19, this);\n\n  _initializerDefineProperty(this, \"photo_url\", _descriptor20, this);\n\n  _initializerDefineProperty(this, \"courses\", _descriptor21, this);\n\n  _initializerDefineProperty(this, \"ta_courses\", _descriptor22, this);\n}, _temp7), (_descriptor16 = _applyDecoratedDescriptor(_class13.prototype, \"email\", [_dec16], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor17 = _applyDecoratedDescriptor(_class13.prototype, \"first_name\", [_dec17], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor18 = _applyDecoratedDescriptor(_class13.prototype, \"last_name\", [_dec18], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor19 = _applyDecoratedDescriptor(_class13.prototype, \"campus\", [_dec19], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor20 = _applyDecoratedDescriptor(_class13.prototype, \"photo_url\", [_dec20, _dec21], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor21 = _applyDecoratedDescriptor(_class13.prototype, \"courses\", [_dec22, _dec23], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor22 = _applyDecoratedDescriptor(_class13.prototype, \"ta_courses\", [_dec24, _dec25], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class13));\nexport var KhouryStudentCourse = (_dec26 = IsInt(), _dec27 = IsString(), _dec28 = IsBoolean(), _dec29 = IsInt(), _dec30 = IsString(), _dec31 = IsString(), _dec32 = IsString(), _dec33 = IsOptional(), (_class15 = (_temp8 = function KhouryStudentCourse() {\n  _classCallCheck(this, KhouryStudentCourse);\n\n  _initializerDefineProperty(this, \"crn\", _descriptor23, this);\n\n  _initializerDefineProperty(this, \"course\", _descriptor24, this);\n\n  _initializerDefineProperty(this, \"accelerated\", _descriptor25, this);\n\n  _initializerDefineProperty(this, \"section\", _descriptor26, this);\n\n  _initializerDefineProperty(this, \"semester\", _descriptor27, this);\n\n  _initializerDefineProperty(this, \"title\", _descriptor28, this);\n\n  _initializerDefineProperty(this, \"campus\", _descriptor29, this);\n}, _temp8), (_descriptor23 = _applyDecoratedDescriptor(_class15.prototype, \"crn\", [_dec26], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor24 = _applyDecoratedDescriptor(_class15.prototype, \"course\", [_dec27], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor25 = _applyDecoratedDescriptor(_class15.prototype, \"accelerated\", [_dec28], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor26 = _applyDecoratedDescriptor(_class15.prototype, \"section\", [_dec29], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor27 = _applyDecoratedDescriptor(_class15.prototype, \"semester\", [_dec30], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor28 = _applyDecoratedDescriptor(_class15.prototype, \"title\", [_dec31], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor29 = _applyDecoratedDescriptor(_class15.prototype, \"campus\", [_dec32, _dec33], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class15));\nexport var KhouryTACourse = (_dec34 = IsString(), _dec35 = IsString(), _dec36 = IsInt(), _dec37 = IsOptional(), (_class17 = (_temp9 = function KhouryTACourse() {\n  _classCallCheck(this, KhouryTACourse);\n\n  _initializerDefineProperty(this, \"course\", _descriptor30, this);\n\n  _initializerDefineProperty(this, \"semester\", _descriptor31, this);\n\n  _initializerDefineProperty(this, \"instructor\", _descriptor32, this);\n}, _temp9), (_descriptor30 = _applyDecoratedDescriptor(_class17.prototype, \"course\", [_dec34], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor31 = _applyDecoratedDescriptor(_class17.prototype, \"semester\", [_dec35], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor32 = _applyDecoratedDescriptor(_class17.prototype, \"instructor\", [_dec36, _dec37], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class17));\nexport var UpdateProfileParams = (_dec38 = IsBoolean(), _dec39 = IsOptional(), _dec40 = IsBoolean(), _dec41 = IsOptional(), _dec42 = ValidateIf(function (o) {\n  return o.phoneNotifsEnabled;\n}), _dec43 = IsString(), _dec44 = IsNotEmpty(), _dec45 = IsString(), _dec46 = IsOptional(), _dec47 = IsString(), _dec48 = IsOptional(), _dec49 = IsString(), _dec50 = IsOptional(), _dec51 = IsBoolean(), _dec52 = IsOptional(), (_class19 = (_temp10 = function UpdateProfileParams() {\n  _classCallCheck(this, UpdateProfileParams);\n\n  _initializerDefineProperty(this, \"desktopNotifsEnabled\", _descriptor33, this);\n\n  _initializerDefineProperty(this, \"phoneNotifsEnabled\", _descriptor34, this);\n\n  _initializerDefineProperty(this, \"phoneNumber\", _descriptor35, this);\n\n  _initializerDefineProperty(this, \"firstName\", _descriptor36, this);\n\n  _initializerDefineProperty(this, \"lastName\", _descriptor37, this);\n\n  _initializerDefineProperty(this, \"defaultMessage\", _descriptor38, this);\n\n  _initializerDefineProperty(this, \"includeDefaultMessage\", _descriptor39, this);\n}, _temp10), (_descriptor33 = _applyDecoratedDescriptor(_class19.prototype, \"desktopNotifsEnabled\", [_dec38, _dec39], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor34 = _applyDecoratedDescriptor(_class19.prototype, \"phoneNotifsEnabled\", [_dec40, _dec41], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor35 = _applyDecoratedDescriptor(_class19.prototype, \"phoneNumber\", [_dec42, _dec43, _dec44], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor36 = _applyDecoratedDescriptor(_class19.prototype, \"firstName\", [_dec45, _dec46], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor37 = _applyDecoratedDescriptor(_class19.prototype, \"lastName\", [_dec47, _dec48], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor38 = _applyDecoratedDescriptor(_class19.prototype, \"defaultMessage\", [_dec49, _dec50], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor39 = _applyDecoratedDescriptor(_class19.prototype, \"includeDefaultMessage\", [_dec51, _dec52], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class19));\nexport var GetCourseResponse = (_dec53 = Type(function () {\n  return OfficeHourPartial;\n}), _dec54 = Type(function () {\n  return QueuePartial;\n}), (_class21 = (_temp11 = function GetCourseResponse() {\n  _classCallCheck(this, GetCourseResponse);\n\n  this.id = void 0;\n  this.name = void 0;\n\n  _initializerDefineProperty(this, \"officeHours\", _descriptor40, this);\n\n  _initializerDefineProperty(this, \"queues\", _descriptor41, this);\n\n  this.coordinator_email = void 0;\n  this.heatmap = void 0;\n  this.selfEnroll = void 0;\n}, _temp11), (_descriptor40 = _applyDecoratedDescriptor(_class21.prototype, \"officeHours\", [_dec53], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor41 = _applyDecoratedDescriptor(_class21.prototype, \"queues\", [_dec54], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class21));\nexport var GetSelfEnrollResponse = function GetSelfEnrollResponse() {\n  _classCallCheck(this, GetSelfEnrollResponse);\n\n  this.courses = void 0;\n};\nexport var GetCourseOverridesRow = function GetCourseOverridesRow() {\n  _classCallCheck(this, GetCourseOverridesRow);\n\n  this.id = void 0;\n  this.role = void 0;\n  this.name = void 0;\n  this.email = void 0;\n};\nexport var GetCourseOverridesResponse = (_dec55 = Type(function () {\n  return GetCourseOverridesRow;\n}), (_class23 = (_temp12 = function GetCourseOverridesResponse() {\n  _classCallCheck(this, GetCourseOverridesResponse);\n\n  _initializerDefineProperty(this, \"data\", _descriptor42, this);\n}, _temp12), (_descriptor42 = _applyDecoratedDescriptor(_class23.prototype, \"data\", [_dec55], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class23));\nexport var UpdateCourseOverrideBody = (_dec56 = IsString(), _dec57 = IsString(), (_class25 = (_temp13 = function UpdateCourseOverrideBody() {\n  _classCallCheck(this, UpdateCourseOverrideBody);\n\n  _initializerDefineProperty(this, \"email\", _descriptor43, this);\n\n  _initializerDefineProperty(this, \"role\", _descriptor44, this);\n}, _temp13), (_descriptor43 = _applyDecoratedDescriptor(_class25.prototype, \"email\", [_dec56], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor44 = _applyDecoratedDescriptor(_class25.prototype, \"role\", [_dec57], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class25));\nexport var UpdateCourseOverrideResponse = /*#__PURE__*/function (_GetCourseOverridesRo) {\n  _inherits(UpdateCourseOverrideResponse, _GetCourseOverridesRo);\n\n  var _super2 = _createSuper(UpdateCourseOverrideResponse);\n\n  function UpdateCourseOverrideResponse() {\n    _classCallCheck(this, UpdateCourseOverrideResponse);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return UpdateCourseOverrideResponse;\n}(GetCourseOverridesRow);\nexport var GetQueueResponse = /*#__PURE__*/function (_QueuePartial) {\n  _inherits(GetQueueResponse, _QueuePartial);\n\n  var _super3 = _createSuper(GetQueueResponse);\n\n  function GetQueueResponse() {\n    _classCallCheck(this, GetQueueResponse);\n\n    return _super3.apply(this, arguments);\n  }\n\n  return GetQueueResponse;\n}(QueuePartial);\nexport var GetCourseQueuesResponse = /*#__PURE__*/function (_Array) {\n  _inherits(GetCourseQueuesResponse, _Array);\n\n  var _super4 = _createSuper(GetCourseQueuesResponse);\n\n  function GetCourseQueuesResponse() {\n    _classCallCheck(this, GetCourseQueuesResponse);\n\n    return _super4.apply(this, arguments);\n  }\n\n  return GetCourseQueuesResponse;\n}( /*#__PURE__*/_wrapNativeSuper(Array));\nexport var ListQuestionsResponse = (_dec58 = Type(function () {\n  return Question;\n}), _dec59 = Type(function () {\n  return Question;\n}), _dec60 = Type(function () {\n  return Question;\n}), _dec61 = Type(function () {\n  return Question;\n}), _dec62 = Type(function () {\n  return QuestionGroup;\n}), (_class27 = (_temp14 = function ListQuestionsResponse() {\n  _classCallCheck(this, ListQuestionsResponse);\n\n  _initializerDefineProperty(this, \"yourQuestion\", _descriptor45, this);\n\n  _initializerDefineProperty(this, \"questionsGettingHelp\", _descriptor46, this);\n\n  _initializerDefineProperty(this, \"queue\", _descriptor47, this);\n\n  _initializerDefineProperty(this, \"priorityQueue\", _descriptor48, this);\n\n  _initializerDefineProperty(this, \"groups\", _descriptor49, this);\n}, _temp14), (_descriptor45 = _applyDecoratedDescriptor(_class27.prototype, \"yourQuestion\", [_dec58], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor46 = _applyDecoratedDescriptor(_class27.prototype, \"questionsGettingHelp\", [_dec59], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor47 = _applyDecoratedDescriptor(_class27.prototype, \"queue\", [_dec60], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor48 = _applyDecoratedDescriptor(_class27.prototype, \"priorityQueue\", [_dec61], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor49 = _applyDecoratedDescriptor(_class27.prototype, \"groups\", [_dec62], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class27));\nexport var GetQuestionResponse = /*#__PURE__*/function (_Question) {\n  _inherits(GetQuestionResponse, _Question);\n\n  var _super5 = _createSuper(GetQuestionResponse);\n\n  function GetQuestionResponse() {\n    _classCallCheck(this, GetQuestionResponse);\n\n    return _super5.apply(this, arguments);\n  }\n\n  return GetQuestionResponse;\n}(Question);\nexport var GetStudentQuestionResponse = (_dec63 = IsInt(), (_class29 = (_temp15 = /*#__PURE__*/function (_Question2) {\n  _inherits(GetStudentQuestionResponse, _Question2);\n\n  var _super6 = _createSuper(GetStudentQuestionResponse);\n\n  function GetStudentQuestionResponse() {\n    var _this;\n\n    _classCallCheck(this, GetStudentQuestionResponse);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super6.call.apply(_super6, [this].concat(args));\n\n    _initializerDefineProperty(_this, \"queueId\", _descriptor50, _assertThisInitialized(_this));\n\n    return _this;\n  }\n\n  return GetStudentQuestionResponse;\n}(Question), _temp15), (_descriptor50 = _applyDecoratedDescriptor(_class29.prototype, \"queueId\", [_dec63], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class29));\nexport var CreateQuestionParams = (_dec64 = IsString(), _dec65 = IsEnum(QuestionType), _dec66 = IsOptional(), _dec67 = IsBoolean(), _dec68 = IsInt(), _dec69 = IsBoolean(), _dec70 = IsOptional(), _dec71 = IsString(), _dec72 = IsOptional(), _dec73 = IsBoolean(), (_class31 = (_temp16 = function CreateQuestionParams() {\n  _classCallCheck(this, CreateQuestionParams);\n\n  _initializerDefineProperty(this, \"text\", _descriptor51, this);\n\n  _initializerDefineProperty(this, \"questionType\", _descriptor52, this);\n\n  _initializerDefineProperty(this, \"groupable\", _descriptor53, this);\n\n  _initializerDefineProperty(this, \"queueId\", _descriptor54, this);\n\n  _initializerDefineProperty(this, \"isOnline\", _descriptor55, this);\n\n  _initializerDefineProperty(this, \"location\", _descriptor56, this);\n\n  _initializerDefineProperty(this, \"force\", _descriptor57, this);\n}, _temp16), (_descriptor51 = _applyDecoratedDescriptor(_class31.prototype, \"text\", [_dec64], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor52 = _applyDecoratedDescriptor(_class31.prototype, \"questionType\", [_dec65, _dec66], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor53 = _applyDecoratedDescriptor(_class31.prototype, \"groupable\", [_dec67], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor54 = _applyDecoratedDescriptor(_class31.prototype, \"queueId\", [_dec68], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor55 = _applyDecoratedDescriptor(_class31.prototype, \"isOnline\", [_dec69, _dec70], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor56 = _applyDecoratedDescriptor(_class31.prototype, \"location\", [_dec71, _dec72], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor57 = _applyDecoratedDescriptor(_class31.prototype, \"force\", [_dec73], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class31));\nexport var CreateQuestionResponse = /*#__PURE__*/function (_Question3) {\n  _inherits(CreateQuestionResponse, _Question3);\n\n  var _super7 = _createSuper(CreateQuestionResponse);\n\n  function CreateQuestionResponse() {\n    _classCallCheck(this, CreateQuestionResponse);\n\n    return _super7.apply(this, arguments);\n  }\n\n  return CreateQuestionResponse;\n}(Question);\nexport var UpdateQuestionParams = (_dec74 = IsString(), _dec75 = IsOptional(), _dec76 = IsEnum(QuestionType), _dec77 = IsOptional(), _dec78 = IsBoolean(), _dec79 = IsOptional(), _dec80 = IsInt(), _dec81 = IsOptional(), _dec82 = IsEnum(QuestionStatusKeys), _dec83 = IsOptional(), _dec84 = IsBoolean(), _dec85 = IsOptional(), _dec86 = IsString(), _dec87 = IsOptional(), (_class33 = (_temp17 = function UpdateQuestionParams() {\n  _classCallCheck(this, UpdateQuestionParams);\n\n  _initializerDefineProperty(this, \"text\", _descriptor58, this);\n\n  _initializerDefineProperty(this, \"questionType\", _descriptor59, this);\n\n  _initializerDefineProperty(this, \"groupable\", _descriptor60, this);\n\n  _initializerDefineProperty(this, \"queueId\", _descriptor61, this);\n\n  _initializerDefineProperty(this, \"status\", _descriptor62, this);\n\n  _initializerDefineProperty(this, \"isOnline\", _descriptor63, this);\n\n  _initializerDefineProperty(this, \"location\", _descriptor64, this);\n}, _temp17), (_descriptor58 = _applyDecoratedDescriptor(_class33.prototype, \"text\", [_dec74, _dec75], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor59 = _applyDecoratedDescriptor(_class33.prototype, \"questionType\", [_dec76, _dec77], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor60 = _applyDecoratedDescriptor(_class33.prototype, \"groupable\", [_dec78, _dec79], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor61 = _applyDecoratedDescriptor(_class33.prototype, \"queueId\", [_dec80, _dec81], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor62 = _applyDecoratedDescriptor(_class33.prototype, \"status\", [_dec82, _dec83], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor63 = _applyDecoratedDescriptor(_class33.prototype, \"isOnline\", [_dec84, _dec85], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor64 = _applyDecoratedDescriptor(_class33.prototype, \"location\", [_dec86, _dec87], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class33));\nexport var UpdateQuestionResponse = /*#__PURE__*/function (_Question4) {\n  _inherits(UpdateQuestionResponse, _Question4);\n\n  var _super8 = _createSuper(UpdateQuestionResponse);\n\n  function UpdateQuestionResponse() {\n    _classCallCheck(this, UpdateQuestionResponse);\n\n    return _super8.apply(this, arguments);\n  }\n\n  return UpdateQuestionResponse;\n}(Question);\nexport var GroupQuestionsParams = (_dec88 = IsArray(), _dec89 = Type(function () {\n  return Number;\n}), _dec90 = IsInt(), (_class35 = (_temp18 = function GroupQuestionsParams() {\n  _classCallCheck(this, GroupQuestionsParams);\n\n  _initializerDefineProperty(this, \"questionIds\", _descriptor65, this);\n\n  _initializerDefineProperty(this, \"queueId\", _descriptor66, this);\n}, _temp18), (_descriptor65 = _applyDecoratedDescriptor(_class35.prototype, \"questionIds\", [_dec88, _dec89], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor66 = _applyDecoratedDescriptor(_class35.prototype, \"queueId\", [_dec90], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class35));\nexport var ResolveGroupParams = (_dec91 = IsInt(), (_class37 = (_temp19 = function ResolveGroupParams() {\n  _classCallCheck(this, ResolveGroupParams);\n\n  _initializerDefineProperty(this, \"queueId\", _descriptor67, this);\n}, _temp19), (_descriptor67 = _applyDecoratedDescriptor(_class37.prototype, \"queueId\", [_dec91], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class37));\nexport var TACheckoutResponse = (_dec92 = Type(function () {\n  return Date;\n}), (_class39 = (_temp20 = function TACheckoutResponse() {\n  _classCallCheck(this, TACheckoutResponse);\n\n  this.queueId = void 0;\n  this.canClearQueue = void 0;\n\n  _initializerDefineProperty(this, \"nextOfficeHourTime\", _descriptor68, this);\n}, _temp20), (_descriptor68 = _applyDecoratedDescriptor(_class39.prototype, \"nextOfficeHourTime\", [_dec92], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class39));\nexport var UpdateQueueParams = (_dec93 = IsString(), _dec94 = IsOptional(), _dec95 = IsBoolean(), (_class41 = (_temp21 = function UpdateQueueParams() {\n  _classCallCheck(this, UpdateQueueParams);\n\n  _initializerDefineProperty(this, \"notes\", _descriptor69, this);\n\n  _initializerDefineProperty(this, \"allowQuestions\", _descriptor70, this);\n}, _temp21), (_descriptor69 = _applyDecoratedDescriptor(_class41.prototype, \"notes\", [_dec93, _dec94], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor70 = _applyDecoratedDescriptor(_class41.prototype, \"allowQuestions\", [_dec95], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class41));\nexport var TACheckinTimesResponse = (_dec96 = Type(function () {\n  return TACheckinPair;\n}), (_class43 = (_temp22 = function TACheckinTimesResponse() {\n  _classCallCheck(this, TACheckinTimesResponse);\n\n  _initializerDefineProperty(this, \"taCheckinTimes\", _descriptor71, this);\n}, _temp22), (_descriptor71 = _applyDecoratedDescriptor(_class43.prototype, \"taCheckinTimes\", [_dec96], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class43));\nexport var TACheckinPair = (_dec97 = IsString(), _dec98 = IsDate(), _dec99 = Type(function () {\n  return Date;\n}), _dec100 = IsDate(), _dec101 = Type(function () {\n  return Date;\n}), _dec102 = IsBoolean(), _dec103 = IsBoolean(), _dec104 = IsNumber(), (_class45 = (_temp23 = function TACheckinPair() {\n  _classCallCheck(this, TACheckinPair);\n\n  _initializerDefineProperty(this, \"name\", _descriptor72, this);\n\n  _initializerDefineProperty(this, \"checkinTime\", _descriptor73, this);\n\n  _initializerDefineProperty(this, \"checkoutTime\", _descriptor74, this);\n\n  _initializerDefineProperty(this, \"forced\", _descriptor75, this);\n\n  _initializerDefineProperty(this, \"inProgress\", _descriptor76, this);\n\n  _initializerDefineProperty(this, \"numHelped\", _descriptor77, this);\n}, _temp23), (_descriptor72 = _applyDecoratedDescriptor(_class45.prototype, \"name\", [_dec97], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor73 = _applyDecoratedDescriptor(_class45.prototype, \"checkinTime\", [_dec98, _dec99], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor74 = _applyDecoratedDescriptor(_class45.prototype, \"checkoutTime\", [_dec100, _dec101], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor75 = _applyDecoratedDescriptor(_class45.prototype, \"forced\", [_dec102], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor76 = _applyDecoratedDescriptor(_class45.prototype, \"inProgress\", [_dec103], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor77 = _applyDecoratedDescriptor(_class45.prototype, \"numHelped\", [_dec104], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class45));\nexport var AlertType;\n\n(function (AlertType) {\n  AlertType[\"REPHRASE_QUESTION\"] = \"rephraseQuestion\";\n})(AlertType || (AlertType = {}));\n\nexport var AlertPayload = function AlertPayload() {\n  _classCallCheck(this, AlertPayload);\n};\nexport var Alert = (_dec105 = IsEnum(AlertType), _dec106 = IsDate(), _dec107 = Type(function () {\n  return AlertPayload;\n}), _dec108 = IsInt(), (_class47 = (_temp24 = function Alert() {\n  _classCallCheck(this, Alert);\n\n  _initializerDefineProperty(this, \"alertType\", _descriptor78, this);\n\n  _initializerDefineProperty(this, \"sent\", _descriptor79, this);\n\n  _initializerDefineProperty(this, \"payload\", _descriptor80, this);\n\n  _initializerDefineProperty(this, \"id\", _descriptor81, this);\n}, _temp24), (_descriptor78 = _applyDecoratedDescriptor(_class47.prototype, \"alertType\", [_dec105], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor79 = _applyDecoratedDescriptor(_class47.prototype, \"sent\", [_dec106], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor80 = _applyDecoratedDescriptor(_class47.prototype, \"payload\", [_dec107], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor81 = _applyDecoratedDescriptor(_class47.prototype, \"id\", [_dec108], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class47));\nexport var RephraseQuestionPayload = (_dec109 = IsInt(), _dec110 = IsInt(), _dec111 = IsInt(), (_class49 = (_temp25 = /*#__PURE__*/function (_AlertPayload) {\n  _inherits(RephraseQuestionPayload, _AlertPayload);\n\n  var _super9 = _createSuper(RephraseQuestionPayload);\n\n  function RephraseQuestionPayload() {\n    var _this2;\n\n    _classCallCheck(this, RephraseQuestionPayload);\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this2 = _super9.call.apply(_super9, [this].concat(args));\n\n    _initializerDefineProperty(_this2, \"questionId\", _descriptor82, _assertThisInitialized(_this2));\n\n    _initializerDefineProperty(_this2, \"queueId\", _descriptor83, _assertThisInitialized(_this2));\n\n    _initializerDefineProperty(_this2, \"courseId\", _descriptor84, _assertThisInitialized(_this2));\n\n    return _this2;\n  }\n\n  return RephraseQuestionPayload;\n}(AlertPayload), _temp25), (_descriptor82 = _applyDecoratedDescriptor(_class49.prototype, \"questionId\", [_dec109], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor83 = _applyDecoratedDescriptor(_class49.prototype, \"queueId\", [_dec110], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor84 = _applyDecoratedDescriptor(_class49.prototype, \"courseId\", [_dec111], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class49));\nexport var CreateAlertParams = (_dec112 = IsEnum(AlertType), _dec113 = IsInt(), _dec114 = IsObject(), _dec115 = IsInt(), (_class51 = (_temp26 = function CreateAlertParams() {\n  _classCallCheck(this, CreateAlertParams);\n\n  _initializerDefineProperty(this, \"alertType\", _descriptor85, this);\n\n  _initializerDefineProperty(this, \"courseId\", _descriptor86, this);\n\n  _initializerDefineProperty(this, \"payload\", _descriptor87, this);\n\n  _initializerDefineProperty(this, \"targetUserId\", _descriptor88, this);\n}, _temp26), (_descriptor85 = _applyDecoratedDescriptor(_class51.prototype, \"alertType\", [_dec112], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor86 = _applyDecoratedDescriptor(_class51.prototype, \"courseId\", [_dec113], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor87 = _applyDecoratedDescriptor(_class51.prototype, \"payload\", [_dec114], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor88 = _applyDecoratedDescriptor(_class51.prototype, \"targetUserId\", [_dec115], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class51));\nexport var CreateAlertResponse = /*#__PURE__*/function (_Alert) {\n  _inherits(CreateAlertResponse, _Alert);\n\n  var _super10 = _createSuper(CreateAlertResponse);\n\n  function CreateAlertResponse() {\n    _classCallCheck(this, CreateAlertResponse);\n\n    return _super10.apply(this, arguments);\n  }\n\n  return CreateAlertResponse;\n}(Alert);\nexport var GetAlertsResponse = (_dec116 = Type(function () {\n  return Alert;\n}), (_class53 = (_temp27 = function GetAlertsResponse() {\n  _classCallCheck(this, GetAlertsResponse);\n\n  _initializerDefineProperty(this, \"alerts\", _descriptor89, this);\n}, _temp27), (_descriptor89 = _applyDecoratedDescriptor(_class53.prototype, \"alerts\", [_dec116], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class53));\nexport var SubmitCourseParams = (_dec117 = IsString(), _dec118 = IsString(), _dec119 = IsArray(), _dec120 = IsString(), _dec121 = IsString(), _dec122 = IsString(), _dec123 = IsString(), (_class55 = (_temp28 = function SubmitCourseParams() {\n  _classCallCheck(this, SubmitCourseParams);\n\n  _initializerDefineProperty(this, \"coordinator_email\", _descriptor90, this);\n\n  _initializerDefineProperty(this, \"name\", _descriptor91, this);\n\n  _initializerDefineProperty(this, \"sections\", _descriptor92, this);\n\n  _initializerDefineProperty(this, \"semester\", _descriptor93, this);\n\n  _initializerDefineProperty(this, \"timezone\", _descriptor94, this);\n\n  _initializerDefineProperty(this, \"icalURL\", _descriptor95, this);\n\n  _initializerDefineProperty(this, \"password\", _descriptor96, this);\n}, _temp28), (_descriptor90 = _applyDecoratedDescriptor(_class55.prototype, \"coordinator_email\", [_dec117], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor91 = _applyDecoratedDescriptor(_class55.prototype, \"name\", [_dec118], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor92 = _applyDecoratedDescriptor(_class55.prototype, \"sections\", [_dec119], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor93 = _applyDecoratedDescriptor(_class55.prototype, \"semester\", [_dec120], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor94 = _applyDecoratedDescriptor(_class55.prototype, \"timezone\", [_dec121], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor95 = _applyDecoratedDescriptor(_class55.prototype, \"icalURL\", [_dec122], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor96 = _applyDecoratedDescriptor(_class55.prototype, \"password\", [_dec123], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class55));\nexport var SemesterPartial = function SemesterPartial() {\n  _classCallCheck(this, SemesterPartial);\n\n  this.id = void 0;\n  this.season = void 0;\n  this.year = void 0;\n};\nexport var SSEQueueResponse = function SSEQueueResponse() {\n  _classCallCheck(this, SSEQueueResponse);\n\n  this.queue = void 0;\n  this.questions = void 0;\n};\nexport var InsightComponent;\n\n(function (InsightComponent) {\n  InsightComponent[\"SimpleDisplay\"] = \"SimpleDisplay\";\n  InsightComponent[\"BarChart\"] = \"BarChart\";\n  InsightComponent[\"SimpleTable\"] = \"SimpleTable\";\n})(InsightComponent || (InsightComponent = {}));\n\nexport var ERROR_MESSAGES = {\n  courseController: {\n    checkIn: {\n      cannotCreateNewQueueIfNotProfessor: \"You can't create a new queue if you're not a professor\",\n      cannotCheckIntoMultipleQueues: \"Cannot check into multiple queues at the same time\"\n    },\n    courseNotFound: \"The course was not found\",\n    courseOfficeHourError: \"Unable to find a course's office hours\",\n    courseHeatMapError: \"Unable to get course's cached heatmap\",\n    courseModelError: \"Course Model not found\",\n    noUserFound: \"No user found with given email\",\n    noSemesterFound: \"No semester exists for the submitted course\",\n    updatedQueueError: \"Error updating a course queue\",\n    queuesNotFound: \"Queues not found\",\n    queueNotFound: \"Queue not found\",\n    saveQueueError: \"Unable to save queue\",\n    clearQueueError: \"Unable to determine if queue can be cleared\",\n    createEventError: \"An error occurred while creating an event\",\n    icalCalendarUpdate: \"Unable to update calendar\",\n    checkInTime: \"Unable to get TA check in times\",\n    removeCourse: \"Error occurred while trying to remove a course\",\n    createCourse: \"Error occurred while trying to create a course\",\n    updateCourse: \"Error occurred while trying to update a course\",\n    createCourseMappings: \"Unable to create a course mappings\",\n    invalidApplyURL: \"You are unauthorized to submit an application. Please email help@khouryofficehours.com for the correct URL.\"\n  },\n  questionController: {\n    createQuestion: {\n      invalidQueue: \"Posted to an invalid queue\",\n      noNewQuestions: \"Queue not allowing new questions\",\n      closedQueue: \"Queue is closed\",\n      oneQuestionAtATime: \"You can't create more than one question at a time.\"\n    },\n    updateQuestion: {\n      fsmViolation: function fsmViolation(role, questionStatus, bodyStatus) {\n        return \"\".concat(role, \" cannot change status from \").concat(questionStatus, \" to \").concat(bodyStatus);\n      },\n      taOnlyEditQuestionStatus: \"TA/Professors can only edit question status\",\n      otherTAHelping: \"Another TA is currently helping with this question\",\n      otherTAResolved: \"Another TA has already resolved this question\",\n      taHelpingOther: \"TA is already helping someone else\",\n      loginUserCantEdit: \"Logged-in user does not have edit access\"\n    },\n    groupQuestions: {\n      notGroupable: \"One or more of the questions is not groupable\"\n    },\n    saveQError: \"Unable to save a question\",\n    notFound: \"Question not found\",\n    unableToNotifyUser: \"Unable to notify user\"\n  },\n  loginController: {\n    receiveDataFromKhoury: \"Invalid request signature\",\n    invalidPayload: \"The decoded JWT payload is invalid\",\n    invalidTempJWTToken: \"Error occurred while signing a JWT token\",\n    addUserFromKhoury: \"Error occurred while translating account from Khoury to Office Hours\"\n  },\n  notificationController: {\n    messageNotFromTwilio: \"Message not from Twilio\"\n  },\n  notificationService: {\n    registerPhone: \"phone number invalid\"\n  },\n  questionRoleGuard: {\n    questionNotFound: \"Question not found\",\n    queueOfQuestionNotFound: \"Cannot find queue of question\",\n    queueDoesNotExist: \"This queue does not exist!\"\n  },\n  queueController: {\n    getQueue: \"An error occurred while trying to retrieve a Queue\",\n    getQuestions: \"Unable to get questions from queue\",\n    saveQueue: \"Unable to save queue\",\n    cleanQueue: \"Unable to clean queue\"\n  },\n  queueRoleGuard: {\n    queueNotFound: \"Queue not found\"\n  },\n  releaseNotesController: {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    releaseNotesTime: function releaseNotesTime(e) {\n      return \"Error Parsing release notes time: \" + e;\n    }\n  },\n  insightsController: {\n    insightUnathorized: \"User is not authorized to view this insight\",\n    insightNameNotFound: \"The insight requested was not found\"\n  },\n  roleGuard: {\n    notLoggedIn: \"Must be logged in\",\n    noCourseIdFound: \"No courseid found\",\n    notInCourse: \"Not In This Course\",\n    mustBeRoleToJoinCourse: function mustBeRoleToJoinCourse(roles) {\n      return \"You must have one of roles [\".concat(roles.join(\", \"), \"] to access this course\");\n    }\n  },\n  profileController: {\n    accountNotAvailable: \"The user account is undefined\",\n    userResponseNotFound: \"The user response was not found\",\n    noDiskSpace: \"There is no disk space left to store an image. Please immediately contact your course staff and let them know. They will contact the Khoury Office Hours team as soon as possible.\"\n  },\n  alertController: {\n    duplicateAlert: \"This alert has already been sent\",\n    notActiveAlert: \"This is not an alert that's open for the current user\"\n  },\n  sseService: {\n    getSubClient: \"Unable to get the redis subscriber client\",\n    getDBClient: \"Unable to get the redis database client\",\n    getPubClient: \"Unable to get publisher client\",\n    moduleDestroy: \"Unable to destroy the redis module\",\n    cleanupConnection: \"Unable to cleanup the connection\",\n    clientIdSubscribe: \"Client ID not found during subscribing to client\",\n    subscribe: \"Unable to subscribe to the client\",\n    unsubscribe: \"Unable to unsubscribe from the client\",\n    removeFromRoom: \"Error removing from redis room\",\n    directConnections: \"Unable to cleanup direct connections\",\n    roomMembers: \"Unable to get room members\",\n    serialize: \"Unable to serialize payload\",\n    publish: \"Publisher client is unable to publish\",\n    clientIdNotFound: \"Client ID not found during subscribing to client\"\n  }\n};","map":{"version":3,"sources":["/var/www/source/node_modules/@koh/common/index.ts"],"names":["Type","IsArray","IsBoolean","IsDate","IsDefined","IsEnum","IsInt","IsNotEmpty","IsNumber","IsObject","IsOptional","IsString","ValidateIf","PROD_URL","STAGING_URL","domain","process","env","DOMAIN","window","location","origin","getEnv","isProd","timeDiffInMins","a","b","getTime","User","DesktopNotifPartial","id","email","firstName","lastName","name","photoURL","defaultMessage","includeDefaultMessage","courses","desktopNotifsEnabled","phoneNotifsEnabled","phoneNumber","insights","Date","endpoint","UserPartial","Role","OfficeHourPartial","title","QueuePartial","room","queueSize","notes","isOpen","allowQuestions","isProfessorQueue","Question","text","questionType","groupable","status","isOnline","QuestionType","OpenQuestionStatus","LimboQuestionStatus","ClosedQuestionStatus","StatusInQueue","Drafting","Queued","StatusInPriorityQueue","PriorityQueued","StatusSentToCreator","Helping","ReQueueing","CantFind","TADeleted","QuestionStatusKeys","QuestionGroup","GetProfileResponse","KhouryDataParams","KhouryStudentCourse","KhouryTACourse","UpdateProfileParams","o","GetCourseResponse","coordinator_email","heatmap","selfEnroll","GetSelfEnrollResponse","GetCourseOverridesRow","role","GetCourseOverridesResponse","UpdateCourseOverrideBody","UpdateCourseOverrideResponse","GetQueueResponse","GetCourseQueuesResponse","Array","ListQuestionsResponse","GetQuestionResponse","GetStudentQuestionResponse","CreateQuestionParams","CreateQuestionResponse","UpdateQuestionParams","UpdateQuestionResponse","GroupQuestionsParams","Number","ResolveGroupParams","TACheckoutResponse","queueId","canClearQueue","UpdateQueueParams","TACheckinTimesResponse","TACheckinPair","AlertType","AlertPayload","Alert","RephraseQuestionPayload","CreateAlertParams","CreateAlertResponse","GetAlertsResponse","SubmitCourseParams","SemesterPartial","season","year","SSEQueueResponse","queue","questions","InsightComponent","ERROR_MESSAGES","courseController","checkIn","cannotCreateNewQueueIfNotProfessor","cannotCheckIntoMultipleQueues","courseNotFound","courseOfficeHourError","courseHeatMapError","courseModelError","noUserFound","noSemesterFound","updatedQueueError","queuesNotFound","queueNotFound","saveQueueError","clearQueueError","createEventError","icalCalendarUpdate","checkInTime","removeCourse","createCourse","updateCourse","createCourseMappings","invalidApplyURL","questionController","createQuestion","invalidQueue","noNewQuestions","closedQueue","oneQuestionAtATime","updateQuestion","fsmViolation","questionStatus","bodyStatus","taOnlyEditQuestionStatus","otherTAHelping","otherTAResolved","taHelpingOther","loginUserCantEdit","groupQuestions","notGroupable","saveQError","notFound","unableToNotifyUser","loginController","receiveDataFromKhoury","invalidPayload","invalidTempJWTToken","addUserFromKhoury","notificationController","messageNotFromTwilio","notificationService","registerPhone","questionRoleGuard","questionNotFound","queueOfQuestionNotFound","queueDoesNotExist","queueController","getQueue","getQuestions","saveQueue","cleanQueue","queueRoleGuard","releaseNotesController","releaseNotesTime","e","insightsController","insightUnathorized","insightNameNotFound","roleGuard","notLoggedIn","noCourseIdFound","notInCourse","mustBeRoleToJoinCourse","roles","join","profileController","accountNotAvailable","userResponseNotFound","noDiskSpace","alertController","duplicateAlert","notActiveAlert","sseService","getSubClient","getDBClient","getPubClient","moduleDestroy","cleanupConnection","clientIdSubscribe","subscribe","unsubscribe","removeFromRoom","directConnections","roomMembers","serialize","publish","clientIdNotFound"],"mappings":"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","sourcesContent":["import { Type } from \"class-transformer\";\nimport {\n  IsArray,\n  IsBoolean,\n  IsDate,\n  IsDefined,\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n  ValidateIf,\n} from \"class-validator\";\nimport \"reflect-metadata\";\n\nexport const PROD_URL = \"https://officehours.khoury.northeastern.edu\";\nexport const STAGING_URL = \"https://staging.khouryofficehours.com\";\n// Get domain. works on node and browser\nconst domain = (): string | false =>\n  process.env.DOMAIN ||\n  (typeof window !== \"undefined\" && window?.location?.origin);\nexport const getEnv = (): \"production\" | \"staging\" | \"dev\" => {\n  switch (domain()) {\n    case PROD_URL:\n      return \"production\";\n    case STAGING_URL:\n      return \"staging\";\n    default:\n      return \"dev\";\n  }\n};\nexport const isProd = (): boolean => domain() === PROD_URL;\n\n// TODO: Clean this up, move it somwhere else, use moment???\n// a - b, in minutes\nexport function timeDiffInMins(a: Date, b: Date): number {\n  return (a.getTime() - b.getTime()) / (1000 * 60);\n}\n\n/////////////////////////\n// API Base Data Types //\n/////////////////////////\n\n// NOTE: These are not the DB data types. They are only used for the api\n\n/**\n * Represents a user.\n * @param id - The unique id of the user in our db.\n * @param email - The email string of the user if they provide it (nullable)\n * @param name - The full name of this user: First Last.\n * @param photoURL - The URL string of this user photo. This is pulled from the admin site\n * @param courses - The list of courses that the user is accociated with (as either a 'student', 'ta' or 'professor')\n * @param desktopNotifs - list of endpoints so that frontend can figure out if device is enabled\n */\nexport class User {\n  id!: number;\n  email!: string;\n  firstName?: string;\n  lastName?: string;\n  name!: string;\n  photoURL!: string;\n  defaultMessage?: string;\n  includeDefaultMessage!: boolean;\n  courses!: UserCourse[];\n  desktopNotifsEnabled!: boolean;\n  @Type(() => DesktopNotifPartial)\n  desktopNotifs!: DesktopNotifPartial[];\n  phoneNotifsEnabled!: boolean;\n  phoneNumber!: string;\n  insights!: string[];\n}\n\nexport class DesktopNotifPartial {\n  id!: number;\n  endpoint!: string;\n  name?: string;\n  @Type(() => Date)\n  createdAt!: Date;\n}\n\n/**\n * Contains the partial user info needed by the frontend when nested in a response\n * @param id - The unique id of the user in our db.\n * @param name - The full name of this user: First Last.\n * @param photoURL - The URL string of this user photo. This is pulled from the admin site\n */\nexport class UserPartial {\n  id!: number;\n  email?: string;\n  name?: string;\n  photoURL?: string;\n}\n\n/**\n * Represents a partial course data needed on the front end when nested in a response.\n * @param id - The id number of this Course.\n * @param name - The subject and course number of this course. Ex: \"CS 2500\"\n */\nexport type CoursePartial = {\n  id: number;\n  name: string;\n};\n\n/**\n * Represents a course that a user is accociated with and their role in that course\n * @param course - The course the user accociated with.\n * @param role - The user's role in the course.\n */\nexport type UserCourse = {\n  course: CoursePartial;\n  role: Role;\n};\n\n/**\n * Represents one of three possible user roles in a course.\n */\nexport enum Role {\n  STUDENT = \"student\",\n  TA = \"ta\",\n  PROFESSOR = \"professor\",\n}\n\nclass OfficeHourPartial {\n  id!: number;\n  title!: string;\n\n  @Type(() => Date)\n  startTime!: Date;\n\n  @Type(() => Date)\n  endTime!: Date;\n}\n\n/**\n * A Queue that students can join with thier tickets.\n * @param id - The unique id number for a Queue.\n * @param course - The course that this office hours queue is for.\n * @param room - The full name of the building + room # that the current office hours queue is in.\n * @param staffList - The list of TA user's that are currently helping at office hours.\n * @param questions - The list of the students questions assocaited with the queue.\n * @param startTime - The scheduled start time of this queue based on the parsed ical.\n * @param endTime - The scheduled end time of this queue.\n */\nexport interface Queue {\n  id: number;\n  course: CoursePartial;\n  room: string;\n  staffList: UserPartial[];\n  questions: Question[];\n  startTime?: Date;\n  endTime?: Date;\n  allowQuestions: boolean;\n}\n\n/**\n * A Queue partial to be shown on the today page.\n * @param id - The unique id number for a Queue.\n * @param room - The full name of the building + room # that the current office hours queue is in.\n * @param staffList - The list of TA user's that are currently helping at office hours.\n * @param startTime - The scheduled start time of this queue based on the parsed ical.\n * @param endTime - The scheduled end time of this queue.\n */\nexport class QueuePartial {\n  id!: number;\n  room!: string;\n\n  @Type(() => UserPartial)\n  staffList!: UserPartial[];\n\n  queueSize!: number;\n  notes?: string;\n  isOpen!: boolean;\n\n  @Type(() => Date)\n  startTime?: Date;\n\n  @Type(() => Date)\n  endTime?: Date;\n\n  allowQuestions!: boolean;\n\n  isProfessorQueue!: boolean;\n}\n\n// Represents a list of office hours wait times of each hour of the week.\n// The first element of the array is the wait time for the first hour of Sunday, UTC.\n//   Users of the heatmap should rotate it according to their timezone.\n// INVARIANT: Must have 24*7 elements\n//\n// Wait time = -1 represents no office hours data at that time.\nexport type Heatmap = Array<number>;\n\n/**\n * A Question is created when a student wants help from a TA.\n * @param id - The unique id number for a student question.\n * @param creator - The Student that has created the question.\n * @param text - The text descritipn of what he/she needs help with.\n * @param createdAt - The date string for the time that the Ticket was created. Ex: \"2020-09-12T12:00:00-04:00\"\n * @param helpedAt - The date string for the time that the TA began helping the Student.\n * @param closedAt - The date string for the time that the TA finished helping the Student.\n * @param questionType - The question type helps distinguish question for TA's and data insights.\n * @param status - The current status of the question in the queue.\n * @param position - The current position of this question in the queue.\n * @param location - The location of the particular student, to help TA's find them\n * @param isOnline - Wether or not the question will helped online or in-person\n */\nexport class Question {\n  id!: number;\n\n  @Type(() => UserPartial)\n  creator!: UserPartial;\n\n  text?: string;\n\n  @Type(() => UserPartial)\n  taHelped?: UserPartial;\n\n  @Type(() => Date)\n  createdAt!: Date;\n\n  @Type(() => Date)\n  helpedAt?: Date;\n\n  @Type(() => Date)\n  closedAt?: Date;\n  questionType?: QuestionType;\n  groupable!: boolean;\n  status!: QuestionStatus;\n  location?: string;\n  isOnline?: boolean;\n}\n\n// Question Types\nexport enum QuestionType {\n  Concept = \"Concept\",\n  Clarification = \"Clarification\",\n  Testing = \"Testing\",\n  Bug = \"Bug\",\n  Setup = \"Setup\",\n  Other = \"Other\",\n}\n\nexport enum OpenQuestionStatus {\n  Drafting = \"Drafting\",\n  Queued = \"Queued\",\n  Helping = \"Helping\",\n  PriorityQueued = \"PriorityQueued\",\n}\n\n/**\n * Limbo statuses are awaiting some confirmation from the student\n */\nexport enum LimboQuestionStatus {\n  CantFind = \"CantFind\", // represents when a student can't be found by a TA\n  ReQueueing = \"ReQueueing\", // represents when a TA wants to get back to a student later and give them the option to be put into the priority queue\n  TADeleted = \"TADeleted\", // When a TA deletes a question for a multitude of reasons\n}\n\nexport enum ClosedQuestionStatus {\n  Resolved = \"Resolved\",\n  DeletedDraft = \"DeletedDraft\",\n  ConfirmedDeleted = \"ConfirmedDeleted\",\n  Stale = \"Stale\",\n}\n\nexport const StatusInQueue = [\n  OpenQuestionStatus.Drafting,\n  OpenQuestionStatus.Queued,\n];\n\nexport const StatusInPriorityQueue = [OpenQuestionStatus.PriorityQueued];\n\nexport const StatusSentToCreator = [\n  ...StatusInPriorityQueue,\n  ...StatusInQueue,\n  OpenQuestionStatus.Helping,\n  LimboQuestionStatus.ReQueueing,\n  LimboQuestionStatus.CantFind,\n  LimboQuestionStatus.TADeleted,\n];\n\n// Ticket Status - Represents a given status of as student's ticket\nexport type QuestionStatus = keyof typeof QuestionStatusKeys;\n// an Enum-like constant that contains all the statuses for convenience.\nexport const QuestionStatusKeys = {\n  ...OpenQuestionStatus,\n  ...ClosedQuestionStatus,\n  ...LimboQuestionStatus,\n};\n\nexport class QuestionGroup {\n  @IsInt()\n  id!: number;\n\n  @Type(() => Question)\n  questions!: Array<Question>;\n\n  @Type(() => UserPartial)\n  creator!: UserPartial;\n\n  //Might want to add a list of students in group so they can be added without a question\n}\n\n// /**\n//  * A Semester object, representing a schedule semester term for the purposes of a course.\n//  * @param season - The season of this semester.\n//  * @param year - The year of this semester.\n//  */\n// interface Semester {\n//   season: Season;\n//   year: number;\n// }\n\n/**\n * Represents one of the seasons in which a course can take place.\n */\nexport type Season =\n  | \"Fall\"\n  | \"Spring\"\n  | \"Summer_1\"\n  | \"Summer_2\"\n  | \"Summer_Full\";\n\nexport type DesktopNotifBody = {\n  endpoint: string;\n  expirationTime?: number;\n  keys: {\n    p256dh: string;\n    auth: string;\n  };\n  name?: string;\n};\n\nexport type PhoneNotifBody = {\n  phoneNumber: string;\n};\n\n// =================== API Route Types ===========================\n// On backend, validated with https://docs.nestjs.com/techniques/validation\n// API route Params and Responses\n\n// Office Hours Response Types\nexport class GetProfileResponse extends User {}\n\nexport class KhouryDataParams {\n  @IsString()\n  email!: string;\n\n  @IsString()\n  first_name!: string;\n\n  @IsString()\n  last_name!: string;\n\n  @IsInt()\n  campus!: string;\n\n  @IsOptional()\n  @IsString()\n  photo_url!: string;\n\n  @IsOptional()\n  @IsDefined() // TODO: use ValidateNested instead, for some reason it's crunked\n  courses!: KhouryStudentCourse[];\n\n  @IsOptional()\n  @IsDefined() // TODO: use ValidateNested instead, for some reason it's crunked\n  ta_courses!: KhouryTACourse[];\n}\n\nexport class KhouryStudentCourse {\n  @IsInt()\n  crn!: number;\n\n  @IsString()\n  course!: string;\n\n  @IsBoolean()\n  accelerated!: boolean;\n\n  @IsInt()\n  section!: number;\n\n  @IsString()\n  semester!: string;\n\n  @IsString()\n  title!: string;\n\n  @IsString()\n  @IsOptional()\n  campus!: string;\n}\n\nexport class KhouryTACourse {\n  @IsString()\n  course!: string;\n\n  @IsString()\n  semester!: string;\n\n  @IsInt()\n  @IsOptional()\n  instructor!: number;\n}\n\nexport interface KhouryRedirectResponse {\n  redirect: string;\n}\n\nexport class UpdateProfileParams {\n  @IsBoolean()\n  @IsOptional()\n  desktopNotifsEnabled?: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  phoneNotifsEnabled?: boolean;\n\n  @ValidateIf((o) => o.phoneNotifsEnabled)\n  @IsString()\n  @IsNotEmpty()\n  phoneNumber?: string;\n\n  @IsString()\n  @IsOptional()\n  firstName?: string;\n\n  @IsString()\n  @IsOptional()\n  lastName?: string;\n\n  @IsString()\n  @IsOptional()\n  defaultMessage?: string;\n\n  @IsBoolean()\n  @IsOptional()\n  includeDefaultMessage?: boolean;\n}\n\nexport class GetCourseResponse {\n  id!: number;\n  name!: string;\n\n  @Type(() => OfficeHourPartial)\n  officeHours!: Array<OfficeHourPartial>;\n\n  @Type(() => QueuePartial)\n  queues!: QueuePartial[];\n\n  coordinator_email!: string;\n\n  heatmap!: Heatmap | false;\n\n  selfEnroll!: boolean;\n}\n\nexport class GetSelfEnrollResponse {\n  courses!: CoursePartial[];\n}\n\nexport class GetCourseOverridesRow {\n  id!: number;\n  role!: string;\n  name!: string;\n  email!: string;\n}\n\nexport class GetCourseOverridesResponse {\n  @Type(() => GetCourseOverridesRow)\n  data!: GetCourseOverridesRow[];\n}\n\nexport class UpdateCourseOverrideBody {\n  @IsString()\n  email!: string;\n\n  @IsString()\n  role!: Role;\n}\n\nexport class UpdateCourseOverrideResponse extends GetCourseOverridesRow {}\n\nexport class GetQueueResponse extends QueuePartial {}\n\nexport class GetCourseQueuesResponse extends Array<QueuePartial> {}\n\nexport class ListQuestionsResponse {\n  @Type(() => Question)\n  yourQuestion?: Question;\n\n  @Type(() => Question)\n  questionsGettingHelp!: Array<Question>;\n\n  @Type(() => Question)\n  queue!: Array<Question>;\n\n  @Type(() => Question)\n  priorityQueue!: Array<Question>;\n\n  @Type(() => QuestionGroup)\n  groups!: Array<QuestionGroup>;\n}\n\nexport class GetQuestionResponse extends Question {}\n\nexport class GetStudentQuestionResponse extends Question {\n  @IsInt()\n  queueId!: number;\n}\n\nexport class CreateQuestionParams {\n  @IsString()\n  text!: string;\n\n  @IsEnum(QuestionType)\n  @IsOptional()\n  questionType?: QuestionType;\n\n  @IsBoolean()\n  groupable!: boolean;\n\n  @IsInt()\n  queueId!: number;\n\n  @IsBoolean()\n  @IsOptional()\n  isOnline?: boolean;\n\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @IsBoolean()\n  force!: boolean;\n}\nexport class CreateQuestionResponse extends Question {}\n\nexport class UpdateQuestionParams {\n  @IsString()\n  @IsOptional()\n  text?: string;\n\n  @IsEnum(QuestionType)\n  @IsOptional()\n  questionType?: QuestionType;\n\n  @IsBoolean()\n  @IsOptional()\n  groupable?: boolean;\n\n  @IsInt()\n  @IsOptional()\n  queueId?: number;\n\n  @IsEnum(QuestionStatusKeys)\n  @IsOptional()\n  status?: QuestionStatus;\n\n  @IsBoolean()\n  @IsOptional()\n  isOnline?: boolean;\n\n  @IsString()\n  @IsOptional()\n  location?: string;\n}\nexport class UpdateQuestionResponse extends Question {}\n\nexport class GroupQuestionsParams {\n  @IsArray()\n  @Type(() => Number)\n  questionIds!: number[];\n\n  @IsInt()\n  queueId!: number;\n}\n\nexport class ResolveGroupParams {\n  @IsInt()\n  queueId!: number;\n}\n\nexport type TAUpdateStatusResponse = QueuePartial;\nexport type QueueNotePayloadType = {\n  notes: string;\n};\n\nexport class TACheckoutResponse {\n  // The ID of the queue we checked out of\n  queueId!: number;\n  canClearQueue!: boolean;\n\n  @Type(() => Date)\n  nextOfficeHourTime?: Date;\n}\n\nexport class UpdateQueueParams {\n  @IsString()\n  @IsOptional()\n  notes?: string;\n\n  @IsBoolean()\n  allowQuestions?: boolean;\n}\n\nexport class TACheckinTimesResponse {\n  @Type(() => TACheckinPair)\n  taCheckinTimes!: TACheckinPair[];\n}\n\nexport class TACheckinPair {\n  @IsString()\n  name!: string;\n\n  @IsDate()\n  @Type(() => Date)\n  checkinTime!: Date;\n\n  @IsDate()\n  @Type(() => Date)\n  checkoutTime?: Date;\n\n  @IsBoolean()\n  forced!: boolean;\n\n  @IsBoolean()\n  inProgress!: boolean;\n\n  @IsNumber()\n  numHelped!: number;\n}\n\nexport enum AlertType {\n  REPHRASE_QUESTION = \"rephraseQuestion\",\n}\n\nexport class AlertPayload {}\n\nexport class Alert {\n  @IsEnum(AlertType)\n  alertType!: AlertType;\n\n  @IsDate()\n  sent!: Date;\n\n  @Type(() => AlertPayload)\n  payload!: AlertPayload;\n\n  @IsInt()\n  id!: number;\n}\n\nexport class RephraseQuestionPayload extends AlertPayload {\n  @IsInt()\n  questionId!: number;\n\n  @IsInt()\n  queueId!: number;\n\n  @IsInt()\n  courseId!: number;\n}\n\nexport class CreateAlertParams {\n  @IsEnum(AlertType)\n  alertType!: AlertType;\n\n  @IsInt()\n  courseId!: number;\n\n  @IsObject()\n  payload!: AlertPayload;\n\n  @IsInt()\n  targetUserId!: number;\n}\n\nexport class CreateAlertResponse extends Alert {}\n\nexport class GetAlertsResponse {\n  @Type(() => Alert)\n  alerts!: Alert[];\n}\n\nexport class SubmitCourseParams {\n  @IsString()\n  coordinator_email!: string;\n\n  @IsString()\n  name!: string;\n\n  @IsArray()\n  sections!: number[];\n\n  @IsString()\n  semester!: string;\n\n  @IsString()\n  timezone!: string;\n\n  @IsString()\n  icalURL!: string;\n\n  @IsString()\n  password!: string;\n}\n\nexport class SemesterPartial {\n  id!: number;\n  season!: string;\n  year!: number;\n}\n\nexport class SSEQueueResponse {\n  queue?: GetQueueResponse;\n  questions?: ListQuestionsResponse;\n}\n\nexport interface TwilioBody {\n  ToCountry: string;\n  ToState: string;\n  SmsMessageSid: string;\n  NumMedia: string;\n  ToCity: string;\n  FromZip: string;\n  SmsSid: string;\n  FromState: string;\n  SmsStatus: string;\n  FromCity: string;\n  Body: string;\n  FromCountry: string;\n  To: string;\n  ToZip: string;\n  NumSegments: string;\n  MessageSid: string;\n  AccountSid: string;\n  From: string;\n  ApiVersion: string;\n}\n\nexport interface GetReleaseNotesResponse {\n  releaseNotes: unknown;\n  lastUpdatedUnixTime: number;\n}\n\nexport type GetInsightOutputResponse = PossibleOutputTypes;\n\nexport type ListInsightsResponse = Record<string, InsightDisplayInfo>;\n\nexport type InsightDisplayInfo = {\n  displayName: string;\n  description: string;\n  component: InsightComponent;\n  size: \"small\" | \"default\";\n};\n\nexport interface InsightObject {\n  displayName: string;\n  description: string;\n  roles: Role[];\n  component: InsightComponent;\n  size: \"default\" | \"small\";\n  compute: (insightFilters: any) => Promise<PossibleOutputTypes>;\n}\n\nexport enum InsightComponent {\n  SimpleDisplay = \"SimpleDisplay\",\n  BarChart = \"BarChart\",\n  SimpleTable = \"SimpleTable\",\n}\n\nexport type PossibleOutputTypes =\n  | SimpleDisplayOutputType\n  | BarChartOutputType\n  | SimpleTableOutputType;\n\nexport type SimpleDisplayOutputType = number | string;\n\nexport type BarChartOutputType = {\n  data: StringMap<number>[];\n  xField: string;\n  yField: string;\n  seriesField: string;\n  xAxisName?: string;\n  yAxisName?: string;\n};\n\nexport type SimpleTableOutputType = {\n  dataSource: StringMap<string>[];\n  columns: StringMap<string>[];\n};\n\nexport type StringMap<T> = {\n  [key: string]: T;\n};\n\nexport type DateRangeType = {\n  start: string;\n  end: string;\n};\n\nexport const ERROR_MESSAGES = {\n  courseController: {\n    checkIn: {\n      cannotCreateNewQueueIfNotProfessor:\n        \"You can't create a new queue if you're not a professor\",\n      cannotCheckIntoMultipleQueues:\n        \"Cannot check into multiple queues at the same time\",\n    },\n    courseNotFound: \"The course was not found\",\n    courseOfficeHourError: \"Unable to find a course's office hours\",\n    courseHeatMapError: \"Unable to get course's cached heatmap\",\n    courseModelError: \"Course Model not found\",\n    noUserFound: \"No user found with given email\",\n    noSemesterFound: \"No semester exists for the submitted course\",\n    updatedQueueError: \"Error updating a course queue\",\n    queuesNotFound: \"Queues not found\",\n    queueNotFound: \"Queue not found\",\n    saveQueueError: \"Unable to save queue\",\n    clearQueueError: \"Unable to determine if queue can be cleared\",\n    createEventError: \"An error occurred while creating an event\",\n    icalCalendarUpdate: \"Unable to update calendar\",\n    checkInTime: \"Unable to get TA check in times\",\n    removeCourse: \"Error occurred while trying to remove a course\",\n    createCourse: \"Error occurred while trying to create a course\",\n    updateCourse: \"Error occurred while trying to update a course\",\n    createCourseMappings: \"Unable to create a course mappings\",\n    invalidApplyURL:\n      \"You are unauthorized to submit an application. Please email help@khouryofficehours.com for the correct URL.\",\n  },\n  questionController: {\n    createQuestion: {\n      invalidQueue: \"Posted to an invalid queue\",\n      noNewQuestions: \"Queue not allowing new questions\",\n      closedQueue: \"Queue is closed\",\n      oneQuestionAtATime: \"You can't create more than one question at a time.\",\n    },\n    updateQuestion: {\n      fsmViolation: (\n        role: string,\n        questionStatus: string,\n        bodyStatus: string\n      ): string =>\n        `${role} cannot change status from ${questionStatus} to ${bodyStatus}`,\n      taOnlyEditQuestionStatus: \"TA/Professors can only edit question status\",\n      otherTAHelping: \"Another TA is currently helping with this question\",\n      otherTAResolved: \"Another TA has already resolved this question\",\n      taHelpingOther: \"TA is already helping someone else\",\n      loginUserCantEdit: \"Logged-in user does not have edit access\",\n    },\n    groupQuestions: {\n      notGroupable: \"One or more of the questions is not groupable\",\n    },\n    saveQError: \"Unable to save a question\",\n    notFound: \"Question not found\",\n    unableToNotifyUser: \"Unable to notify user\",\n  },\n  loginController: {\n    receiveDataFromKhoury: \"Invalid request signature\",\n    invalidPayload: \"The decoded JWT payload is invalid\",\n    invalidTempJWTToken: \"Error occurred while signing a JWT token\",\n    addUserFromKhoury:\n      \"Error occurred while translating account from Khoury to Office Hours\",\n  },\n  notificationController: {\n    messageNotFromTwilio: \"Message not from Twilio\",\n  },\n  notificationService: {\n    registerPhone: \"phone number invalid\",\n  },\n  questionRoleGuard: {\n    questionNotFound: \"Question not found\",\n    queueOfQuestionNotFound: \"Cannot find queue of question\",\n    queueDoesNotExist: \"This queue does not exist!\",\n  },\n  queueController: {\n    getQueue: \"An error occurred while trying to retrieve a Queue\",\n    getQuestions: \"Unable to get questions from queue\",\n    saveQueue: \"Unable to save queue\",\n    cleanQueue: \"Unable to clean queue\",\n  },\n  queueRoleGuard: {\n    queueNotFound: \"Queue not found\",\n  },\n  releaseNotesController: {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    releaseNotesTime: (e: any): string =>\n      \"Error Parsing release notes time: \" + e,\n  },\n  insightsController: {\n    insightUnathorized: \"User is not authorized to view this insight\",\n    insightNameNotFound: \"The insight requested was not found\",\n  },\n  roleGuard: {\n    notLoggedIn: \"Must be logged in\",\n    noCourseIdFound: \"No courseid found\",\n    notInCourse: \"Not In This Course\",\n    mustBeRoleToJoinCourse: (roles: string[]): string =>\n      `You must have one of roles [${roles.join(\", \")}] to access this course`,\n  },\n  profileController: {\n    accountNotAvailable: \"The user account is undefined\",\n    userResponseNotFound: \"The user response was not found\",\n    noDiskSpace:\n      \"There is no disk space left to store an image. Please immediately contact your course staff and let them know. They will contact the Khoury Office Hours team as soon as possible.\",\n  },\n  alertController: {\n    duplicateAlert: \"This alert has already been sent\",\n    notActiveAlert: \"This is not an alert that's open for the current user\",\n  },\n  sseService: {\n    getSubClient: \"Unable to get the redis subscriber client\",\n    getDBClient: \"Unable to get the redis database client\",\n    getPubClient: \"Unable to get publisher client\",\n    moduleDestroy: \"Unable to destroy the redis module\",\n    cleanupConnection: \"Unable to cleanup the connection\",\n    clientIdSubscribe: \"Client ID not found during subscribing to client\",\n    subscribe: \"Unable to subscribe to the client\",\n    unsubscribe: \"Unable to unsubscribe from the client\",\n    removeFromRoom: \"Error removing from redis room\",\n    directConnections: \"Unable to cleanup direct connections\",\n    roomMembers: \"Unable to get room members\",\n    serialize: \"Unable to serialize payload\",\n    publish: \"Publisher client is unable to publish\",\n    clientIdNotFound: \"Client ID not found during subscribing to client\",\n  },\n};\n"]},"metadata":{},"sourceType":"module"}