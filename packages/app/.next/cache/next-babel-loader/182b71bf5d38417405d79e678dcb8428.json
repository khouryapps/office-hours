{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { API } from \"@koh/api-client\";\nimport { Button, Col, Form, Input, message, Switch } from \"antd\";\nimport { pick } from \"lodash\";\nimport { HeaderTitle } from \"./Styled\";\nimport React from \"react\";\nimport useSWR from \"swr\";\nexport default function TeamsSettings() {\n  const {\n    TextArea\n  } = Input;\n  const {\n    data: profile,\n    mutate\n  } = useSWR(`api/v1/profile`, async () => API.profile.index());\n  const [form] = Form.useForm();\n\n  const editProfile = async updateProfile => {\n    const newProfile = _objectSpread(_objectSpread({}, profile), updateProfile);\n\n    mutate(newProfile, false);\n    await API.profile.patch(pick(newProfile, [\"defaultMessage\", \"includeDefaultMessage\"]));\n    mutate();\n    return newProfile;\n  };\n\n  const handleOk = async () => {\n    const value = await form.validateFields();\n    const newProfile = await editProfile(value);\n    form.setFieldsValue(newProfile);\n    message.success(\"Your profile settings have been successfully updated\");\n  };\n\n  return profile ? __jsx(\"div\", null, __jsx(HeaderTitle, null, __jsx(\"h1\", null, \"Teams Settings\")), __jsx(Form, {\n    wrapperCol: {\n      span: 18\n    },\n    form: form,\n    initialValues: profile\n  }, __jsx(Col, null, __jsx(Form.Item, {\n    label: \"Open Teams Chat with Default Message\",\n    name: \"includeDefaultMessage\",\n    valuePropName: \"checked\"\n  }, __jsx(Switch, null)), __jsx(Form.Item, {\n    shouldUpdate: true,\n    noStyle: true,\n    style: {\n      marginTop: \"30px\"\n    }\n  }, () => (form === null || form === void 0 ? void 0 : form.getFieldValue(\"includeDefaultMessage\")) && __jsx(Form.Item, {\n    label: \"Default Teams Message\",\n    name: \"defaultMessage\",\n    \"data-cy\": \"defaultMessageInput\",\n    rules: [{\n      required: true,\n      message: \"Please input your default message for Teams chat!\"\n    }]\n  }, __jsx(TextArea, {\n    rows: 4,\n    placeholder: (profile === null || profile === void 0 ? void 0 : profile.defaultMessage) ? profile === null || profile === void 0 ? void 0 : profile.defaultMessage : \"Enter Your Message Here\"\n  }))))), __jsx(Button, {\n    key: \"submit\",\n    type: \"primary\",\n    onClick: handleOk,\n    style: {\n      marginBottom: \"15px\"\n    }\n  }, \"Save\")) : null;\n}","map":null,"metadata":{},"sourceType":"module"}