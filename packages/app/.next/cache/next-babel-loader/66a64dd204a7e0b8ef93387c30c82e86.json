{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport { API } from \"@koh/api-client\";\nimport { Role } from \"@koh/common\";\nimport { Button, Input, message, Select } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nvar OverrideInput = styled.div.withConfig({\n  displayName: \"AddOverrideInput__OverrideInput\",\n  componentId: \"wmncc1-0\"\n})([\"display:flex;margin-bottom:20px;\"]);\nexport default function AddOverrideInput(_ref) {\n  var courseId = _ref.courseId,\n      onAddOverride = _ref.onAddOverride;\n\n  var _useState = useState(\"\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(Role.STUDENT),\n      role = _useState2[0],\n      setRole = _useState2[1];\n\n  var addOverride = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var resp, _e$response, _e$response$data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return API.course.addOverride(courseId, {\n                email: email,\n                role: role\n              });\n\n            case 3:\n              resp = _context.sent;\n              onAddOverride(resp);\n              setEmail(\"\");\n              message.success(\"Successfully added an override for \" + resp.name);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              message.error((_e$response = _context.t0.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function addOverride() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", null, __jsx(OverrideInput, null, __jsx(Input, {\n    placeholder: \"Email\",\n    style: {\n      marginRight: 10\n    },\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    }\n  }), __jsx(Select, {\n    style: {\n      width: 120,\n      marginRight: 10\n    },\n    value: role,\n    onChange: function onChange(e) {\n      return setRole(e);\n    }\n  }, __jsx(Select.Option, {\n    value: Role.STUDENT\n  }, \"Student\"), __jsx(Select.Option, {\n    value: Role.TA\n  }, \"TA\"), __jsx(Select.Option, {\n    value: Role.PROFESSOR\n  }, \"Professor\")), __jsx(Button, {\n    type: \"primary\",\n    onClick: addOverride\n  }, \"Add Override\")));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Settings/AddOverrideInput.tsx"],"names":["API","Role","Button","Input","message","Select","React","useState","styled","OverrideInput","div","AddOverrideInput","courseId","onAddOverride","email","setEmail","STUDENT","role","setRole","addOverride","course","resp","success","name","error","response","data","marginRight","e","target","value","width","TA","PROFESSOR"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,SAASC,IAAT,QAAmD,aAAnD;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,MAAjC,QAA+C,MAA/C;AACA,OAAOC,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,wCAAnB;AAUA,eAAe,SAASC,gBAAT,OAGyB;AAAA,MAFtCC,QAEsC,QAFtCA,QAEsC;AAAA,MADtCC,aACsC,QADtCA,aACsC;;AAAA,kBACZN,QAAQ,CAAC,EAAD,CADI;AAAA,MAC/BO,KAD+B;AAAA,MACxBC,QADwB;;AAAA,mBAEdR,QAAQ,CAACN,IAAI,CAACe,OAAN,CAFM;AAAA,MAE/BC,IAF+B;AAAA,MAEzBC,OAFyB;;AAItC,MAAMC,WAAW;AAAA,yEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEGnB,GAAG,CAACoB,MAAJ,CAAWD,WAAX,CAAuBP,QAAvB,EAAiC;AAAEE,gBAAAA,KAAK,EAALA,KAAF;AAASG,gBAAAA,IAAI,EAAJA;AAAT,eAAjC,CAFH;;AAAA;AAEVI,cAAAA,IAFU;AAGhBR,cAAAA,aAAa,CAACQ,IAAD,CAAb;AACAN,cAAAA,QAAQ,CAAC,EAAD,CAAR;AACAX,cAAAA,OAAO,CAACkB,OAAR,CAAgB,wCAAwCD,IAAI,CAACE,IAA7D;AALgB;AAAA;;AAAA;AAAA;AAAA;AAOhBnB,cAAAA,OAAO,CAACoB,KAAR,gBAAc,YAAEC,QAAhB,oEAAc,YAAYC,IAA1B,qDAAc,iBAAkBtB,OAAhC;;AAPgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXe,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAWA,SACE,mBACE,MAAC,aAAD,QACE,MAAC,KAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,KAAK,EAAE;AAAEQ,MAAAA,WAAW,EAAE;AAAf,KAFT;AAGE,IAAA,KAAK,EAAEb,KAHT;AAIE,IAAA,QAAQ,EAAE,kBAACc,CAAD;AAAA,aAAOb,QAAQ,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AAAA;AAJZ,IADF,EAOE,MAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,GAAT;AAAcJ,MAAAA,WAAW,EAAE;AAA3B,KADT;AAEE,IAAA,KAAK,EAAEV,IAFT;AAGE,IAAA,QAAQ,EAAE,kBAACW,CAAD;AAAA,aAAOV,OAAO,CAACU,CAAD,CAAd;AAAA;AAHZ,KAKE,MAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAE3B,IAAI,CAACe;AAA3B,eALF,EAME,MAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAEf,IAAI,CAAC+B;AAA3B,UANF,EAOE,MAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,KAAK,EAAE/B,IAAI,CAACgC;AAA3B,iBAPF,CAPF,EAgBE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAEd;AAAhC,oBAhBF,CADF,CADF;AAwBD","sourcesContent":["import { API } from \"@koh/api-client\";\nimport { Role, UpdateCourseOverrideResponse } from \"@koh/common\";\nimport { Button, Input, message, Select } from \"antd\";\nimport React, { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst OverrideInput = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\ntype AddOverrideInputProps = {\n  courseId: number;\n  onAddOverride: (ovr: UpdateCourseOverrideResponse) => void;\n};\n\nexport default function AddOverrideInput({\n  courseId,\n  onAddOverride,\n}: AddOverrideInputProps): ReactElement {\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(Role.STUDENT);\n\n  const addOverride = async () => {\n    try {\n      const resp = await API.course.addOverride(courseId, { email, role });\n      onAddOverride(resp);\n      setEmail(\"\");\n      message.success(\"Successfully added an override for \" + resp.name);\n    } catch (e) {\n      message.error(e.response?.data?.message);\n    }\n  };\n\n  return (\n    <div>\n      <OverrideInput>\n        <Input\n          placeholder=\"Email\"\n          style={{ marginRight: 10 }}\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <Select\n          style={{ width: 120, marginRight: 10 }}\n          value={role}\n          onChange={(e) => setRole(e)}\n        >\n          <Select.Option value={Role.STUDENT}>Student</Select.Option>\n          <Select.Option value={Role.TA}>TA</Select.Option>\n          <Select.Option value={Role.PROFESSOR}>Professor</Select.Option>\n        </Select>\n        <Button type=\"primary\" onClick={addOverride}>\n          Add Override\n        </Button>\n      </OverrideInput>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}