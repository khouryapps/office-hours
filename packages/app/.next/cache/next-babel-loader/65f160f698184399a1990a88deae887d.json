{"ast":null,"code":"var __jsx = React.createElement;\nimport { API } from \"@koh/api-client\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nvar TACheckInCheckOutCalendar = styled(Calendar).withConfig({\n  displayName: \"TACheckInCheckOutTimes__TACheckInCheckOutCalendar\",\n  componentId: \"q2bv8j-0\"\n})([\"height:70vh;padding-top:36px;padding-left:36px;\"]);\nvar CheckinHeader = styled.h1.withConfig({\n  displayName: \"TACheckInCheckOutTimes__CheckinHeader\",\n  componentId: \"q2bv8j-1\"\n})([\"margin-top:12px;margin-bottom:0;padding-left:36px;\"]);\nexport default function TACheckInCheckOutTimes(_ref) {\n  var _data$taCheckinTimes$;\n\n  var courseId = _ref.courseId;\n  // there has to be a better way -- right?\n  var sunday = new Date();\n  sunday.setDate(sunday.getDate() - sunday.getDay());\n  sunday.setHours(0, 0, 0, 0);\n  var nextSunday = new Date();\n  nextSunday.setDate(sunday.getDate() + 7);\n  nextSunday.setHours(0, 0, 0, 0);\n\n  var _useState = useState(sunday),\n      startDate = _useState[0],\n      setStartDate = _useState[1];\n\n  var _useState2 = useState(nextSunday),\n      endDate = _useState2[0],\n      setEndDate = _useState2[1];\n\n  var fetcher = function fetcher(_url, startDate, endDate) {\n    return API.course.getTACheckinTimes(courseId, startDate.toISOString(), endDate.toISOString());\n  };\n\n  var _useSWR = useSWR([\"/api/v1/course/getTACheckinCheckoutTimes\", startDate, endDate], fetcher),\n      data = _useSWR.data,\n      mutate = _useSWR.mutate;\n\n  var tasWhoForgotToCheckOut = data === null || data === void 0 ? void 0 : data.taCheckinTimes.filter(function (e) {\n    return e.forced;\n  });\n  var tasWhoAreCurrentlyInOH = data === null || data === void 0 ? void 0 : data.taCheckinTimes.filter(function (e) {\n    return e.inProgress;\n  });\n  var calData = (_data$taCheckinTimes$ = data === null || data === void 0 ? void 0 : data.taCheckinTimes.map(function (e) {\n    return {\n      start: e.checkinTime,\n      end: e.checkoutTime ? e.checkoutTime : new Date(),\n      title: e.inProgress ? \"TA currently holding office hours: \".concat(e.name) : e.forced ? \"TA forgot to check out: \".concat(e.name) : e.name,\n      resource: e.numHelped\n    };\n  })) !== null && _data$taCheckinTimes$ !== void 0 ? _data$taCheckinTimes$ : []; // Could have so many cool metrics, like, click on a ta's name and a modal\n  // comes up with the metrics of who they helped\n  // sinc eit's  acallback, maybe have to make a div that a modal can then\n  // portal a modal onto it\n  // https://reactjs.org/docs/react-dom.html#createportal\n\n  return __jsx(\"div\", null, __jsx(CheckinHeader, null, \"TA Check-In Check-Out Times\"), __jsx(TACheckInCheckOutCalendar, {\n    events: calData,\n    localizer: momentLocalizer(moment),\n    showMultiDayTimes: true,\n    defaultView: \"week\",\n    onRangeChange: function onRangeChange(newDates) {\n      if (Array.isArray(newDates)) {\n        setStartDate(newDates[0]);\n        setEndDate(newDates[newDates.length - 1]);\n      } else {\n        setStartDate(new Date(newDates.start));\n        setEndDate(new Date(newDates.end));\n      }\n\n      mutate();\n    },\n    onSelectEvent: function onSelectEvent(event) {\n      alert(\"\".concat(event.title, \" helped \").concat(event.resource, \" students in their office hours\"));\n    }\n  }), (tasWhoAreCurrentlyInOH === null || tasWhoAreCurrentlyInOH === void 0 ? void 0 : tasWhoAreCurrentlyInOH.length) ? __jsx(\"div\", null, __jsx(\"h3\", null, \"People currently holding office hours:\"), tasWhoAreCurrentlyInOH.map(function (ta) {\n    return __jsx(\"p\", {\n      key: ta.name\n    }, ta.name);\n  })) : null, (tasWhoForgotToCheckOut === null || tasWhoForgotToCheckOut === void 0 ? void 0 : tasWhoForgotToCheckOut.length) ? __jsx(\"div\", null, __jsx(\"h3\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"The following course staff forgot to check out:\"), tasWhoForgotToCheckOut.map(function (ta) {\n    return __jsx(\"p\", {\n      key: ta.name\n    }, ta.name);\n  }), __jsx(\"p\", {\n    style: {\n      width: \"800px\"\n    }\n  }, \"Please remind course staff to check out at the end of their office hours. This way students don't join a queue thinking that there are still office hours when the course staff has already left\")) : null);\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Settings/TACheckInCheckOutTimes.tsx"],"names":["API","moment","React","useState","Calendar","momentLocalizer","styled","useSWR","TACheckInCheckOutCalendar","CheckinHeader","h1","TACheckInCheckOutTimes","courseId","sunday","Date","setDate","getDate","getDay","setHours","nextSunday","startDate","setStartDate","endDate","setEndDate","fetcher","_url","course","getTACheckinTimes","toISOString","data","mutate","tasWhoForgotToCheckOut","taCheckinTimes","filter","e","forced","tasWhoAreCurrentlyInOH","inProgress","calData","map","start","checkinTime","end","checkoutTime","title","name","resource","numHelped","newDates","Array","isArray","length","event","alert","ta","color","width"],"mappings":"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","sourcesContent":["import { API } from \"@koh/api-client\";\nimport moment from \"moment\";\nimport React, { ReactElement, useState } from \"react\";\nimport {\n  Calendar,\n  CalendarProps,\n  Event,\n  momentLocalizer,\n} from \"react-big-calendar\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\n\nconst TACheckInCheckOutCalendar = styled(Calendar)<CalendarProps>`\n  height: 70vh;\n  padding-top: 36px;\n  padding-left: 36px;\n`;\n\nconst CheckinHeader = styled.h1`\n  margin-top: 12px;\n  margin-bottom: 0;\n  padding-left: 36px;\n`;\n\ninterface TACheckInCheckOutTimesProps {\n  courseId: number;\n}\n\nexport default function TACheckInCheckOutTimes({\n  courseId,\n}: TACheckInCheckOutTimesProps): ReactElement {\n  // there has to be a better way -- right?\n  const sunday = new Date();\n  sunday.setDate(sunday.getDate() - sunday.getDay());\n  sunday.setHours(0, 0, 0, 0);\n  const nextSunday = new Date();\n  nextSunday.setDate(sunday.getDate() + 7);\n  nextSunday.setHours(0, 0, 0, 0);\n\n  const [startDate, setStartDate] = useState(sunday);\n  const [endDate, setEndDate] = useState(nextSunday);\n\n  const fetcher = (_url: string, startDate: Date, endDate: Date) => {\n    return API.course.getTACheckinTimes(\n      courseId,\n      startDate.toISOString(),\n      endDate.toISOString()\n    );\n  };\n\n  const { data, mutate } = useSWR(\n    [`/api/v1/course/getTACheckinCheckoutTimes`, startDate, endDate],\n    fetcher\n  );\n\n  const tasWhoForgotToCheckOut = data?.taCheckinTimes.filter((e) => e.forced);\n  const tasWhoAreCurrentlyInOH = data?.taCheckinTimes.filter(\n    (e) => e.inProgress\n  );\n\n  const calData: Event[] =\n    data?.taCheckinTimes.map((e) => ({\n      start: e.checkinTime,\n      end: e.checkoutTime ? e.checkoutTime : new Date(),\n      title: e.inProgress\n        ? `TA currently holding office hours: ${e.name}`\n        : e.forced\n        ? `TA forgot to check out: ${e.name}`\n        : e.name,\n      resource: e.numHelped,\n    })) ?? [];\n\n  // Could have so many cool metrics, like, click on a ta's name and a modal\n  // comes up with the metrics of who they helped\n  // sinc eit's  acallback, maybe have to make a div that a modal can then\n  // portal a modal onto it\n  // https://reactjs.org/docs/react-dom.html#createportal\n\n  return (\n    <div>\n      <CheckinHeader>TA Check-In Check-Out Times</CheckinHeader>\n      <TACheckInCheckOutCalendar\n        events={calData}\n        localizer={momentLocalizer(moment)}\n        showMultiDayTimes={true}\n        defaultView={\"week\"}\n        onRangeChange={(newDates) => {\n          if (Array.isArray(newDates)) {\n            setStartDate(newDates[0]);\n            setEndDate(newDates[newDates.length - 1]);\n          } else {\n            setStartDate(new Date(newDates.start));\n            setEndDate(new Date(newDates.end));\n          }\n          mutate();\n        }}\n        onSelectEvent={(event) => {\n          alert(\n            `${event.title} helped ${event.resource} students in their office hours`\n          );\n        }}\n      />\n      {tasWhoAreCurrentlyInOH?.length ? (\n        <div>\n          <h3>People currently holding office hours:</h3>\n          {tasWhoAreCurrentlyInOH.map((ta) => (\n            <p key={ta.name}>{ta.name}</p>\n          ))}\n        </div>\n      ) : null}\n      {tasWhoForgotToCheckOut?.length ? (\n        <div>\n          <h3 style={{ color: \"red\" }}>\n            The following course staff forgot to check out:\n          </h3>\n          {tasWhoForgotToCheckOut.map((ta) => (\n            <p key={ta.name}>{ta.name}</p>\n          ))}\n          <p style={{ width: \"800px\" }}>\n            Please remind course staff to check out at the end of their office\n            hours. This way students don&apos;t join a queue thinking that there\n            are still office hours when the course staff has already left\n          </p>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}