{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Select, Button, Tag } from \"antd\";\nimport { useProfile } from \"../../hooks/useProfile\";\nimport { useEffect } from \"react\";\nimport { createSGString } from \"./ApplyPage\";\nvar Italics = styled.span.withConfig({\n  displayName: \"SelectCourses__Italics\",\n  componentId: \"sc-1947xxr-0\"\n})([\"font-weight:normal;font-size:16px;font-style:italic;\"]);\nvar FormSection = styled.div.withConfig({\n  displayName: \"SelectCourses__FormSection\",\n  componentId: \"sc-1947xxr-1\"\n})([\"margin-top:20px;\"]);\nvar CoursesBlock = styled.div.withConfig({\n  displayName: \"SelectCourses__CoursesBlock\",\n  componentId: \"sc-1947xxr-2\"\n})([\"background-color:#fff;border:1px solid #d9d9d9;border-radius:2px;padding:5px;display:flex;align-items:center;\"]);\nvar LargeTag = styled(Tag).withConfig({\n  displayName: \"SelectCourses__LargeTag\",\n  componentId: \"sc-1947xxr-3\"\n})([\"font-size:14px;padding:2px 6px;\"]);\nexport default function SelectCourses(_ref) {\n  var _profile$pendingCours2;\n\n  var onSubmit = _ref.onSubmit,\n      initialValues = _ref.initialValues;\n\n  var _useState = useState([]),\n      selectedCourses = _useState[0],\n      setSelectedCourses = _useState[1];\n\n  var profile = useProfile(); // populate initially selected courses when returning to first selection page\n\n  useEffect(function () {\n    var _profile$pendingCours;\n\n    var defaultValues = profile === null || profile === void 0 ? void 0 : (_profile$pendingCours = profile.pendingCourses) === null || _profile$pendingCours === void 0 ? void 0 : _profile$pendingCours.reduce(function (defaults, course, idx) {\n      if (initialValues.find(function (name) {\n        return name === course.name;\n      })) {\n        defaults.push(idx);\n        return defaults;\n      } else return defaults;\n    }, []);\n    setSelectedCourses(defaultValues || []);\n  }, []);\n\n  var handleCoursesChange = function handleCoursesChange(indicies) {\n    setSelectedCourses(indicies);\n  };\n\n  var handleSubmit = function handleSubmit() {\n    return onSubmit(selectedCourses.map(function (courseIdx) {\n      return profile === null || profile === void 0 ? void 0 : profile.pendingCourses[courseIdx];\n    }));\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", null, \"It looks like this is your first time using the app for this semester. Please pick out all the courses you want to use Khoury Office Hours for.\"), __jsx(FormSection, null, __jsx(\"h3\", null, \"Courses\", \" \", __jsx(Italics, null, \"(Select all the courses you are applying for)\")), __jsx(Select, {\n    mode: \"multiple\",\n    placeholder: \"Please select your courses\",\n    onChange: handleCoursesChange,\n    style: {\n      width: \"100%\"\n    },\n    value: selectedCourses\n  }, profile === null || profile === void 0 ? void 0 : (_profile$pendingCours2 = profile.pendingCourses) === null || _profile$pendingCours2 === void 0 ? void 0 : _profile$pendingCours2.map(function (course, idx) {\n    return __jsx(Select.Option, {\n      key: course.name,\n      value: idx\n    }, createSGString(course));\n  }))), __jsx(FormSection, null, __jsx(\"h3\", null, \"The following courses have already registered for the app:\"), __jsx(CoursesBlock, null, profile === null || profile === void 0 ? void 0 : profile.courses.map(function (course) {\n    var _course$course, _course$course2;\n\n    return __jsx(LargeTag, {\n      key: (_course$course = course.course) === null || _course$course === void 0 ? void 0 : _course$course.id\n    }, (_course$course2 = course.course) === null || _course$course2 === void 0 ? void 0 : _course$course2.name);\n  }))), __jsx(Button, {\n    onClick: handleSubmit,\n    type: \"primary\",\n    style: {\n      marginTop: \"30px\"\n    }\n  }, \"Next\"));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Apply/SelectCourses.tsx"],"names":["React","useState","styled","Select","Button","Tag","useProfile","useEffect","createSGString","Italics","span","FormSection","div","CoursesBlock","LargeTag","SelectCourses","onSubmit","initialValues","selectedCourses","setSelectedCourses","profile","defaultValues","pendingCourses","reduce","defaults","course","idx","find","name","push","handleCoursesChange","indicies","handleSubmit","map","courseIdx","width","courses","id","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,GAAzB,QAAoC,MAApC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,aAA/B;AAEA,IAAMC,OAAO,GAAGP,MAAM,CAACQ,IAAV;AAAA;AAAA;AAAA,4DAAb;AAMA,IAAMC,WAAW,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,wBAAjB;AAIA,IAAMC,YAAY,GAAGX,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,qHAAlB;AASA,IAAME,QAAQ,GAAGZ,MAAM,CAACG,GAAD,CAAT;AAAA;AAAA;AAAA,uCAAd;AAKA,eAAe,SAASU,aAAT,OAME;AAAA;;AAAA,MALfC,QAKe,QALfA,QAKe;AAAA,MAJfC,aAIe,QAJfA,aAIe;;AAAA,kBAC+BhB,QAAQ,CAAW,EAAX,CADvC;AAAA,MACRiB,eADQ;AAAA,MACSC,kBADT;;AAEf,MAAMC,OAAO,GAAGd,UAAU,EAA1B,CAFe,CAIf;;AACAC,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAMc,aAAa,GAAGD,OAAH,aAAGA,OAAH,gDAAGA,OAAO,CAAEE,cAAZ,0DAAG,sBAAyBC,MAAzB,CACpB,UAACC,QAAD,EAAqBC,MAArB,EAA6BC,GAA7B,EAAqC;AACnC,UAAIT,aAAa,CAACU,IAAd,CAAmB,UAACC,IAAD;AAAA,eAAUA,IAAI,KAAKH,MAAM,CAACG,IAA1B;AAAA,OAAnB,CAAJ,EAAwD;AACtDJ,QAAAA,QAAQ,CAACK,IAAT,CAAcH,GAAd;AACA,eAAOF,QAAP;AACD,OAHD,MAGO,OAAOA,QAAP;AACR,KANmB,EAOpB,EAPoB,CAAtB;AASAL,IAAAA,kBAAkB,CAACE,aAAa,IAAI,EAAlB,CAAlB;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAMS,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,QAAD,EAAc;AACxCZ,IAAAA,kBAAkB,CAACY,QAAD,CAAlB;AACD,GAFD;;AAGA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,WACnBhB,QAAQ,CACNE,eAAe,CAACe,GAAhB,CAAoB,UAACC,SAAD;AAAA,aAAed,OAAf,aAAeA,OAAf,uBAAeA,OAAO,CAAEE,cAAT,CAAwBY,SAAxB,CAAf;AAAA,KAApB,CADM,CADW;AAAA,GAArB;;AAKA,SACE,mBACE,qKADF,EAME,MAAC,WAAD,QACE,6BACU,GADV,EAEE,MAAC,OAAD,wDAFF,CADF,EAME,MAAC,MAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,4BAFd;AAGE,IAAA,QAAQ,EAAEJ,mBAHZ;AAIE,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE;AAAT,KAJT;AAKE,IAAA,KAAK,EAAEjB;AALT,KAOGE,OAPH,aAOGA,OAPH,iDAOGA,OAAO,CAAEE,cAPZ,2DAOG,uBAAyBW,GAAzB,CAA6B,UAACR,MAAD,EAASC,GAAT;AAAA,WAC5B,MAAC,MAAD,CAAQ,MAAR;AAAe,MAAA,GAAG,EAAED,MAAM,CAACG,IAA3B;AAAiC,MAAA,KAAK,EAAEF;AAAxC,OACGlB,cAAc,CAACiB,MAAD,CADjB,CAD4B;AAAA,GAA7B,CAPH,CANF,CANF,EA2BE,MAAC,WAAD,QACE,+EADF,EAEE,MAAC,YAAD,QACGL,OADH,aACGA,OADH,uBACGA,OAAO,CAAEgB,OAAT,CAAiBH,GAAjB,CAAqB,UAACR,MAAD;AAAA;;AAAA,WACpB,MAAC,QAAD;AAAU,MAAA,GAAG,oBAAEA,MAAM,CAACA,MAAT,mDAAE,eAAeY;AAA9B,0BAAmCZ,MAAM,CAACA,MAA1C,oDAAmC,gBAAeG,IAAlD,CADoB;AAAA,GAArB,CADH,CAFF,CA3BF,EAoCE,MAAC,MAAD;AACE,IAAA,OAAO,EAAEI,YADX;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,KAAK,EAAE;AAAEM,MAAAA,SAAS,EAAE;AAAb;AAHT,YApCF,CADF;AA8CD","sourcesContent":["import React, { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Select, Button, Tag } from \"antd\";\nimport { useProfile } from \"../../hooks/useProfile\";\nimport { KhouryProfCourse } from \"@koh/common\";\nimport { useEffect } from \"react\";\nimport { createSGString } from \"./ApplyPage\";\n\nconst Italics = styled.span`\n  font-weight: normal;\n  font-size: 16px;\n  font-style: italic;\n`;\n\nconst FormSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst CoursesBlock = styled.div`\n  background-color: #fff;\n  border: 1px solid #d9d9d9;\n  border-radius: 2px;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n`;\n\nconst LargeTag = styled(Tag)`\n  font-size: 14px;\n  padding: 2px 6px;\n`;\n\nexport default function SelectCourses({\n  onSubmit,\n  initialValues,\n}: {\n  onSubmit: (courses: KhouryProfCourse[]) => any;\n  initialValues: string[];\n}): ReactElement {\n  const [selectedCourses, setSelectedCourses] = useState<number[]>([]);\n  const profile = useProfile();\n\n  // populate initially selected courses when returning to first selection page\n  useEffect(() => {\n    const defaultValues = profile?.pendingCourses?.reduce(\n      (defaults: number[], course, idx) => {\n        if (initialValues.find((name) => name === course.name)) {\n          defaults.push(idx);\n          return defaults;\n        } else return defaults;\n      },\n      []\n    );\n    setSelectedCourses(defaultValues || []);\n  }, []);\n\n  const handleCoursesChange = (indicies) => {\n    setSelectedCourses(indicies);\n  };\n  const handleSubmit = () =>\n    onSubmit(\n      selectedCourses.map((courseIdx) => profile?.pendingCourses[courseIdx])\n    );\n\n  return (\n    <div>\n      <div>\n        It looks like this is your first time using the app for this semester.\n        Please pick out all the courses you want to use Khoury Office Hours for.\n      </div>\n\n      <FormSection>\n        <h3>\n          Courses{\" \"}\n          <Italics>(Select all the courses you are applying for)</Italics>\n        </h3>\n\n        <Select\n          mode=\"multiple\"\n          placeholder=\"Please select your courses\"\n          onChange={handleCoursesChange}\n          style={{ width: \"100%\" }}\n          value={selectedCourses}\n        >\n          {profile?.pendingCourses?.map((course, idx) => (\n            <Select.Option key={course.name} value={idx}>\n              {createSGString(course)}\n            </Select.Option>\n          ))}\n        </Select>\n      </FormSection>\n\n      <FormSection>\n        <h3>The following courses have already registered for the app:</h3>\n        <CoursesBlock>\n          {profile?.courses.map((course) => (\n            <LargeTag key={course.course?.id}>{course.course?.name}</LargeTag>\n          ))}\n        </CoursesBlock>\n      </FormSection>\n\n      <Button\n        onClick={handleSubmit}\n        type=\"primary\"\n        style={{ marginTop: \"30px\" }}\n      >\n        Next\n      </Button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}