{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport { ClockCircleOutlined, CloudSyncOutlined, FrownOutlined, NotificationOutlined, StopOutlined } from \"@ant-design/icons\";\nimport { Button, Tooltip } from \"antd\";\nimport Linkify from \"react-linkify\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useQueue } from \"../../hooks/useQueue\";\nimport { formatQueueTime } from \"../../utils/TimeUtil\";\nimport { RenderEvery } from \"../RenderEvery\";\nimport { TAStatuses } from \"./TAStatuses\";\nexport var Container = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__Container\",\n  componentId: \"sc-1abq9vy-0\"\n})([\"display:flex;flex-direction:row;align-items:center;\"]);\nvar QueueTitle = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__QueueTitle\",\n  componentId: \"sc-1abq9vy-1\"\n})([\"font-weight:500;font-size:24px;color:#212934;\"]);\nexport var NotesText = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__NotesText\",\n  componentId: \"sc-1abq9vy-2\"\n})([\"font-size:16px;color:#5f6b79;\"]); // New queue styled components start here\n\nvar InfoColumnContainer = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__InfoColumnContainer\",\n  componentId: \"sc-1abq9vy-3\"\n})([\"flex-shrink:0;padding-bottom:30px;@media (min-width:650px){margin-top:32px;width:290px;}\"]);\nvar QueueInfoColumnButtonStyle = styled(Button).withConfig({\n  displayName: \"QueueListSharedComponents__QueueInfoColumnButtonStyle\",\n  componentId: \"sc-1abq9vy-4\"\n})([\"font-weight:500;font-size:14px;border:1px solid #cfd6de;border-radius:6px;margin-bottom:12px;\"]);\nexport var QueueInfoColumnButton = function QueueInfoColumnButton(props) {\n  return __jsx(QueueInfoColumnButtonStyle, _extends({\n    size: \"large\",\n    block: true\n  }, props));\n};\nvar QueuePropertyRow = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__QueuePropertyRow\",\n  componentId: \"sc-1abq9vy-5\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-bottom:20px;color:#5f6b79;font-size:20px;\"]);\nvar QueuePropertyText = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__QueuePropertyText\",\n  componentId: \"sc-1abq9vy-6\"\n})([\"margin-left:12px;font-size:16px;min-width:0;overflow-wrap:break-word;white-space:pre-wrap;\"]);\nvar StaffH2 = styled.h2.withConfig({\n  displayName: \"QueueListSharedComponents__StaffH2\",\n  componentId: \"sc-1abq9vy-7\"\n})([\"margin-top:32px;\"]);\nvar QueueRoomGroup = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__QueueRoomGroup\",\n  componentId: \"sc-1abq9vy-8\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-bottom:24px;\"]);\nexport function QueueInfoColumn(_ref) {\n  var queueId = _ref.queueId,\n      buttons = _ref.buttons;\n\n  var _useQueue = useQueue(queueId),\n      queue = _useQueue.queue;\n\n  return __jsx(InfoColumnContainer, null, __jsx(QueueRoomGroup, null, __jsx(QueueTitle, null, queue === null || queue === void 0 ? void 0 : queue.room), !queue.allowQuestions && __jsx(Tooltip, {\n    title: \"This queue is no longer accepting questions\"\n  }, __jsx(StopOutlined, {\n    \"data-cy\": \"stopQuestions\",\n    style: {\n      color: \"red\",\n      fontSize: \"24px\",\n      marginLeft: \"8px\"\n    }\n  }))), queue.startTime && queue.endTime && __jsx(QueuePropertyRow, null, __jsx(ClockCircleOutlined, null), __jsx(QueuePropertyText, {\n    className: \"hide-in-percy\"\n  }, formatQueueTime(queue))), (queue === null || queue === void 0 ? void 0 : queue.notes) && __jsx(QueuePropertyRow, null, __jsx(NotificationOutlined, null), __jsx(Linkify, {\n    componentDecorator: function componentDecorator(decoratedHref, decoratedText, key) {\n      return __jsx(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: decoratedHref,\n        key: key\n      }, decoratedText);\n    }\n  }, __jsx(QueuePropertyText, null, queue.notes))), __jsx(QueueUpToDateInfo, {\n    queueId: queueId\n  }), buttons, __jsx(StaffH2, null, \"Staff\"), __jsx(TAStatuses, {\n    queueId: queueId\n  }));\n}\n\nfunction QueueUpToDateInfo(_ref2) {\n  var queueId = _ref2.queueId;\n\n  var _useState = useState(null),\n      lastUpdated = _useState[0],\n      setLastUpdated = _useState[1];\n\n  var _useQueue2 = useQueue(queueId, setLastUpdated),\n      isLive = _useQueue2.isLive;\n\n  return __jsx(QueuePropertyRow, {\n    className: \"hide-in-percy\"\n  }, isLive || lastUpdated ? __jsx(CloudSyncOutlined, null) : __jsx(FrownOutlined, null), __jsx(QueuePropertyText, {\n    className: \"hide-in-percy\"\n  }, isLive ? \"Queue up to date\" : lastUpdated ? __jsx(RenderEvery, {\n    render: function render() {\n      var secondsAgo = (Date.now() - lastUpdated.getTime()) / 1000;\n      return \"Queue updated \".concat(secondsAgo < 60 ? Math.ceil(secondsAgo) + \"s\" : moment(lastUpdated).fromNow(true), \" ago\");\n    },\n    interval: 1000\n  }) : \"Queue may be out of date\"));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Queue/QueueListSharedComponents.tsx"],"names":["ClockCircleOutlined","CloudSyncOutlined","FrownOutlined","NotificationOutlined","StopOutlined","Button","Tooltip","Linkify","moment","React","useState","styled","useQueue","formatQueueTime","RenderEvery","TAStatuses","Container","div","QueueTitle","NotesText","InfoColumnContainer","QueueInfoColumnButtonStyle","QueueInfoColumnButton","props","QueuePropertyRow","QueuePropertyText","StaffH2","h2","QueueRoomGroup","QueueInfoColumn","queueId","buttons","queue","room","allowQuestions","color","fontSize","marginLeft","startTime","endTime","notes","decoratedHref","decoratedText","key","QueueUpToDateInfo","lastUpdated","setLastUpdated","isLive","secondsAgo","Date","now","getTime","Math","ceil","fromNow"],"mappings":"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","sourcesContent":["import {\n  ClockCircleOutlined,\n  CloudSyncOutlined,\n  FrownOutlined,\n  NotificationOutlined,\n  StopOutlined,\n} from \"@ant-design/icons\";\nimport { Button, Tooltip } from \"antd\";\nimport { ButtonProps } from \"antd/lib/button\";\nimport Linkify from \"react-linkify\";\nimport moment from \"moment\";\nimport React, { ReactElement, ReactNode, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useQueue } from \"../../hooks/useQueue\";\nimport { formatQueueTime } from \"../../utils/TimeUtil\";\nimport { RenderEvery } from \"../RenderEvery\";\nimport { TAStatuses } from \"./TAStatuses\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst QueueTitle = styled.div`\n  font-weight: 500;\n  font-size: 24px;\n  color: #212934;\n`;\n\nexport const NotesText = styled.div`\n  font-size: 16px;\n  color: #5f6b79;\n`;\n\n// New queue styled components start here\n\nconst InfoColumnContainer = styled.div`\n  flex-shrink: 0;\n  padding-bottom: 30px;\n  @media (min-width: 650px) {\n    margin-top: 32px;\n    width: 290px;\n  }\n`;\n\nconst QueueInfoColumnButtonStyle = styled(Button)`\n  font-weight: 500;\n  font-size: 14px;\n  border: 1px solid #cfd6de;\n  border-radius: 6px;\n  margin-bottom: 12px;\n`;\n\nexport const QueueInfoColumnButton = (props: ButtonProps): ReactElement => (\n  <QueueInfoColumnButtonStyle size=\"large\" block {...props} />\n);\n\nconst QueuePropertyRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center; // This kinda funky, not sure how to align the tops of the row\n  margin-bottom: 20px;\n  color: #5f6b79;\n  font-size: 20px;\n`;\n\nconst QueuePropertyText = styled.div`\n  margin-left: 12px;\n  font-size: 16px;\n\n  // To break text in flexbox\n  min-width: 0;\n  overflow-wrap: break-word;\n\n  // to show new lines in the text\n  white-space: pre-wrap;\n`;\n\nconst StaffH2 = styled.h2`\n  margin-top: 32px;\n`;\n\nconst QueueRoomGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 24px;\n`;\ninterface QueueInfoColumnProps {\n  queueId: number;\n  buttons: ReactNode;\n}\n\nexport function QueueInfoColumn({\n  queueId,\n  buttons,\n}: QueueInfoColumnProps): ReactElement {\n  const { queue } = useQueue(queueId);\n  return (\n    <InfoColumnContainer>\n      <QueueRoomGroup>\n        <QueueTitle>{queue?.room}</QueueTitle>\n        {!queue.allowQuestions && (\n          <Tooltip title=\"This queue is no longer accepting questions\">\n            <StopOutlined\n              data-cy=\"stopQuestions\"\n              style={{ color: \"red\", fontSize: \"24px\", marginLeft: \"8px\" }}\n            />\n          </Tooltip>\n        )}\n      </QueueRoomGroup>\n\n      {queue.startTime && queue.endTime && (\n        <QueuePropertyRow>\n          <ClockCircleOutlined />\n          <QueuePropertyText className={\"hide-in-percy\"}>\n            {formatQueueTime(queue)}\n          </QueuePropertyText>\n        </QueuePropertyRow>\n      )}\n      {queue?.notes && (\n        <QueuePropertyRow>\n          <NotificationOutlined />\n          <Linkify\n            componentDecorator={(decoratedHref, decoratedText, key) => (\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={decoratedHref}\n                key={key}\n              >\n                {decoratedText}\n              </a>\n            )}\n          >\n            <QueuePropertyText>{queue.notes}</QueuePropertyText>\n          </Linkify>\n        </QueuePropertyRow>\n      )}\n      <QueueUpToDateInfo queueId={queueId} />\n      {buttons}\n      <StaffH2>Staff</StaffH2>\n      <TAStatuses queueId={queueId} />\n    </InfoColumnContainer>\n  );\n}\n\nfunction QueueUpToDateInfo({ queueId }: { queueId: number }): ReactElement {\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const { isLive } = useQueue(queueId, setLastUpdated);\n  return (\n    <QueuePropertyRow className=\"hide-in-percy\">\n      {isLive || lastUpdated ? <CloudSyncOutlined /> : <FrownOutlined />}\n      <QueuePropertyText className=\"hide-in-percy\">\n        {isLive ? (\n          \"Queue up to date\"\n        ) : lastUpdated ? (\n          <RenderEvery\n            render={() => {\n              const secondsAgo = (Date.now() - lastUpdated.getTime()) / 1000;\n              return `Queue updated ${\n                secondsAgo < 60\n                  ? Math.ceil(secondsAgo) + \"s\"\n                  : moment(lastUpdated).fromNow(true)\n              } ago`;\n            }}\n            interval={1000}\n          />\n        ) : (\n          \"Queue may be out of date\"\n        )}\n      </QueuePropertyText>\n    </QueuePropertyRow>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}