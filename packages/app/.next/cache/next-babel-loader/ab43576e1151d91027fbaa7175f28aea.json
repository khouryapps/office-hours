{"ast":null,"code":"var __jsx = React.createElement;\nimport { Collapse } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport TAQueueListItem from \"./TAQueueListItem\";\nvar OverrideCollapse = styled.div.withConfig({\n  displayName: \"TAQueueListSection__OverrideCollapse\",\n  componentId: \"sc-104de8n-0\"\n})([\"& .ant-collapse-header{padding-left:0 !important;padding-right:0 !important;border-bottom:1px solid #cfd6de;}& .ant-collapse-item-disabled > .ant-collapse-header{cursor:initial !important;}& .ant-collapse-content-box{padding:0 !important;}\"]);\nvar Title = styled.div.withConfig({\n  displayName: \"TAQueueListSection__Title\",\n  componentId: \"sc-104de8n-1\"\n})([\"font-size:16px;color:#212934;margin-left:40px;\"]);\n/**\n * A single section of the list. ie. WaitingInLine\n */\n\nexport default function TAQueueListSection(_ref) {\n  var title = _ref.title,\n      questions = _ref.questions,\n      onClickQuestion = _ref.onClickQuestion,\n      selectedQuestionId = _ref.selectedQuestionId,\n      _ref$showNumbers = _ref.showNumbers,\n      showNumbers = _ref$showNumbers === void 0 ? false : _ref$showNumbers,\n      _ref$collapsible = _ref.collapsible,\n      collapsible = _ref$collapsible === void 0 ? false : _ref$collapsible,\n      _ref$emptyDisplay = _ref.emptyDisplay,\n      emptyDisplay = _ref$emptyDisplay === void 0 ? null : _ref$emptyDisplay;\n\n  if (questions.length === 0 && !emptyDisplay) {\n    return null;\n  }\n\n  return __jsx(OverrideCollapse, null, __jsx(Collapse, {\n    defaultActiveKey: [1],\n    ghost: true,\n    expandIconPosition: \"right\"\n  }, __jsx(Collapse.Panel, {\n    style: {\n      padding: 0\n    },\n    key: 1,\n    header: __jsx(Title, null, title, __jsx(\"span\", null, \" (\".concat(questions.length, \")\"))),\n    showArrow: collapsible,\n    disabled: !collapsible\n  }, questions.length === 0 ? emptyDisplay : __jsx(\"div\", null, questions.map(function (q, i) {\n    return __jsx(TAQueueListItem, {\n      key: q.id,\n      question: q,\n      index: showNumbers && i + 1,\n      selected: selectedQuestionId === q.id,\n      onClick: function onClick() {\n        return onClickQuestion(q.id);\n      }\n    });\n  })))));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Queue/TA/TAQueueListSection.tsx"],"names":["Collapse","React","styled","TAQueueListItem","OverrideCollapse","div","Title","TAQueueListSection","title","questions","onClickQuestion","selectedQuestionId","showNumbers","collapsible","emptyDisplay","length","padding","map","q","i","id"],"mappings":";AACA,SAASA,QAAT,QAAyB,MAAzB;AACA,OAAOC,KAAP,MAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,IAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,uPAAtB;AAeA,IAAMC,KAAK,GAAGJ,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,sDAAX;AAKA;;;;AAGA,eAAe,SAASE,kBAAT,OAgBE;AAAA,MAffC,KAee,QAffA,KAee;AAAA,MAdfC,SAce,QAdfA,SAce;AAAA,MAbfC,eAae,QAbfA,eAae;AAAA,MAZfC,kBAYe,QAZfA,kBAYe;AAAA,8BAXfC,WAWe;AAAA,MAXfA,WAWe,iCAXD,KAWC;AAAA,8BAVfC,WAUe;AAAA,MAVfA,WAUe,iCAVD,KAUC;AAAA,+BATfC,YASe;AAAA,MATfA,YASe,kCATA,IASA;;AACf,MAAIL,SAAS,CAACM,MAAV,KAAqB,CAArB,IAA0B,CAACD,YAA/B,EAA6C;AAC3C,WAAO,IAAP;AACD;;AACD,SACE,MAAC,gBAAD,QACE,MAAC,QAAD;AAAU,IAAA,gBAAgB,EAAE,CAAC,CAAD,CAA5B;AAAiC,IAAA,KAAK,MAAtC;AAAuC,IAAA,kBAAkB,EAAC;AAA1D,KACE,MAAC,QAAD,CAAU,KAAV;AACE,IAAA,KAAK,EAAE;AAAEE,MAAAA,OAAO,EAAE;AAAX,KADT;AAEE,IAAA,GAAG,EAAE,CAFP;AAGE,IAAA,MAAM,EACJ,MAAC,KAAD,QACGR,KADH,EAEE,gCAAYC,SAAS,CAACM,MAAtB,OAFF,CAJJ;AASE,IAAA,SAAS,EAAEF,WATb;AAUE,IAAA,QAAQ,EAAE,CAACA;AAVb,KAYGJ,SAAS,CAACM,MAAV,KAAqB,CAArB,GACCD,YADD,GAGC,mBACGL,SAAS,CAACQ,GAAV,CAAc,UAACC,CAAD,EAAIC,CAAJ;AAAA,WACb,MAAC,eAAD;AACE,MAAA,GAAG,EAAED,CAAC,CAACE,EADT;AAEE,MAAA,QAAQ,EAAEF,CAFZ;AAGE,MAAA,KAAK,EAAEN,WAAW,IAAIO,CAAC,GAAG,CAH5B;AAIE,MAAA,QAAQ,EAAER,kBAAkB,KAAKO,CAAC,CAACE,EAJrC;AAKE,MAAA,OAAO,EAAE;AAAA,eAAMV,eAAe,CAACQ,CAAC,CAACE,EAAH,CAArB;AAAA;AALX,MADa;AAAA,GAAd,CADH,CAfJ,CADF,CADF,CADF;AAkCD","sourcesContent":["import { Question } from \"@koh/common\";\nimport { Collapse } from \"antd\";\nimport React, { ReactElement, ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport TAQueueListItem from \"./TAQueueListItem\";\n\nconst OverrideCollapse = styled.div`\n  & .ant-collapse-header {\n    padding-left: 0 !important;\n    padding-right: 0 !important;\n    border-bottom: 1px solid #cfd6de;\n  }\n  // Prevent the not-allowed cursor which is hella agressive\n  & .ant-collapse-item-disabled > .ant-collapse-header {\n    cursor: initial !important;\n  }\n  & .ant-collapse-content-box {\n    padding: 0 !important;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 16px;\n  color: #212934;\n  margin-left: 40px;\n`;\n/**\n * A single section of the list. ie. WaitingInLine\n */\nexport default function TAQueueListSection({\n  title,\n  questions,\n  onClickQuestion,\n  selectedQuestionId,\n  showNumbers = false,\n  collapsible = false,\n  emptyDisplay = null,\n}: {\n  title: ReactNode;\n  questions: Question[];\n  onClickQuestion: (questionId: number) => void;\n  selectedQuestionId?: number;\n  showNumbers?: boolean;\n  collapsible?: boolean;\n  emptyDisplay?: ReactElement;\n}): ReactElement {\n  if (questions.length === 0 && !emptyDisplay) {\n    return null;\n  }\n  return (\n    <OverrideCollapse>\n      <Collapse defaultActiveKey={[1]} ghost expandIconPosition=\"right\">\n        <Collapse.Panel\n          style={{ padding: 0 }}\n          key={1}\n          header={\n            <Title>\n              {title}\n              <span>{` (${questions.length})`}</span>\n            </Title>\n          }\n          showArrow={collapsible}\n          disabled={!collapsible}\n        >\n          {questions.length === 0 ? (\n            emptyDisplay\n          ) : (\n            <div>\n              {questions.map((q, i) => (\n                <TAQueueListItem\n                  key={q.id}\n                  question={q}\n                  index={showNumbers && i + 1}\n                  selected={selectedQuestionId === q.id}\n                  onClick={() => onClickQuestion(q.id)}\n                />\n              ))}\n            </div>\n          )}\n        </Collapse.Panel>\n      </Collapse>\n    </OverrideCollapse>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}