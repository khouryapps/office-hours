{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from \"react\";\nimport { API } from \"@koh/api-client\";\nimport useSWR from \"swr\";\nimport { Tooltip, Card, Space, Drawer, Button, DatePicker, Divider, Row, Spin } from \"antd\";\nimport { InfoCircleOutlined, QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { useProfile } from \"../../../hooks/useProfile\";\nimport { InsightComponent } from \"@koh/common\";\nimport BarChartComponent from \"../../../components/Insights/components/BarChartComponent\";\nimport SimpleDisplayComponent from \"../../../components/Insights/components/SimpleDisplayComponent\";\nimport InsightsDisplayOptions from \"../../../components/Insights/components/InsightsDisplayOptions\";\nimport { SimpleTable } from \"../../../components/Insights/components/SimpleTable\";\nimport NavBar from \"../../../components/Nav/NavBar\";\nimport { StandardPageContainer } from \"../../../components/common/PageContainer\";\nimport { useRouter } from \"next/router\";\nimport styled from \"styled-components\";\nconst InsightsRowContainer = styled.div.withConfig({\n  displayName: \"insights__InsightsRowContainer\",\n  componentId: \"sc-13ej1wk-0\"\n})([\"display:flex;direction:ltr;margin-left:-0.5%;margin-right:-0.5%;\"]);\nexport default function Insights() {\n  const profile = useProfile();\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const {\n    0: dateRange,\n    1: setDateRange\n  } = useState({\n    start: \"\",\n    end: \"\"\n  });\n  const {\n    0: mostActiveStudentsPage,\n    1: setMostActiveStudentsPage\n  } = useState(1);\n  const {\n    data: allInsights\n  } = useSWR(`api/v1/insights/listAll`, async () => API.insights.list());\n  const {\n    0: settingsVisible,\n    1: setSettingsVisible\n  } = useState(false);\n\n  if (!allInsights || !(profile !== null && profile !== void 0 && profile.insights)) {\n    return null;\n  } // Group users insights by size (small | default) so they can be rendered correctly\n\n\n  const [smallInsights, defaultInsights] = profile.insights.reduce(([smallInsights, defaultInsights], insight) => allInsights[insight].size === \"small\" ? [[...smallInsights, insight], defaultInsights] : [smallInsights, [...defaultInsights, insight]], [[], []]);\n  const {\n    RangePicker\n  } = DatePicker;\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(StandardPageContainer, {\n      children: [/*#__PURE__*/_jsx(NavBar, {\n        courseId: Number(cid)\n      }), /*#__PURE__*/_jsxs(Row, {\n        align: \"middle\",\n        justify: \"space-between\",\n        style: {\n          margin: \"12px 0px\"\n        },\n        children: [/*#__PURE__*/_jsx(\"h1\", {\n          style: {\n            display: \"inline\",\n            margin: \"0px\"\n          },\n          children: \"Insights Dashboard\"\n        }), /*#__PURE__*/_jsxs(Row, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            style: {\n              maxWidth: \"200 px\"\n            },\n            children: [/*#__PURE__*/_jsx(Tooltip, {\n              title: \"If no date range is selected results are from the data for the full semester so far\",\n              children: /*#__PURE__*/_jsx(QuestionCircleOutlined, {})\n            }), /*#__PURE__*/_jsx(\"b\", {\n              style: {\n                display: \"inline-block\",\n                marginRight: \"12px\",\n                marginLeft: \"8px\"\n              },\n              children: \"Date Range\"\n            }), /*#__PURE__*/_jsx(RangePicker, {\n              onChange: (_, dateString) => setDateRange({\n                start: dateString[0],\n                end: dateString[1]\n              })\n            })]\n          }), /*#__PURE__*/_jsx(Button, {\n            style: {\n              marginLeft: \"24px\"\n            },\n            onClick: () => setSettingsVisible(true),\n            children: \"Edit Insights\"\n          })]\n        })]\n      }), /*#__PURE__*/_jsx(Divider, {\n        style: {\n          margin: \"0 0 16px 0\"\n        }\n      }), /*#__PURE__*/_jsx(Drawer, {\n        title: \"Display Options\",\n        placement: \"left\",\n        closable: true,\n        destroyOnClose: true,\n        onClose: () => setSettingsVisible(false),\n        visible: settingsVisible,\n        width: 400,\n        children: /*#__PURE__*/_jsx(InsightsDisplayOptions, {})\n      }), /*#__PURE__*/_jsx(InsightsRowContainer, {\n        children: smallInsights === null || smallInsights === void 0 ? void 0 : smallInsights.map(insightName => {\n          return /*#__PURE__*/_jsx(MemoizedRenderInsight, {\n            insightName: insightName,\n            insightDisplay: allInsights[insightName],\n            dateRange: dateRange,\n            mostActiveStudentsPage: mostActiveStudentsPage,\n            setMostActiveStudentsPage: setMostActiveStudentsPage\n          }, insightName);\n        })\n      }), /*#__PURE__*/_jsx(InsightsRowContainer, {\n        children: defaultInsights === null || defaultInsights === void 0 ? void 0 : defaultInsights.map(insightName => {\n          return /*#__PURE__*/_jsx(MemoizedRenderInsight, {\n            insightName: insightName,\n            insightDisplay: allInsights[insightName],\n            dateRange: dateRange,\n            mostActiveStudentsPage: mostActiveStudentsPage,\n            setMostActiveStudentsPage: setMostActiveStudentsPage\n          }, insightName);\n        })\n      })]\n    })\n  });\n}\n\nconst equalRenderInsights = (prevProps, nextProps) => {\n  if (prevProps.insightName === \"MostActiveStudents\" && nextProps.insightName === \"MostActiveStudents\") {\n    return prevProps.mostActiveStudentsPage === nextProps.mostActiveStudentsPage && prevProps.dateRange.start === nextProps.dateRange.start && prevProps.dateRange.end === nextProps.dateRange.end;\n  } else {\n    return prevProps.insightName === nextProps.insightName && prevProps.dateRange.start === nextProps.dateRange.start && prevProps.dateRange.end === nextProps.dateRange.end;\n  }\n};\n\nconst MemoizedRenderInsight = /*#__PURE__*/React.memo(RenderInsight, equalRenderInsights);\n\nfunction RenderInsight({\n  insightName,\n  insightDisplay,\n  dateRange,\n  mostActiveStudentsPage,\n  setMostActiveStudentsPage\n}) {\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const limit = insightName === \"MostActiveStudents\" ? 6 : null;\n  const offset = insightName === \"MostActiveStudents\" ? (mostActiveStudentsPage - 1) * limit : null;\n  const {\n    data: insightOutput\n  } = useSWR(cid && `api/v1/insights/${cid}/${insightName}?start=${dateRange.start}&end=${dateRange.end}${limit ? \"limit&6\" : \"\"}${offset ? `offset&${offset}` : \"\"}`, async () => await API.insights.get(Number(cid), insightName, {\n    start: dateRange.start,\n    end: dateRange.end,\n    limit,\n    offset\n  }));\n  let insightComponent;\n\n  if (insightOutput === undefined) {\n    insightComponent = /*#__PURE__*/_jsx(Spin, {\n      style: {\n        margin: \"10% 45%\"\n      }\n    });\n  } else {\n    switch (insightDisplay.component) {\n      case InsightComponent.SimpleDisplay:\n        insightComponent = /*#__PURE__*/_jsx(SimpleDisplayComponent, {\n          output: insightOutput\n        }, insightName);\n        break;\n\n      case InsightComponent.BarChart:\n        insightComponent = /*#__PURE__*/_jsx(BarChartComponent, {\n          output: insightOutput\n        }, insightName);\n        break;\n\n      case InsightComponent.SimpleTable:\n        insightComponent = /*#__PURE__*/_jsx(SimpleTable, {\n          output: insightOutput,\n          currentPage: mostActiveStudentsPage,\n          setPage: setMostActiveStudentsPage\n        }, insightName);\n        break;\n\n      default:\n        // Line below will show error if switch is not exhaustive of all enum values\n        componentDoesNotExist(insightDisplay.component);\n    }\n  }\n\n  return /*#__PURE__*/_jsx(Card, {\n    size: insightDisplay.size,\n    title: insightDisplay.displayName,\n    style: {\n      margin: \"0.5%\",\n      padding: \"2px\",\n      width: insightDisplay.size === \"default\" ? \"50%\" : \"16.66%\",\n      maxWidth: insightDisplay.size === \"default\" ? \"625px\" : \"200px\"\n    },\n    bodyStyle: {\n      position: \"relative\"\n    },\n    extra: /*#__PURE__*/_jsx(Space, {\n      children: /*#__PURE__*/_jsx(Tooltip, {\n        title: insightDisplay.description,\n        children: /*#__PURE__*/_jsx(InfoCircleOutlined, {})\n      })\n    }),\n    children: insightComponent\n  });\n}\n\nfunction componentDoesNotExist(componentName) {\n  throw new Error(`Component ${componentName} was unable to be rendered`);\n}","map":null,"metadata":{},"sourceType":"module"}