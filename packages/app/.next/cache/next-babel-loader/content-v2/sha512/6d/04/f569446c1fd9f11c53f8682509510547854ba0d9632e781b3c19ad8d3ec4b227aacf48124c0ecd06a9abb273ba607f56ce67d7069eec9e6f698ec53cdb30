{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API } from \"@koh/api-client\";\nimport { AlertType } from \"@koh/common\";\nimport React from \"react\";\nimport useSWR from \"swr\";\nimport { useRouter } from \"next/router\";\nimport StudentQuestionRephraseModal from \"../Queue/Student/StudentQuestionRephraseModal\";\nexport default function AlertsContainer(_ref) {\n  var courseId = _ref.courseId;\n  var router = useRouter();\n\n  var _useSWR = useSWR(\"/api/v1/alerts\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", API.alerts.get(courseId));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      data = _useSWR.data,\n      mutateAlerts = _useSWR.mutate;\n\n  var alerts = data === null || data === void 0 ? void 0 : data.alerts;\n\n  var handleClose = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(alertId, courseId, queueId) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return API.alerts.close(alertId);\n\n            case 2:\n              mutateAlerts();\n              router.push(\"/course/\".concat(courseId, \"/queue/\").concat(queueId, \"?edit_question=true\"));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleClose(_x, _x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var alertDivs = alerts === null || alerts === void 0 ? void 0 : alerts.map(function (alert) {\n    switch (alert.alertType) {\n      case AlertType.REPHRASE_QUESTION:\n        return /*#__PURE__*/_jsx(StudentQuestionRephraseModal, {\n          payload: alert.payload,\n          handleClose: /*#__PURE__*/function () {\n            var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(courseId, queueId) {\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return handleClose(alert.id, courseId, queueId);\n\n                    case 2:\n                      return _context3.abrupt(\"return\", _context3.sent);\n\n                    case 3:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            }));\n\n            return function (_x4, _x5) {\n              return _ref4.apply(this, arguments);\n            };\n          }()\n        });\n    }\n  }); // probably want some better way of handling multiple alerts\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: alertDivs\n  });\n}","map":null,"metadata":{},"sourceType":"module"}