{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { API } from \"@koh/api-client\";\nimport { Role } from \"@koh/common\";\nimport { Input, Modal, Radio } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useProfile } from \"../../hooks/useProfile\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport TACheckinButton, { CheckinButton } from \"./TACheckinButton\";\nconst ProfessorModalRadio = styled(Radio).withConfig({\n  displayName: \"ProfessorCheckinButton__ProfessorModalRadio\",\n  componentId: \"sc-dqhp9z-0\"\n})([\"display:block;height:30px;lineheight:30px;\"]);\nexport default function TodayPageCheckinButton() {\n  const profile = useProfile();\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const {\n    0: queueToCheckInto,\n    1: setQueueToCheckInto\n  } = useState(0);\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const {\n    course\n  } = useCourse(Number(cid));\n  const role = useRoleInCourse(Number(cid));\n  const queueCheckedIn = course === null || course === void 0 ? void 0 : course.queues.find(queue => queue.staffList.find(staff => staff.id === (profile === null || profile === void 0 ? void 0 : profile.id)));\n  const {\n    0: queueToBeCreated,\n    1: setQueueToBeCreated\n  } = useState(`Professor ${profile === null || profile === void 0 ? void 0 : profile.lastName}'s Office Hours`);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [modalVisible && /*#__PURE__*/_jsxs(Modal, {\n      title: \"Check-In To Office Hours\",\n      visible: modalVisible,\n      onCancel: () => setModalVisible(false),\n      okText: \"Check In\",\n      onOk: async () => {\n        let redirectID;\n\n        if (queueToCheckInto > -1) {\n          redirectID = await API.taStatus.checkIn(Number(cid), course === null || course === void 0 ? void 0 : course.queues[queueToCheckInto].room);\n        } else {\n          redirectID = await API.taStatus.checkIn(Number(cid), queueToBeCreated);\n        }\n\n        router.push(\"/course/[cid]/queue/[qid]\", `/course/${Number(cid)}/queue/${redirectID.id}`);\n      },\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: \"Which queue would you like to check into?\"\n      }), /*#__PURE__*/_jsxs(Radio.Group, {\n        value: queueToCheckInto,\n        onChange: e => setQueueToCheckInto(e.target.value),\n        children: [course === null || course === void 0 ? void 0 : course.queues.map((q, i) => /*#__PURE__*/_jsx(ProfessorModalRadio, {\n          value: i,\n          children: q.room\n        }, q.id)), /*#__PURE__*/_jsxs(ProfessorModalRadio, {\n          value: -1,\n          children: [\"Other...\", queueToCheckInto === -1 ? /*#__PURE__*/_jsx(Input, {\n            defaultValue: `Professor ${profile.lastName}'s Office Hours`,\n            onChange: e => setQueueToBeCreated(e.target.value),\n            style: {\n              width: 400,\n              marginLeft: 10\n            }\n          }) : null]\n        })]\n      })]\n    }), role === Role.TA && /*#__PURE__*/_jsx(TACheckinButton, {\n      courseId: Number(cid),\n      room: \"Online\",\n      state: queueCheckedIn ? \"CheckedIn\" : \"CheckedOut\"\n    }), !queueCheckedIn && role === Role.PROFESSOR && /*#__PURE__*/_jsx(CheckinButton, {\n      type: \"default\",\n      size: \"large\",\n      onClick: () => setModalVisible(true),\n      children: \"Check In\"\n    }), queueCheckedIn && role === Role.PROFESSOR && /*#__PURE__*/_jsx(TACheckinButton, {\n      courseId: Number(cid),\n      room: queueCheckedIn.room,\n      state: \"CheckedIn\"\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}