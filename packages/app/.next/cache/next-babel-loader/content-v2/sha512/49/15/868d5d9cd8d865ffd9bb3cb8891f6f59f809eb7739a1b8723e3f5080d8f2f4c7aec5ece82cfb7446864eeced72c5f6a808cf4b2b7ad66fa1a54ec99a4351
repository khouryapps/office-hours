{"ast":null,"code":"import { useProfile } from \"./useProfile\";\nimport { useQuestions } from \"./useQuestions\";\nimport { useQueue } from \"./useQueue\";\n/**\n * Get information about the currently logged-in TA, in the context of the given queue\n * TODO: The server could probably return this data more directly, instead of us having to run find and some on arrays\n */\n\nexport function useTAInQueueInfo(queueId) {\n  var _questions$questionsG, _questions$groups;\n\n  const user = useProfile();\n  const {\n    queue\n  } = useQueue(queueId);\n  const {\n    questions\n  } = useQuestions(queueId);\n  const helpingQuestions = questions === null || questions === void 0 ? void 0 : (_questions$questionsG = questions.questionsGettingHelp) === null || _questions$questionsG === void 0 ? void 0 : _questions$questionsG.filter(question => {\n    var _question$taHelped;\n\n    return ((_question$taHelped = question.taHelped) === null || _question$taHelped === void 0 ? void 0 : _question$taHelped.id) === (user === null || user === void 0 ? void 0 : user.id);\n  });\n  const helpingGroup = questions === null || questions === void 0 ? void 0 : (_questions$groups = questions.groups) === null || _questions$groups === void 0 ? void 0 : _questions$groups.find(g => g.creator.id === user.id);\n  const isHelping = (helpingQuestions === null || helpingQuestions === void 0 ? void 0 : helpingQuestions.length) > 0 || !!helpingGroup;\n  const isCheckedIn = queue === null || queue === void 0 ? void 0 : queue.staffList.some(e => e.id === (user === null || user === void 0 ? void 0 : user.id));\n  return {\n    helpingQuestions,\n    helpingGroup,\n    isHelping,\n    isCheckedIn\n  };\n}","map":null,"metadata":{},"sourceType":"module"}