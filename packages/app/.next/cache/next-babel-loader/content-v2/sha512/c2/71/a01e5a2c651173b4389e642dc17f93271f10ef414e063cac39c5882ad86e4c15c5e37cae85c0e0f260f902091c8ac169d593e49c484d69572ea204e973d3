{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport ConfirmCourses from \"./ConfirmCourses\";\nimport EditCourse from \"./EditCourse\";\nimport SelectCourses from \"./SelectCourses\";\nimport { message, Progress } from \"antd\";\nimport styled from \"styled-components\";\nimport { API } from \"@koh/api-client\";\nimport useSWR from \"swr\";\nimport Router from \"next/router\";\nconst ProgressBar = styled(Progress).withConfig({\n  displayName: \"ApplyPage__ProgressBar\",\n  componentId: \"sc-dtpg8c-0\"\n})([\"padding-bottom:2.5em;& .ant-progress-inner{border:1px solid #d9d9d9;}\"]);\nexport function createSGString({\n  name,\n  crns\n}) {\n  return `${name} (CRNs: ${crns.join(\", \")})`;\n}\nexport const Highlight = styled.span.withConfig({\n  displayName: \"ApplyPage__Highlight\",\n  componentId: \"sc-dtpg8c-1\"\n})([\"color:#1890ff;\"]);\nexport default function ApplyPage() {\n  const {\n    0: postBody,\n    1: setPostBody\n  } = useState([]);\n  const {\n    0: currentCourse,\n    1: setCurrentCourse\n  } = useState(-1);\n  const {\n    data: profile,\n    mutate: mutateProfile\n  } = useSWR(`api/v1/profile`, async () => API.profile.index());\n\n  const handleSelectCourses = selectedCourses => {\n    setPostBody(selectedCourses.map(course => ({\n      name: course.name,\n      crns: course.crns\n    })));\n    setCurrentCourse(currentCourse + 1);\n  };\n\n  const handleEditCourse = courseInfo => {\n    const newPostBody = [...postBody];\n    newPostBody[currentCourse] = _objectSpread(_objectSpread({}, postBody[currentCourse]), courseInfo);\n    setPostBody(newPostBody);\n    setCurrentCourse(currentCourse + 1);\n  };\n\n  const handleSubmitCourses = async () => {\n    try {\n      await API.course.registerCourses(postBody.map(courseInfo => ({\n        name: courseInfo.displayName,\n        sectionGroupName: courseInfo.name,\n        iCalURL: courseInfo.iCalURL,\n        coordinator_email: courseInfo.coordinator_email,\n        timezone: courseInfo.timezone\n      })));\n      message.success(\"Successfully registered courses. Redirecting you to the app...\");\n      await mutateProfile();\n      Router.push(\"/course/[cid]/today\", `/course/${profile.courses[0].course.id}/today`);\n    } catch (e) {\n      var _e$response, _e$response$data;\n\n      message.error((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n    }\n  };\n\n  const calculateProgress = () => {\n    return Math.round((currentCourse + 1) * 100 / postBody.length);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      padding: \"3% 12%\"\n    },\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      children: \"Apply for Khoury Office Hours\"\n    }), /*#__PURE__*/_jsx(ProgressBar, {\n      percent: calculateProgress(),\n      strokeColor: \"#408FEA\",\n      trailColor: \"white\",\n      strokeWidth: 12\n    }), currentCourse < 0 ? /*#__PURE__*/_jsx(SelectCourses, {\n      onSubmit: handleSelectCourses,\n      initialValues: postBody.map(c => c.name)\n    }) : currentCourse < postBody.length ? /*#__PURE__*/_jsx(EditCourse, {\n      courseInfo: postBody[currentCourse],\n      onSubmitCourse: handleEditCourse,\n      onBack: () => setCurrentCourse(currentCourse - 1)\n    }) : /*#__PURE__*/_jsx(ConfirmCourses, {\n      courses: postBody,\n      onSubmit: handleSubmitCourses,\n      onBack: () => setCurrentCourse(currentCourse - 1)\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}