{"ast":null,"code":"import _slicedToArray from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { CheckOutlined, CloseOutlined, DeleteOutlined, PhoneOutlined, QuestionOutlined, UndoOutlined } from \"@ant-design/icons\";\nimport { API } from \"@koh/api-client\";\nimport { AlertType, ClosedQuestionStatus, LimboQuestionStatus, OpenQuestionStatus } from \"@koh/common\";\nimport { message, Popconfirm, Tooltip } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport { useDefaultMessage } from \"../../../hooks/useDefaultMessage\";\nimport { useQuestions } from \"../../../hooks/useQuestions\";\nimport { useTAInQueueInfo } from \"../../../hooks/useTAInQueueInfo\";\nimport { BannerDangerButton, BannerOrangeButton, BannerPrimaryButton, CantFindButton, FinishHelpingButton, RequeueButton } from \"../Banner\";\nimport { useTeams } from \"../../../hooks/useTeams\";\nvar PRORITY_QUEUED_MESSAGE_TEXT = \"This student has been temporarily removed from the queue. They must select to rejoin the queue and will then be placed in the Priority Queue.\";\nexport default function TAQueueDetailButtons(_ref) {\n  var courseId = _ref.courseId,\n      queueId = _ref.queueId,\n      question = _ref.question,\n      hasUnresolvedRephraseAlert = _ref.hasUnresolvedRephraseAlert;\n  var defaultMessage = useDefaultMessage();\n\n  var _useQuestions = useQuestions(queueId),\n      mutateQuestions = _useQuestions.mutateQuestions;\n\n  var changeStatus = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(status) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return API.questions.update(question.id, {\n                status: status\n              });\n\n            case 2:\n              mutateQuestions();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [question.id, mutateQuestions]);\n\n  var _useTAInQueueInfo = useTAInQueueInfo(queueId),\n      isCheckedIn = _useTAInQueueInfo.isCheckedIn,\n      isHelping = _useTAInQueueInfo.isHelping;\n\n  var openTeams = useTeams(queueId, question.creator.email, defaultMessage); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  var sendRephraseAlert = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var payload;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              payload = {\n                queueId: queueId,\n                questionId: question.id,\n                courseId: courseId\n              };\n              _context2.prev = 1;\n              _context2.next = 4;\n              return API.alerts.create({\n                alertType: AlertType.REPHRASE_QUESTION,\n                courseId: courseId,\n                payload: payload,\n                targetUserId: question.creator.id\n              });\n\n            case 4:\n              _context2.next = 6;\n              return mutateQuestions();\n\n            case 6:\n              message.success(\"Successfully asked student to rephrase their question.\");\n              _context2.next = 11;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 9]]);\n    }));\n\n    return function sendRephraseAlert() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var helpStudent = function helpStudent() {\n    changeStatus(OpenQuestionStatus.Helping);\n    openTeams();\n  };\n\n  if (question.status === OpenQuestionStatus.Helping) {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Popconfirm, {\n        title: \"Are you sure you want to send this student back to the queue?\",\n        okText: \"Yes\",\n        cancelText: \"No\",\n        onConfirm: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  message.success(PRORITY_QUEUED_MESSAGE_TEXT, 2);\n                  _context3.next = 3;\n                  return changeStatus(LimboQuestionStatus.ReQueueing);\n\n                case 3:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        })),\n        children: /*#__PURE__*/_jsx(Tooltip, {\n          title: \"Requeue Student\",\n          children: /*#__PURE__*/_jsx(RequeueButton, {\n            icon: /*#__PURE__*/_jsx(UndoOutlined, {}),\n            \"data-cy\": \"requeue-student-button\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(Popconfirm, {\n        title: \"Are you sure you can't find this student?\",\n        okText: \"Yes\",\n        cancelText: \"No\",\n        onConfirm: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  message.success(PRORITY_QUEUED_MESSAGE_TEXT, 2);\n                  _context4.next = 3;\n                  return changeStatus(LimboQuestionStatus.CantFind);\n\n                case 3:\n                  _context4.next = 5;\n                  return API.questions.notify(question.id);\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        })),\n        children: /*#__PURE__*/_jsx(Tooltip, {\n          title: \"Can't Find\",\n          children: /*#__PURE__*/_jsx(CantFindButton, {\n            shape: \"circle\",\n            icon: /*#__PURE__*/_jsx(CloseOutlined, {}),\n            \"data-cy\": \"cant-find-button\"\n          })\n        })\n      }), /*#__PURE__*/_jsx(Tooltip, {\n        title: \"Finish Helping\",\n        children: /*#__PURE__*/_jsx(FinishHelpingButton, {\n          icon: /*#__PURE__*/_jsx(CheckOutlined, {}),\n          onClick: function onClick() {\n            return changeStatus(ClosedQuestionStatus.Resolved);\n          },\n          \"data-cy\": \"finish-helping-button\"\n        })\n      })]\n    });\n  } else {\n    var _ref6 = function () {\n      if (!isCheckedIn) {\n        return [false, \"You must check in to help students!\"];\n      } else if (isHelping) {\n        return [false, \"You are already helping a student\"];\n      } else {\n        return [true, \"Help Student\"];\n      }\n    }(),\n        _ref7 = _slicedToArray(_ref6, 2),\n        canHelp = _ref7[0],\n        helpTooltip = _ref7[1];\n\n    var _ref8 = function () {\n      if (!isCheckedIn) {\n        return [false, \"You must check in to ask this student to rephrase their question\"];\n      } else if (hasUnresolvedRephraseAlert) {\n        return [false, \"The student has already been asked to rephrase their question\"];\n      } else {\n        return [true, \"Ask the student to add more detail to their question\"];\n      }\n    }(),\n        _ref9 = _slicedToArray(_ref8, 2),\n        canRephrase = _ref9[0],\n        rephraseTooltip = _ref9[1];\n\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(Popconfirm, {\n        title: \"Are you sure you want to delete this question from the queue?\",\n        disabled: !isCheckedIn,\n        okText: \"Yes\",\n        cancelText: \"No\",\n        onConfirm: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return changeStatus(question.status === OpenQuestionStatus.Drafting ? ClosedQuestionStatus.DeletedDraft : LimboQuestionStatus.TADeleted);\n\n                case 2:\n                  _context5.next = 4;\n                  return API.questions.notify(question.id);\n\n                case 4:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        })),\n        children: /*#__PURE__*/_jsx(Tooltip, {\n          title: isCheckedIn ? \"Remove From Queue\" : \"You must check in to remove students from the queue\",\n          children: /*#__PURE__*/_jsx(\"span\", {\n            children: /*#__PURE__*/_jsx(BannerDangerButton, {\n              shape: \"circle\",\n              icon: /*#__PURE__*/_jsx(DeleteOutlined, {}),\n              \"data-cy\": \"remove-from-queue\",\n              disabled: !isCheckedIn\n            })\n          })\n        })\n      }), /*#__PURE__*/_jsx(Tooltip, {\n        title: rephraseTooltip,\n        children: /*#__PURE__*/_jsx(\"span\", {\n          children: /*#__PURE__*/_jsx(BannerOrangeButton, {\n            shape: \"circle\",\n            icon: /*#__PURE__*/_jsx(QuestionOutlined, {}),\n            onClick: sendRephraseAlert,\n            \"data-cy\": \"request-rephrase-question\",\n            disabled: !canRephrase\n          })\n        })\n      }), /*#__PURE__*/_jsx(Tooltip, {\n        title: helpTooltip,\n        children: /*#__PURE__*/_jsx(\"span\", {\n          children: /*#__PURE__*/_jsx(BannerPrimaryButton, {\n            icon: /*#__PURE__*/_jsx(PhoneOutlined, {}),\n            onClick: function onClick() {\n              return helpStudent();\n            },\n            disabled: !canHelp,\n            \"data-cy\": \"help-student\"\n          })\n        })\n      })]\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}