{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API } from \"@koh/api-client\";\nimport { Button } from \"antd\";\nimport React, { useState } from \"react\";\nvar CalendarUpdateStatus;\n\n(function (CalendarUpdateStatus) {\n  CalendarUpdateStatus[CalendarUpdateStatus[\"BEFORE\"] = 0] = \"BEFORE\";\n  CalendarUpdateStatus[CalendarUpdateStatus[\"UPDATING\"] = 1] = \"UPDATING\";\n  CalendarUpdateStatus[CalendarUpdateStatus[\"AFTER\"] = 2] = \"AFTER\";\n})(CalendarUpdateStatus || (CalendarUpdateStatus = {}));\n\nexport default function UpdateCalendarButton(_ref) {\n  var courseId = _ref.courseId;\n\n  var _useState = useState(CalendarUpdateStatus.BEFORE),\n      updated = _useState[0],\n      setUpdated = _useState[1];\n\n  var updateCalendar = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setUpdated(CalendarUpdateStatus.UPDATING);\n              _context.next = 3;\n              return API.course.updateCalendar(courseId);\n\n            case 3:\n              setUpdated(CalendarUpdateStatus.AFTER);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateCalendar() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  switch (updated) {\n    case CalendarUpdateStatus.BEFORE:\n      return /*#__PURE__*/_jsx(Button, {\n        type: \"primary\",\n        onClick: updateCalendar,\n        children: \"Update Calendar\"\n      });\n\n    case CalendarUpdateStatus.UPDATING:\n      return /*#__PURE__*/_jsx(Button, {\n        type: \"primary\",\n        loading: true,\n        children: \"Updating Calendar...\"\n      });\n\n    case CalendarUpdateStatus.AFTER:\n      return /*#__PURE__*/_jsx(Button, {\n        type: \"primary\",\n        disabled: true,\n        children: \"Calendar Updated!\"\n      });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}