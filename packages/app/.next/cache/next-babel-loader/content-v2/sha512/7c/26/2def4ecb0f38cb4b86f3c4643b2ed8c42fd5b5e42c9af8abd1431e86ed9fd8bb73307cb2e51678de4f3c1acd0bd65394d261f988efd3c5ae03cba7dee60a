{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React from \"react\";\nimport { useQuestions } from \"../../../../hooks/useQuestions\";\nimport AllQuestionsCheckList from \"./AllQuestionsChecklist\";\nimport { CurrentGroupList } from \"./CurrentGroupList\";\nexport default function TAGroupDetail(_ref) {\n  var groupCreator = _ref.groupCreator,\n      queueId = _ref.queueId,\n      courseId = _ref.courseId;\n\n  var _useQuestions = useQuestions(queueId),\n      questions = _useQuestions.questions,\n      mutateQuestions = _useQuestions.mutateQuestions;\n\n  var allQuestions = [].concat(_toConsumableArray(questions.queue), _toConsumableArray(questions.priorityQueue));\n  var myGroup = questions === null || questions === void 0 ? void 0 : questions.groups.find(function (group) {\n    return group.creator.id === groupCreator.id;\n  });\n  var groupedQuestions = myGroup ? myGroup.questions : [];\n  var groupableQuestions = allQuestions.filter(function (q) {\n    return q.groupable;\n  });\n  return groupedQuestions.length ? /*#__PURE__*/_jsx(CurrentGroupList, {\n    courseId: courseId,\n    group: myGroup,\n    queueId: queueId\n  }) : /*#__PURE__*/_jsx(AllQuestionsCheckList, {\n    allQuestions: groupableQuestions,\n    hasMissingQuestions: groupableQuestions.length != allQuestions.length,\n    groupCreator: groupCreator,\n    queueId: queueId,\n    onStartCall: function onStartCall() {\n      mutateQuestions();\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}