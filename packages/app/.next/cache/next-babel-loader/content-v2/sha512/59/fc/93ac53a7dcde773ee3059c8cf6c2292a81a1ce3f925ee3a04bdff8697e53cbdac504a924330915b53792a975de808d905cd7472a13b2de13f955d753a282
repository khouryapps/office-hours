{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { API } from \"@koh/api-client\";\nimport { Role } from \"@koh/common\";\nimport { Button, message } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useProfile } from \"../../hooks/useProfile\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport QueueCheckInModal from \"./QueueCheckInModal\";\nimport QueueCreateModal from \"./QueueCreateModal\";\nimport TACheckinButton, { CheckinButton } from \"./TACheckinButton\";\nconst CreateQueueButton = styled(Button).withConfig({\n  displayName: \"QueueCheckInButton__CreateQueueButton\",\n  componentId: \"sc-epn23y-0\"\n})([\"color:white;background:#2a9187;&:hover,&:focus{color:white;background:#39aca1;}\"]);\nexport default function TodayPageCheckinButton() {\n  // state for check in modal\n  const {\n    0: checkInModalVisible,\n    1: setCheckInModalVisible\n  } = useState(false);\n  const {\n    0: createQueueModalVisible,\n    1: setCreateQueueModalVisible\n  } = useState(false);\n  const profile = useProfile();\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const {\n    course,\n    mutateCourse\n  } = useCourse(Number(cid));\n  const role = useRoleInCourse(Number(cid));\n  const availableQueues = course === null || course === void 0 ? void 0 : course.queues.filter(q => role === Role.TA ? !q.isProfessorQueue : true);\n  const queueCheckedIn = course === null || course === void 0 ? void 0 : course.queues.find(queue => queue.staffList.find(staff => staff.id === (profile === null || profile === void 0 ? void 0 : profile.id)));\n  const numQueues = course === null || course === void 0 ? void 0 : course.queues.length;\n\n  const renderProperModal = () => {\n    numQueues !== 0 ? setCheckInModalVisible(true) : setCreateQueueModalVisible(true);\n  };\n\n  const submitMakeQueue = async submittedForm => {\n    const queueRequest = await submittedForm.validateFields();\n\n    try {\n      await API.taStatus.makeQueue(Number(cid), queueRequest.officeHourName, !queueRequest.allowTA, queueRequest.notes);\n      message.success(`Created a new queue ${queueRequest.officeHourName}. Checking you in...`);\n      const redirectID = await API.taStatus.checkIn(Number(cid), queueRequest.officeHourName);\n      mutateCourse();\n      router.push(\"/course/[cid]/queue/[qid]\", `/course/${Number(cid)}/queue/${redirectID.id}`);\n      setCreateQueueModalVisible(false);\n    } catch (err) {\n      var _err$response, _err$response$data;\n\n      message.error((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message);\n    }\n  };\n\n  const onCreateQueueButtonClick = () => {\n    setCheckInModalVisible(false);\n    setCreateQueueModalVisible(true);\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [checkInModalVisible && /*#__PURE__*/_jsx(QueueCheckInModal, {\n      visible: checkInModalVisible,\n      onSubmit: async queueId => {\n        let redirectID;\n\n        try {\n          redirectID = await API.taStatus.checkIn(Number(cid), availableQueues[queueId].room);\n          mutateCourse();\n          router.push(\"/course/[cid]/queue/[qid]\", `/course/${Number(cid)}/queue/${redirectID.id}`);\n        } catch (err) {\n          var _err$response2, _err$response2$data;\n\n          message.error((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message);\n        }\n      },\n      onCancel: () => setCheckInModalVisible(false),\n      button: /*#__PURE__*/_jsx(CreateQueueButton, {\n        onClick: onCreateQueueButtonClick,\n        children: \"+ Create Queue\"\n      }),\n      queues: availableQueues\n    }), createQueueModalVisible && /*#__PURE__*/_jsx(QueueCreateModal, {\n      visible: createQueueModalVisible,\n      onSubmit: submitMakeQueue,\n      onCancel: () => setCreateQueueModalVisible(false),\n      role: role,\n      lastName: profile === null || profile === void 0 ? void 0 : profile.lastName\n    }), !queueCheckedIn && role !== Role.STUDENT && /*#__PURE__*/_jsx(CheckinButton, {\n      type: \"default\",\n      size: \"large\",\n      \"data-cy\": \"check-in-modal-button\",\n      onClick: () => renderProperModal(),\n      children: \"Check In\"\n    }), queueCheckedIn && role !== Role.STUDENT && /*#__PURE__*/_jsx(TACheckinButton, {\n      courseId: Number(cid),\n      room: queueCheckedIn.room,\n      state: \"CheckedIn\"\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}