{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/var/www/source/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport ConfirmCourses from \"./ConfirmCourses\";\nimport EditCourse from \"./EditCourse\";\nimport SelectCourses from \"./SelectCourses\";\nimport { message, Progress } from \"antd\";\nimport styled from \"styled-components\";\nimport { API } from \"@koh/api-client\";\nimport useSWR from \"swr\";\nimport Router from \"next/router\";\nvar ProgressBar = styled(Progress).withConfig({\n  displayName: \"ApplyPage__ProgressBar\",\n  componentId: \"sc-dtpg8c-0\"\n})([\"padding-bottom:2.5em;& .ant-progress-inner{border:1px solid #d9d9d9;}\"]);\nexport function createSGString(_ref) {\n  var name = _ref.name,\n      crns = _ref.crns;\n  return \"\".concat(name, \" (CRNs: \").concat(crns.join(\", \"), \")\");\n}\nexport var Highlight = styled.span.withConfig({\n  displayName: \"ApplyPage__Highlight\",\n  componentId: \"sc-dtpg8c-1\"\n})([\"color:#1890ff;\"]);\nexport default function ApplyPage() {\n  var _useState = useState([]),\n      postBody = _useState[0],\n      setPostBody = _useState[1];\n\n  var _useState2 = useState(-1),\n      currentCourse = _useState2[0],\n      setCurrentCourse = _useState2[1];\n\n  var _useSWR = useSWR(\"api/v1/profile\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", API.profile.index());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      profile = _useSWR.data,\n      mutateProfile = _useSWR.mutate;\n\n  var handleSelectCourses = function handleSelectCourses(selectedCourses) {\n    setPostBody(selectedCourses.map(function (course) {\n      return {\n        name: course.name,\n        crns: course.crns\n      };\n    }));\n    setCurrentCourse(currentCourse + 1);\n  };\n\n  var handleEditCourse = function handleEditCourse(courseInfo) {\n    var newPostBody = _toConsumableArray(postBody);\n\n    newPostBody[currentCourse] = _objectSpread(_objectSpread({}, postBody[currentCourse]), courseInfo);\n    setPostBody(newPostBody);\n    setCurrentCourse(currentCourse + 1);\n  };\n\n  var handleSubmitCourses = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _e$response, _e$response$data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return API.course.registerCourses(postBody.map(function (courseInfo) {\n                return {\n                  name: courseInfo.displayName,\n                  sectionGroupName: courseInfo.name,\n                  iCalURL: courseInfo.iCalURL,\n                  coordinator_email: courseInfo.coordinator_email,\n                  timezone: courseInfo.timezone\n                };\n              }));\n\n            case 3:\n              message.success(\"Successfully registered courses. Redirecting you to the app...\");\n              _context2.next = 6;\n              return mutateProfile();\n\n            case 6:\n              Router.push(\"/course/[cid]/today\", \"/course/\".concat(profile.courses[0].course.id, \"/today\"));\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              message.error((_e$response = _context2.t0.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }));\n\n    return function handleSubmitCourses() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var calculateProgress = function calculateProgress() {\n    return Math.round((currentCourse + 1) * 100 / postBody.length);\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    style: {\n      padding: \"3% 12%\"\n    },\n    children: [/*#__PURE__*/_jsx(\"h1\", {\n      children: \"Apply for Khoury Office Hours\"\n    }), /*#__PURE__*/_jsx(ProgressBar, {\n      percent: calculateProgress(),\n      strokeColor: \"#408FEA\",\n      trailColor: \"white\",\n      strokeWidth: 12\n    }), currentCourse < 0 ? /*#__PURE__*/_jsx(SelectCourses, {\n      onSubmit: handleSelectCourses,\n      initialValues: postBody.map(function (c) {\n        return c.name;\n      })\n    }) : currentCourse < postBody.length ? /*#__PURE__*/_jsx(EditCourse, {\n      courseInfo: postBody[currentCourse],\n      onSubmitCourse: handleEditCourse,\n      onBack: function onBack() {\n        return setCurrentCourse(currentCourse - 1);\n      }\n    }) : /*#__PURE__*/_jsx(ConfirmCourses, {\n      courses: postBody,\n      onSubmit: handleSubmitCourses,\n      onBack: function onBack() {\n        return setCurrentCourse(currentCourse - 1);\n      }\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}