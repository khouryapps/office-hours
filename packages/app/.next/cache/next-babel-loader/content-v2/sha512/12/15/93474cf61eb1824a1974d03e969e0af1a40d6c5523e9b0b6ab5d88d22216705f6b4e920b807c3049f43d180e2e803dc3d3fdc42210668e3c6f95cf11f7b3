{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { API } from \"@koh/api-client\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nvar TACheckInCheckOutCalendar = styled(Calendar).withConfig({\n  displayName: \"TACheckInCheckOutTimes__TACheckInCheckOutCalendar\",\n  componentId: \"sc-q2bv8j-0\"\n})([\"height:70vh;padding-top:36px;padding-left:36px;\"]);\nvar CheckinHeader = styled.h1.withConfig({\n  displayName: \"TACheckInCheckOutTimes__CheckinHeader\",\n  componentId: \"sc-q2bv8j-1\"\n})([\"margin-top:12px;margin-bottom:0;padding-left:36px;\"]);\nexport default function TACheckInCheckOutTimes(_ref) {\n  var _data$taCheckinTimes$;\n\n  var courseId = _ref.courseId;\n  // there has to be a better way -- right?\n  var sunday = new Date();\n  sunday.setDate(sunday.getDate() - sunday.getDay());\n  sunday.setHours(0, 0, 0, 0);\n  var nextSunday = new Date();\n  nextSunday.setDate(sunday.getDate() + 7);\n  nextSunday.setHours(0, 0, 0, 0);\n\n  var _useState = useState(sunday),\n      startDate = _useState[0],\n      setStartDate = _useState[1];\n\n  var _useState2 = useState(nextSunday),\n      endDate = _useState2[0],\n      setEndDate = _useState2[1];\n\n  var fetcher = function fetcher(_url, startDate, endDate) {\n    return API.course.getTACheckinTimes(courseId, startDate.toISOString(), endDate.toISOString());\n  };\n\n  var _useSWR = useSWR([\"/api/v1/course/getTACheckinCheckoutTimes\", startDate, endDate], fetcher),\n      data = _useSWR.data,\n      mutate = _useSWR.mutate;\n\n  var tasWhoForgotToCheckOut = data === null || data === void 0 ? void 0 : data.taCheckinTimes.filter(function (e) {\n    return e.forced;\n  });\n  var tasWhoAreCurrentlyInOH = data === null || data === void 0 ? void 0 : data.taCheckinTimes.filter(function (e) {\n    return e.inProgress;\n  });\n  var calData = (_data$taCheckinTimes$ = data === null || data === void 0 ? void 0 : data.taCheckinTimes.map(function (e) {\n    return {\n      start: e.checkinTime,\n      end: e.checkoutTime ? e.checkoutTime : new Date(),\n      title: e.inProgress ? \"TA currently holding office hours: \".concat(e.name) : e.forced ? \"TA forgot to check out: \".concat(e.name) : e.name,\n      resource: e.numHelped\n    };\n  })) !== null && _data$taCheckinTimes$ !== void 0 ? _data$taCheckinTimes$ : []; // Could have so many cool metrics, like, click on a ta's name and a modal\n  // comes up with the metrics of who they helped\n  // sinc eit's  acallback, maybe have to make a div that a modal can then\n  // portal a modal onto it\n  // https://reactjs.org/docs/react-dom.html#createportal\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(CheckinHeader, {\n      children: \"TA Check-In Check-Out Times\"\n    }), /*#__PURE__*/_jsx(TACheckInCheckOutCalendar, {\n      events: calData,\n      localizer: momentLocalizer(moment),\n      showMultiDayTimes: true,\n      defaultView: \"week\",\n      onRangeChange: function onRangeChange(newDates) {\n        if (Array.isArray(newDates)) {\n          setStartDate(newDates[0]);\n          setEndDate(newDates[newDates.length - 1]);\n        } else {\n          setStartDate(new Date(newDates.start));\n          setEndDate(new Date(newDates.end));\n        }\n\n        mutate();\n      },\n      onSelectEvent: function onSelectEvent(event) {\n        alert(\"\".concat(event.title, \" helped \").concat(event.resource, \" students in their office hours\"));\n      }\n    }), tasWhoAreCurrentlyInOH !== null && tasWhoAreCurrentlyInOH !== void 0 && tasWhoAreCurrentlyInOH.length ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        children: \"People currently holding office hours:\"\n      }), tasWhoAreCurrentlyInOH.map(function (ta) {\n        return /*#__PURE__*/_jsx(\"p\", {\n          children: ta.name\n        }, ta.name);\n      })]\n    }) : null, tasWhoForgotToCheckOut !== null && tasWhoForgotToCheckOut !== void 0 && tasWhoForgotToCheckOut.length ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(\"h3\", {\n        style: {\n          color: \"red\"\n        },\n        children: \"The following course staff forgot to check out:\"\n      }), tasWhoForgotToCheckOut.map(function (ta) {\n        return /*#__PURE__*/_jsx(\"p\", {\n          children: ta.name\n        }, ta.name);\n      }), /*#__PURE__*/_jsx(\"p\", {\n        style: {\n          width: \"800px\"\n        },\n        children: \"Please remind course staff to check out at the end of their office hours. This way students don't join a queue thinking that there are still office hours when the course staff has already left\"\n      })]\n    }) : null]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}