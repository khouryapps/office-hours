{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { API } from \"@koh/api-client\";\nimport useSWR from \"swr\";\nimport { Divider, Switch } from \"antd\";\nimport styled from \"styled-components\";\nconst Row = styled.div.withConfig({\n  displayName: \"InsightsDisplayOptions__Row\",\n  componentId: \"sc-pl63wh-0\"\n})([\"display:flex;flex-direction:row;justify-content:space-between;font-size:18px;align-items:center;margin-bottom:16px;\"]);\nexport default function InsightsDisplayOptions() {\n  var _Object$entries;\n\n  const {\n    data: profile,\n    mutate: mutateProfile\n  } = useSWR(`api/v1/profile`, async () => API.profile.index());\n  const {\n    data: insightsList\n  } = useSWR(`api/v1/insights`, async () => API.insights.list());\n\n  const toggleInsightOnOrOff = async (checked, insightName) => {\n    if (checked) {\n      await API.insights.toggleOn(insightName);\n    } else {\n      await API.insights.toggleOff(insightName);\n    }\n\n    mutateProfile();\n  };\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsx(\"div\", {\n      children: insightsList && ((_Object$entries = Object.entries(insightsList)) === null || _Object$entries === void 0 ? void 0 : _Object$entries.map(([insightName, insightPartial]) => {\n        var _profile$insights;\n\n        return /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsxs(Row, {\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              children: insightPartial.displayName\n            }), /*#__PURE__*/_jsx(Switch, {\n              checked: profile === null || profile === void 0 ? void 0 : (_profile$insights = profile.insights) === null || _profile$insights === void 0 ? void 0 : _profile$insights.includes(insightName),\n              onChange: checked => toggleInsightOnOrOff(checked, insightName)\n            })]\n          }), /*#__PURE__*/_jsx(Divider, {})]\n        }, insightName);\n      }))\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}