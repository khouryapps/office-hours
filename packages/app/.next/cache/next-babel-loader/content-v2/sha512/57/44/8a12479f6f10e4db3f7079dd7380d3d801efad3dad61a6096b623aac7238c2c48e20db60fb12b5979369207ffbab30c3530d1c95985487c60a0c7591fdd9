{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { NotificationOutlined, StopOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Divider, Input, Row, Skeleton, Space, Tag, Tooltip } from \"antd\";\nimport Linkify from \"react-linkify\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { KOHAvatar } from \"../common/SelfAvatar\";\nvar PaddedCard = styled(Card).withConfig({\n  displayName: \"QueueCard__PaddedCard\",\n  componentId: \"sc-1npa623-0\"\n})([\"margin-top:32px;margin-bottom:25px;border-radius:6px;box-shadow:0px 2px 8px rgba(0,0,0,0.15);\"]);\nvar HeaderDiv = styled.div.withConfig({\n  displayName: \"QueueCard__HeaderDiv\",\n  componentId: \"sc-1npa623-1\"\n})([\"font-size:18px;color:#212934;\"]);\nvar QueueInfoRow = styled.div.withConfig({\n  displayName: \"QueueCard__QueueInfoRow\",\n  componentId: \"sc-1npa623-2\"\n})([\"display:flex;flex-direction:row;justify-content:space-between;\"]);\nvar RightQueueInfoRow = styled.div.withConfig({\n  displayName: \"QueueCard__RightQueueInfoRow\",\n  componentId: \"sc-1npa623-3\"\n})([\"display:flex;flex-direction:row;align-items:center;\"]);\nvar QueueInfoTags = styled.div.withConfig({\n  displayName: \"QueueCard__QueueInfoTags\",\n  componentId: \"sc-1npa623-4\"\n})([\"display:flex;\"]);\nvar QuestionNumberSpan = styled.span.withConfig({\n  displayName: \"QueueCard__QuestionNumberSpan\",\n  componentId: \"sc-1npa623-5\"\n})([\"font-size:24px;\"]);\nvar QueueSizeSpan = styled.span.withConfig({\n  displayName: \"QueueCard__QueueSizeSpan\",\n  componentId: \"sc-1npa623-6\"\n})([\"font-size:18px;\"]);\nvar HeaderText = styled.div.withConfig({\n  displayName: \"QueueCard__HeaderText\",\n  componentId: \"sc-1npa623-7\"\n})([\"font-size:14px;line-height:22px;font-weight:600;color:#bfbfbf;font-variant:small-caps;margin-bottom:8px;\"]);\nvar OpenQueueButton = styled(Button).withConfig({\n  displayName: \"QueueCard__OpenQueueButton\",\n  componentId: \"sc-1npa623-8\"\n})([\"color:#5f6b79;border-radius:6px;font-weight:500;font-size:14px;margin-left:16px;\"]);\nvar EditNotesButton = styled(Button).withConfig({\n  displayName: \"QueueCard__EditNotesButton\",\n  componentId: \"sc-1npa623-9\"\n})([\"border-radius:6px;font-size:14px;font-weight:500;\"]);\nvar SaveButton = styled(Button).withConfig({\n  displayName: \"QueueCard__SaveButton\",\n  componentId: \"sc-1npa623-10\"\n})([\"background:#2a9187;border-radius:6px;color:white;font-weight:500;font-size:14px;\"]);\nvar NotesDiv = styled.div.withConfig({\n  displayName: \"QueueCard__NotesDiv\",\n  componentId: \"sc-1npa623-11\"\n})([\"display:flex;flex-direction:row;flex-grow:1;margin:10px 10px auto 0;\"]);\nvar RightQueueNotesRow = styled.div.withConfig({\n  displayName: \"QueueCard__RightQueueNotesRow\",\n  componentId: \"sc-1npa623-12\"\n})([\"display:flex;\"]);\nvar NotesInput = styled(Input.TextArea).withConfig({\n  displayName: \"QueueCard__NotesInput\",\n  componentId: \"sc-1npa623-13\"\n})([\"border-radius:6px;border:1px solid #b8c4ce;margin:auto 0px auto 10px;\"]);\nvar Notes = styled.div.withConfig({\n  displayName: \"QueueCard__Notes\",\n  componentId: \"sc-1npa623-14\"\n})([\"overflow-wrap:break-word;white-space:pre-wrap;\"]);\nvar StyledKOHAvatar = styled(KOHAvatar).withConfig({\n  displayName: \"QueueCard__StyledKOHAvatar\",\n  componentId: \"sc-1npa623-15\"\n})([\"margin-right:25px;margin-top:10px;\"]);\nvar QueueCardButtonRow = styled(Row).withConfig({\n  displayName: \"QueueCard__QueueCardButtonRow\",\n  componentId: \"sc-1npa623-16\"\n})([\"padding-top:10px;\"]);\nvar QueueCardDivider = styled(Divider).withConfig({\n  displayName: \"QueueCard__QueueCardDivider\",\n  componentId: \"sc-1npa623-17\"\n})([\"margin-top:12px;margin-bottom:0;\"]);\nvar NotesSkeleton = styled(Skeleton).withConfig({\n  displayName: \"QueueCard__NotesSkeleton\",\n  componentId: \"sc-1npa623-18\"\n})([\"width:60%;\"]);\n\nvar QueueCard = function QueueCard(_ref) {\n  var queue = _ref.queue,\n      isTA = _ref.isTA,\n      updateQueueNotes = _ref.updateQueueNotes;\n\n  var _useState = useState(false),\n      editingNotes = _useState[0],\n      setEditingNotes = _useState[1];\n\n  var _useState2 = useState(queue.notes),\n      updatedNotes = _useState2[0],\n      setUpdatedNotes = _useState2[1];\n\n  var router = useRouter();\n  var cid = router.query.cid;\n  var staffList = queue.staffList;\n\n  var handleUpdate = function handleUpdate() {\n    setEditingNotes(false);\n    updateQueueNotes(queue, updatedNotes);\n  };\n\n  return /*#__PURE__*/_jsxs(PaddedCard, {\n    headStyle: {\n      background: queue.isOpen ? \"#25426C\" : \"#25426cbf\",\n      color: \"#FFFFFF\",\n      borderRadius: \"6px 6px 0 0\"\n    },\n    className: \"open-queue-card\",\n    title: /*#__PURE__*/_jsxs(\"span\", {\n      children: [queue.room, \" \"]\n    }),\n    extra: /*#__PURE__*/_jsxs(\"span\", {\n      children: [/*#__PURE__*/_jsx(QueueSizeSpan, {\n        children: queue.queueSize\n      }), \" in queue\"]\n    }),\n    children: [/*#__PURE__*/_jsxs(QueueInfoRow, {\n      children: [/*#__PURE__*/_jsxs(HeaderDiv, {\n        children: [/*#__PURE__*/_jsx(QuestionNumberSpan, {\n          children: queue.staffList.length\n        }), \" \", \"staff checked in\"]\n      }), /*#__PURE__*/_jsx(RightQueueInfoRow, {\n        children: /*#__PURE__*/_jsxs(Space, {\n          direction: \"vertical\",\n          align: \"end\",\n          size: \"middle\",\n          children: [/*#__PURE__*/_jsxs(QueueInfoTags, {\n            children: [(queue === null || queue === void 0 ? void 0 : queue.isProfessorQueue) && /*#__PURE__*/_jsx(Tag, {\n              color: \"blue\",\n              style: {\n                margin: 0\n              },\n              children: \"Professor Queue\"\n            }), queue.isOpen && !queue.allowQuestions && /*#__PURE__*/_jsx(Tooltip, {\n              title: \"This queue is no longer accepting questions\",\n              children: /*#__PURE__*/_jsx(Tag, {\n                icon: /*#__PURE__*/_jsx(StopOutlined, {}),\n                color: \"error\",\n                style: {\n                  margin: \"0px 0px 0px 8px\"\n                },\n                children: \"Not Accepting Questions\"\n              })\n            })]\n          }), /*#__PURE__*/_jsx(Link, {\n            href: \"/course/[cid]/queue/[qid]\",\n            as: \"/course/\".concat(cid, \"/queue/\").concat(queue.id),\n            children: /*#__PURE__*/_jsx(OpenQueueButton, {\n              style: {},\n              size: \"large\",\n              \"data-cy\": \"open-queue-button\",\n              children: \"Open Queue\"\n            })\n          })]\n        })\n      })]\n    }), staffList.length > 1 && /*#__PURE__*/_jsx(HeaderText, {\n      children: \"checked-in staff\"\n    })\n    /*todo: add better text*/\n    , /*#__PURE__*/_jsxs(Row, {\n      justify: \"space-between\",\n      align: \"middle\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        children: staffList.map(function (staffMember) {\n          return /*#__PURE__*/_jsx(Tooltip, {\n            title: staffMember.name,\n            children: /*#__PURE__*/_jsx(StyledKOHAvatar, {\n              size: 96,\n              photoURL: staffMember.photoURL,\n              name: staffMember.name\n            })\n          }, staffMember.id);\n        })\n      }), /*#__PURE__*/_jsx(QueueCardDivider, {}), editingNotes ? /*#__PURE__*/_jsx(NotesDiv, {\n        children: /*#__PURE__*/_jsx(NotesInput, {\n          defaultValue: queue.notes,\n          value: updatedNotes,\n          onChange: function onChange(e) {\n            return setUpdatedNotes(e.target.value);\n          }\n        })\n      }) : queue.notes ? /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(Linkify, {\n          componentDecorator: function componentDecorator(decoratedHref, decoratedText, key) {\n            return /*#__PURE__*/_jsx(\"a\", {\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              href: decoratedHref,\n              children: decoratedText\n            }, key);\n          },\n          children: /*#__PURE__*/_jsxs(Notes, {\n            children: [/*#__PURE__*/_jsx(NotificationOutlined, {}), \" \", /*#__PURE__*/_jsx(\"i\", {\n              children: queue.notes\n            })]\n          })\n        })\n      }) : /*#__PURE__*/_jsx(\"div\", {\n        children: /*#__PURE__*/_jsx(\"i\", {\n          children: \" no notes provided\"\n        })\n      }), /*#__PURE__*/_jsxs(RightQueueNotesRow, {\n        children: [editingNotes && /*#__PURE__*/_jsx(SaveButton, {\n          onClick: handleUpdate,\n          size: \"large\",\n          children: \"Save Changes\"\n        }), !editingNotes && /*#__PURE__*/_jsx(QueueCardButtonRow, {\n          children: isTA && /*#__PURE__*/_jsx(EditNotesButton, {\n            size: \"large\",\n            onClick: function onClick() {\n              setEditingNotes(true);\n            },\n            children: \"Edit Notes\"\n          })\n        })]\n      })]\n    })]\n  });\n};\n\nexport default QueueCard;\nexport function QueueCardSkeleton() {\n  return /*#__PURE__*/_jsxs(PaddedCard, {\n    headStyle: {\n      background: \"#25426C\",\n      color: \"#FFFFFF\",\n      borderRadius: \"6px 6px 0 0\"\n    },\n    className: \"open-queue-card\",\n    title: /*#__PURE__*/_jsx(Skeleton, {\n      title: false,\n      paragraph: {\n        rows: 1\n      }\n    }),\n    children: [/*#__PURE__*/_jsxs(QueueInfoRow, {\n      children: [/*#__PURE__*/_jsx(Skeleton, {\n        title: true,\n        paragraph: {\n          rows: 0\n        }\n      }), /*#__PURE__*/_jsx(Skeleton.Button, {\n        size: \"large\"\n      })]\n    }), /*#__PURE__*/_jsx(Skeleton.Avatar, {\n      size: 96\n    }), /*#__PURE__*/_jsx(QueueCardDivider, {}), /*#__PURE__*/_jsxs(Row, {\n      justify: \"space-between\",\n      align: \"bottom\",\n      children: [/*#__PURE__*/_jsx(NotesSkeleton, {\n        title: false,\n        paragraph: {\n          rows: 1\n        }\n      }), /*#__PURE__*/_jsx(Skeleton.Button, {\n        size: \"large\",\n        style: {\n          marginTop: \"12px\"\n        }\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}