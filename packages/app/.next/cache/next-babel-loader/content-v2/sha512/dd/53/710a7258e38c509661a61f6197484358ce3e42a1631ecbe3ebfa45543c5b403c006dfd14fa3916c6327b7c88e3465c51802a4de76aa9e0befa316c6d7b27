{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Modal, Select } from \"antd\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nconst RoomSelectionContainer = styled.div.withConfig({\n  displayName: \"QueueCheckInModal__RoomSelectionContainer\",\n  componentId: \"sc-1ph5l1q-0\"\n})([\"display:flex;flex-direction:row;justify-content:space-between;align-items:flex-end;flex-wrap:wrap;\"]);\nconst CheckInDropdownContainer = styled.div.withConfig({\n  displayName: \"QueueCheckInModal__CheckInDropdownContainer\",\n  componentId: \"sc-1ph5l1q-1\"\n})([\"display:flex;flex-direction:column;justify-content:flex-start;flex-grow:7;\"]);\nexport default function QueueCheckInModal({\n  visible,\n  onSubmit,\n  onCancel,\n  button,\n  queues\n}) {\n  const {\n    0: queueToCheckInto,\n    1: setQueueToCheckInto\n  } = useState(-1);\n\n  const onQueueUpdate = queueIx => {\n    setQueueToCheckInto(queueIx);\n  };\n\n  const {\n    Option\n  } = Select;\n  return /*#__PURE__*/_jsx(Modal, {\n    title: \"Check into a queue\",\n    visible: visible,\n    onCancel: () => {\n      onCancel();\n      setQueueToCheckInto(-1);\n    },\n    okText: \"Check In\",\n    okButtonProps: {\n      disabled: queueToCheckInto < 0\n    },\n    onOk: () => onSubmit(queueToCheckInto),\n    children: /*#__PURE__*/_jsxs(RoomSelectionContainer, {\n      children: [/*#__PURE__*/_jsxs(CheckInDropdownContainer, {\n        children: [/*#__PURE__*/_jsx(\"h3\", {\n          children: \"Search for an existing room\"\n        }), /*#__PURE__*/_jsx(Select, {\n          showSearch: true,\n          style: {\n            width: 200\n          },\n          placeholder: \"Select a course\",\n          optionFilterProp: \"children\",\n          onChange: onQueueUpdate,\n          \"data-cy\": \"select-existing-queue\",\n          filterOption: (input, option) => {\n            return option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          },\n          children: queues.map((q, i) => /*#__PURE__*/_jsx(Option, {\n            value: i,\n            \"data-cy\": `select-queue-${q.room}`,\n            children: `${q.room}`\n          }, i))\n        })]\n      }), /*#__PURE__*/_jsx(_Fragment, {\n        children: button\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}