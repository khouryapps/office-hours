{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Role } from \"@koh/common\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport UpdateCalendarButton from \"./UpdateCalendarButton\";\nconst ScheduleCalendar = styled(Calendar).withConfig({\n  displayName: \"SchedulePanel__ScheduleCalendar\",\n  componentId: \"sc-1bcbtu4-0\"\n})([\"height:70vh;\"]);\nexport default function SchedulePanel({\n  courseId,\n  defaultView = \"week\"\n}) {\n  var _course$officeHours$m;\n\n  const {\n    course\n  } = useCourse(courseId);\n  const role = useRoleInCourse(courseId);\n  const myEvents = (_course$officeHours$m = course === null || course === void 0 ? void 0 : course.officeHours.map(e => ({\n    start: e.startTime,\n    end: e.endTime,\n    title: e.title\n  }))) !== null && _course$officeHours$m !== void 0 ? _course$officeHours$m : [];\n  const today = new Date();\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsx(ScheduleCalendar, {\n      localizer: momentLocalizer(moment),\n      events: myEvents,\n      defaultView: defaultView,\n      scrollToTime: new Date(today.getFullYear(), today.getMonth(), today.getDate(), 8),\n      showMultiDayTimes: true\n    }), role === Role.PROFESSOR && /*#__PURE__*/_jsx(UpdateCalendarButton, {\n      courseId: courseId\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}