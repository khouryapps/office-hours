{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { DeleteTwoTone, PlusCircleOutlined } from \"@ant-design/icons\";\nimport { API } from \"@koh/api-client\";\nimport { Form, Input, InputNumber, Tag, Button, Space, message } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nconst CRNTag = styled(Tag).withConfig({\n  displayName: \"CourseInformation__CRNTag\",\n  componentId: \"sc-s2mjdw-0\"\n})([\"font-size:15px;padding:5px 10px;\"]);\nconst AddCRNTag = styled(CRNTag).withConfig({\n  displayName: \"CourseInformation__AddCRNTag\",\n  componentId: \"sc-s2mjdw-1\"\n})([\"cursor:pointer;\"]);\nexport default function CourseInfo({\n  courseId\n}) {\n  const [form] = Form.useForm();\n  const {\n    0: showCRNInput,\n    1: setShowCRNInput\n  } = useState(false);\n  const {\n    course\n  } = useCourse(courseId);\n  const {\n    0: crns,\n    1: setCrns\n  } = useState(course.crns.map(c => c.toString().padStart(5, \"0\")));\n  const {\n    0: inputCRN,\n    1: setInputCRN\n  } = useState(null);\n\n  const showInput = () => {\n    setShowCRNInput(true);\n  };\n\n  const handleDiscardChanges = async () => {\n    form.setFieldsValue(_objectSpread({}, course));\n    setCrns(course.crns.map(c => c.toString().padStart(5, \"0\")));\n  };\n\n  const handleSaveChanges = async () => {\n    const value = await form.validateFields();\n    value.crns = Array.from(new Set(crns));\n\n    try {\n      await API.course.editCourseInfo(course.id, value);\n      message.success(\"Successfully updated course information.\");\n    } catch (e) {\n      var _e$response, _e$response$data;\n\n      message.error((_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.message);\n    }\n  };\n\n  const handleCRNAdd = () => {\n    if (inputCRN) {\n      if (crns.includes(inputCRN)) {\n        message.error(`The CRN ${inputCRN} already exists.`);\n      } else {\n        setCrns([...crns, inputCRN]);\n      }\n    }\n\n    setShowCRNInput(false);\n    setInputCRN(null);\n  };\n\n  const handleCRNDelete = crn => {\n    setCrns(crns.filter(c => c !== crn));\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    children: [/*#__PURE__*/_jsxs(Form, {\n      form: form,\n      layout: \"vertical\",\n      initialValues: course,\n      children: [/*#__PURE__*/_jsx(Space, {\n        style: {\n          marginTop: \"25px\"\n        },\n        children: /*#__PURE__*/_jsx(Form.Item, {\n          name: \"name\",\n          label: \"Course Display Name\",\n          tooltip: \"This is the course name that will be displayed within the app\",\n          rules: [{\n            required: true,\n            message: \"Please input a display name.\"\n          }],\n          children: /*#__PURE__*/_jsx(Input, {\n            placeholder: \"ex: CS 2500\",\n            maxLength: 20\n          })\n        })\n      }), /*#__PURE__*/_jsx(Form.Item, {\n        name: \"coordinator_email\",\n        label: \"Coordinator Email\",\n        rules: [{\n          required: true,\n          type: \"email\",\n          message: \"Please input your email.\"\n        }],\n        children: /*#__PURE__*/_jsx(Input, {\n          placeholder: \"example@northeastern.edu\"\n        })\n      }), /*#__PURE__*/_jsx(Form.Item, {\n        label: \"Office Hours Calendar URL\",\n        tooltip: /*#__PURE__*/_jsxs(\"div\", {\n          children: [\"See\", \" \", /*#__PURE__*/_jsx(\"a\", {\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            href: \"https://sandboxnu.notion.site/Coordinator-s-Manual-f1e3bb50e50a4d84bfdb1275bfc559ff\",\n            children: \"here\"\n          }), \" \", \"to create your office hours calendar\"]\n        }),\n        name: \"icalURL\",\n        rules: [{\n          required: true,\n          pattern: new RegExp(\"https://.*.ics\"),\n          message: \"Please input your office hours calendar URL.\"\n        }],\n        children: /*#__PURE__*/_jsx(Input, {\n          placeholder: \"https://calendar.google.com/calendar/ical/.../basic.ics\"\n        })\n      }), /*#__PURE__*/_jsxs(Form.Item, {\n        label: \"Registered CRNs\",\n        children: [crns.map(crn => /*#__PURE__*/_jsx(CRNTag, {\n          closeIcon: /*#__PURE__*/_jsx(DeleteTwoTone, {\n            twoToneColor: \"#F76C6C\",\n            style: {\n              fontSize: \"18px\"\n            }\n          }),\n          closable: true,\n          onClose: () => handleCRNDelete(crn),\n          children: crn\n        }, crn)), showCRNInput ? /*#__PURE__*/_jsx(InputNumber, {\n          className: \"tag-input\",\n          value: inputCRN,\n          maxLength: 5,\n          min: \"00000\",\n          onChange: evt => setInputCRN(evt.padStart(5, \"0\")),\n          onBlur: handleCRNAdd,\n          onPressEnter: handleCRNAdd,\n          stringMode: true\n        }) : /*#__PURE__*/_jsx(AddCRNTag, {\n          icon: /*#__PURE__*/_jsx(PlusCircleOutlined, {\n            style: {\n              fontSize: \"15px\"\n            }\n          }),\n          color: \"#408FEA\",\n          className: \"add-crn\",\n          onClick: showInput,\n          children: \"Add CRN\"\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(Space, {\n      style: {\n        marginTop: \"5px\"\n      },\n      children: [/*#__PURE__*/_jsx(Button, {\n        onClick: handleDiscardChanges,\n        children: \"Discard Changes\"\n      }), /*#__PURE__*/_jsx(Button, {\n        onClick: handleSaveChanges,\n        type: \"primary\",\n        children: \"Save Changes\"\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}