{"ast":null,"code":"import { useEffect, useState } from \"react\";\nexport var useIsMobile = function useIsMobile() {\n  var _useState = useState(false),\n      isMobile = _useState[0],\n      setIsMobile = _useState[1];\n\n  useEffect(function () {\n    setIsMobile(window.innerWidth < 768);\n  }, []);\n  return isMobile;\n};","map":{"version":3,"sources":["/var/www/source/packages/app/hooks/useIsMobile.tsx"],"names":["useEffect","useState","useIsMobile","isMobile","setIsMobile","window","innerWidth"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,kBACCD,QAAQ,CAAC,KAAD,CADT;AAAA,MACxBE,QADwB;AAAA,MACdC,WADc;;AAE/BJ,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,WAAW,CAACC,MAAM,CAACC,UAAP,GAAoB,GAArB,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAOH,QAAP;AACD,CANM","sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const useIsMobile = () => {\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    setIsMobile(window.innerWidth < 768);\n  }, []);\n  return isMobile;\n};\n"]},"metadata":{},"sourceType":"module"}