{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Button, Space, Divider } from \"antd\";\nimport { createSGString, Highlight } from \"./ApplyPage\";\nimport { TimezoneCampusMapping } from \"./EditCourse\";\n\nvar FormattedCourseInfo = function FormattedCourseInfo(_ref) {\n  var label = _ref.label,\n      info = _ref.info;\n  return __jsx(\"p\", {\n    style: {\n      margin: \"0.5em\"\n    }\n  }, __jsx(\"b\", null, __jsx(\"i\", null, label)), info);\n};\n\nvar FormattedCourse = function FormattedCourse(_ref2) {\n  var course = _ref2.course;\n  return __jsx(\"div\", {\n    style: {\n      padding: \"0.2em 0\"\n    }\n  }, __jsx(\"h3\", null, __jsx(Highlight, null, createSGString(course))), __jsx(FormattedCourseInfo, {\n    label: \"Course Display Name: \",\n    info: course.displayName\n  }), __jsx(FormattedCourseInfo, {\n    label: \"Campus: \",\n    info: TimezoneCampusMapping[course.timezone]\n  }), __jsx(FormattedCourseInfo, {\n    label: \"Coordinator Email: \",\n    info: course.coordinator_email\n  }), __jsx(FormattedCourseInfo, {\n    label: \"Office Hours Calendar URL: \",\n    info: course.iCalURL\n  }));\n};\n\nexport default function ConfirmCourses(_ref3) {\n  var courses = _ref3.courses,\n      onSubmit = _ref3.onSubmit,\n      onBack = _ref3.onBack;\n  return __jsx(\"div\", null, courses.length === 0 ? __jsx(\"h3\", null, \"Continue without registering new courses?\") : __jsx(React.Fragment, null, __jsx(\"h3\", null, \"Please confirm all the information is correct before submitting:\"), courses.map(function (course, index) {\n    return __jsx(\"div\", {\n      key: course.name\n    }, index > 0 && __jsx(Divider, {\n      style: {\n        backgroundColor: \"#d9d9d9\"\n      }\n    }), __jsx(FormattedCourse, {\n      course: course\n    }));\n  })), __jsx(Space, {\n    style: {\n      marginTop: \"1.5em\"\n    }\n  }, __jsx(Button, {\n    onClick: onBack\n  }, \"Back\"), __jsx(Button, {\n    onClick: onSubmit,\n    type: \"primary\"\n  }, \"Submit\")));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Apply/ConfirmCourses.tsx"],"names":["Button","Space","Divider","createSGString","Highlight","TimezoneCampusMapping","FormattedCourseInfo","label","info","margin","FormattedCourse","course","padding","displayName","timezone","coordinator_email","iCalURL","ConfirmCourses","courses","onSubmit","onBack","length","map","index","name","backgroundColor","marginTop"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,QAAuC,MAAvC;AAEA,SAA6BC,cAA7B,EAA6CC,SAA7C,QAA8D,aAA9D;AACA,SAASC,qBAAT,QAAsC,cAAtC;;AAQA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAC1BC,KAD0B,QAC1BA,KAD0B;AAAA,MAE1BC,IAF0B,QAE1BA,IAF0B;AAAA,SAO1B;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAAV,KACE,iBACE,iBAAIF,KAAJ,CADF,CADF,EAIGC,IAJH,CAP0B;AAAA,CAA5B;;AAeA,IAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAGC,MAAH,SAAGA,MAAH;AAAA,SACtB;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX;AAAZ,KACE,kBACE,MAAC,SAAD,QAAYT,cAAc,CAACQ,MAAD,CAA1B,CADF,CADF,EAIE,MAAC,mBAAD;AACE,IAAA,KAAK,EAAC,uBADR;AAEE,IAAA,IAAI,EAAEA,MAAM,CAACE;AAFf,IAJF,EAQE,MAAC,mBAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,IAAI,EAAER,qBAAqB,CAACM,MAAM,CAACG,QAAR;AAF7B,IARF,EAYE,MAAC,mBAAD;AACE,IAAA,KAAK,EAAC,qBADR;AAEE,IAAA,IAAI,EAAEH,MAAM,CAACI;AAFf,IAZF,EAgBE,MAAC,mBAAD;AACE,IAAA,KAAK,EAAC,6BADR;AAEE,IAAA,IAAI,EAAEJ,MAAM,CAACK;AAFf,IAhBF,CADsB;AAAA,CAAxB;;AAwBA,eAAe,SAASC,cAAT,QAIsB;AAAA,MAHnCC,OAGmC,SAHnCA,OAGmC;AAAA,MAFnCC,QAEmC,SAFnCA,QAEmC;AAAA,MADnCC,MACmC,SADnCA,MACmC;AACnC,SACE,mBACGF,OAAO,CAACG,MAAR,KAAmB,CAAnB,GACC,8DADD,GAGC,4BACE,qFADF,EAIGH,OAAO,CAACI,GAAR,CAAY,UAACX,MAAD,EAASY,KAAT;AAAA,WACX;AAAK,MAAA,GAAG,EAAEZ,MAAM,CAACa;AAAjB,OACGD,KAAK,GAAG,CAAR,IAAa,MAAC,OAAD;AAAS,MAAA,KAAK,EAAE;AAAEE,QAAAA,eAAe,EAAE;AAAnB;AAAhB,MADhB,EAEE,MAAC,eAAD;AAAiB,MAAA,MAAM,EAAEd;AAAzB,MAFF,CADW;AAAA,GAAZ,CAJH,CAJJ,EAgBE,MAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEe,MAAAA,SAAS,EAAE;AAAb;AAAd,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEN;AAAjB,YADF,EAEE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,QAAjB;AAA2B,IAAA,IAAI,EAAC;AAAhC,cAFF,CAhBF,CADF;AAyBD","sourcesContent":["import { Button, Space, Divider } from \"antd\";\nimport { ReactElement } from \"react\";\nimport { RegisterCourseInfo, createSGString, Highlight } from \"./ApplyPage\";\nimport { TimezoneCampusMapping } from \"./EditCourse\";\n\ninterface ConfirmCourseProps {\n  courses: RegisterCourseInfo[];\n  onSubmit: () => any;\n  onBack: () => any;\n}\n\nconst FormattedCourseInfo = ({\n  label,\n  info,\n}: {\n  label: string;\n  info: string;\n}) => (\n  <p style={{ margin: \"0.5em\" }}>\n    <b>\n      <i>{label}</i>\n    </b>\n    {info}\n  </p>\n);\n\nconst FormattedCourse = ({ course }: { course: RegisterCourseInfo }) => (\n  <div style={{ padding: \"0.2em 0\" }}>\n    <h3>\n      <Highlight>{createSGString(course)}</Highlight>\n    </h3>\n    <FormattedCourseInfo\n      label=\"Course Display Name: \"\n      info={course.displayName}\n    />\n    <FormattedCourseInfo\n      label=\"Campus: \"\n      info={TimezoneCampusMapping[course.timezone]}\n    />\n    <FormattedCourseInfo\n      label=\"Coordinator Email: \"\n      info={course.coordinator_email}\n    />\n    <FormattedCourseInfo\n      label=\"Office Hours Calendar URL: \"\n      info={course.iCalURL}\n    />\n  </div>\n);\n\nexport default function ConfirmCourses({\n  courses,\n  onSubmit,\n  onBack,\n}: ConfirmCourseProps): ReactElement {\n  return (\n    <div>\n      {courses.length === 0 ? (\n        <h3>Continue without registering new courses?</h3>\n      ) : (\n        <>\n          <h3>\n            Please confirm all the information is correct before submitting:\n          </h3>\n          {courses.map((course, index) => (\n            <div key={course.name}>\n              {index > 0 && <Divider style={{ backgroundColor: \"#d9d9d9\" }} />}\n              <FormattedCourse course={course} />\n            </div>\n          ))}\n        </>\n      )}\n      <Space style={{ marginTop: \"1.5em\" }}>\n        <Button onClick={onBack}>Back</Button>\n        <Button onClick={onSubmit} type=\"primary\">\n          Submit\n        </Button>\n      </Space>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}