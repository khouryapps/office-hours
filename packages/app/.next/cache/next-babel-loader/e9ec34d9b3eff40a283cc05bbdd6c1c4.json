{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { API } from \"@koh/api-client\";\nimport { ClosedQuestionStatus, ERROR_MESSAGES, LimboQuestionStatus, OpenQuestionStatus } from \"@koh/common\";\nimport { Card, Col, notification, Popconfirm, Row } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { mutate } from \"swr\";\nimport { useDraftQuestion } from \"../../../hooks/useDraftQuestion\";\nimport { useLocalStorage } from \"../../../hooks/useLocalStorage\";\nimport { useQuestions } from \"../../../hooks/useQuestions\";\nimport { useQueue } from \"../../../hooks/useQueue\";\nimport { useStudentQuestion } from \"../../../hooks/useStudentQuestion\";\nimport { QueueInfoColumn, QueueInfoColumnButton } from \"../QueueListSharedComponents\";\nimport QuestionForm from \"./QuestionForm\";\nimport StudentBanner from \"./StudentBanner\";\nimport CantFindModal from \"./StudentCantFindModal\";\nimport StudentQueueCard from \"./StudentQueueCard\";\nimport StudentRemovedFromQueueModal from \"./StudentRemovedFromQueueModal\";\nvar Container = styled.div.withConfig({\n  displayName: \"StudentQueue__Container\",\n  componentId: \"sc-1qu48se-0\"\n})([\"flex:1;display:flex;flex-direction:column;margin-top:10px;@media (min-width:650px){margin-top:0;flex-direction:row;height:100%;}\"]);\nvar QueueListContainer = styled.div.withConfig({\n  displayName: \"StudentQueue__QueueListContainer\",\n  componentId: \"sc-1qu48se-1\"\n})([\"flex-grow:1;@media (min-width:650px){margin-top:32px;}\"]);\nvar JoinButton = styled(QueueInfoColumnButton).withConfig({\n  displayName: \"StudentQueue__JoinButton\",\n  componentId: \"sc-1qu48se-2\"\n})([\"background-color:#3684c6;color:white;\"]);\nvar VerticalDivider = styled.div.withConfig({\n  displayName: \"StudentQueue__VerticalDivider\",\n  componentId: \"sc-1qu48se-3\"\n})([\"@media (min-width:650px){border-right:1px solid #cfd6de;margin:0 16px;}@media (min-width:1000px){margin:0 32px;}\"]);\nvar StudentHeaderCard = styled(Card).withConfig({\n  displayName: \"StudentQueue__StudentHeaderCard\",\n  componentId: \"sc-1qu48se-4\"\n})([\"height:64px;padding-left:8px;padding-right:8px;background:inherit;\"]);\nvar HeaderText = styled.div.withConfig({\n  displayName: \"StudentQueue__HeaderText\",\n  componentId: \"sc-1qu48se-5\"\n})([\"font-size:14px;font-weight:500;line-height:22px;color:#8895a6;font-variant:small-caps;\"]);\nvar CenterRow = styled(Row).withConfig({\n  displayName: \"StudentQueue__CenterRow\",\n  componentId: \"sc-1qu48se-6\"\n})([\"align-items:center;\"]);\nexport default function StudentQueue(_ref) {\n  var qid = _ref.qid;\n\n  var _useQueue = useQueue(qid),\n      queue = _useQueue.queue;\n\n  var _useQuestions = useQuestions(qid),\n      questions = _useQuestions.questions,\n      mutateQuestions = _useQuestions.mutateQuestions;\n\n  var _useStudentQuestion = useStudentQuestion(qid),\n      studentQuestion = _useStudentQuestion.studentQuestion,\n      studentQuestionIndex = _useStudentQuestion.studentQuestionIndex;\n\n  var _useLocalStorage = useLocalStorage(\"isFirstQuestion\", true),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      isFirstQuestion = _useLocalStorage2[0],\n      setIsFirstQuestion = _useLocalStorage2[1];\n\n  var _useState = useState(false),\n      showJoinPopconfirm = _useState[0],\n      setShowJoinPopconfirm = _useState[1];\n\n  var _useDraftQuestion = useDraftQuestion(),\n      deleteDraftQuestion = _useDraftQuestion.deleteDraftQuestion;\n\n  var _useState2 = useState(questions && studentQuestion && (studentQuestion === null || studentQuestion === void 0 ? void 0 : studentQuestion.status) !== OpenQuestionStatus.Queued),\n      isJoining = _useState2[0],\n      setIsJoining = _useState2[1];\n\n  var _useState3 = useState(false),\n      popupEditQuestion = _useState3[0],\n      setPopupEditQuestion = _useState3[1];\n\n  var router = useRouter();\n  var editQuestionQueryParam = Boolean(router.query.edit_question);\n\n  var _useState4 = useState(true),\n      firstLanding = _useState4[0],\n      setFirstLanding = _useState4[1];\n\n  useEffect(function () {\n    if (editQuestionQueryParam && firstLanding && studentQuestion) {\n      mutate(\"/api/v1/queues/\".concat(qid, \"/questions\"));\n      setPopupEditQuestion(true);\n      setFirstLanding(false);\n    }\n  }, [editQuestionQueryParam, qid, studentQuestion, firstLanding]);\n  var studentQuestionId = studentQuestion === null || studentQuestion === void 0 ? void 0 : studentQuestion.id;\n  var studentQuestionStatus = studentQuestion === null || studentQuestion === void 0 ? void 0 : studentQuestion.status;\n  var leaveQueue = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return API.questions.update(studentQuestionId, {\n              status: ClosedQuestionStatus.ConfirmedDeleted\n            });\n\n          case 2:\n            setIsJoining(false);\n            _context.next = 5;\n            return mutateQuestions();\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [mutateQuestions, studentQuestionId]);\n  var rejoinQueue = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return API.questions.update(studentQuestionId, {\n              status: OpenQuestionStatus.PriorityQueued\n            });\n\n          case 2:\n            _context2.next = 4;\n            return mutateQuestions();\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), [mutateQuestions, studentQuestionId]);\n  var finishQuestion = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(text, questionType, groupable) {\n      var _questions$queue;\n\n      var updateStudent, updatedQuestionFromStudent, newQuestionsInQueue;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              updateStudent = {\n                text: text,\n                questionType: questionType,\n                groupable: groupable,\n                status: studentQuestionStatus === OpenQuestionStatus.Drafting ? OpenQuestionStatus.Queued : studentQuestionStatus\n              };\n              _context3.next = 3;\n              return API.questions.update(studentQuestionId, updateStudent);\n\n            case 3:\n              updatedQuestionFromStudent = _context3.sent;\n              newQuestionsInQueue = questions === null || questions === void 0 ? void 0 : (_questions$queue = questions.queue) === null || _questions$queue === void 0 ? void 0 : _questions$queue.map(function (question) {\n                return question.id === studentQuestionId ? updatedQuestionFromStudent : question;\n              }); // questions are the old questions and newQuestionsInQueue are questions that've been added since.\n\n              mutateQuestions(_objectSpread(_objectSpread({}, questions), {}, {\n                yourQuestion: updatedQuestionFromStudent,\n                queue: newQuestionsInQueue\n              }));\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [studentQuestionStatus, studentQuestionId, questions, mutateQuestions]);\n  var joinQueueAfterDeletion = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n    var newQuestion;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return API.questions.update(studentQuestion === null || studentQuestion === void 0 ? void 0 : studentQuestion.id, {\n              status: ClosedQuestionStatus.ConfirmedDeleted\n            });\n\n          case 2:\n            _context4.next = 4;\n            return mutateQuestions();\n\n          case 4:\n            _context4.next = 6;\n            return API.questions.create({\n              text: studentQuestion.text,\n              questionType: studentQuestion === null || studentQuestion === void 0 ? void 0 : studentQuestion.questionType,\n              queueId: qid,\n              isOnline: studentQuestion === null || studentQuestion === void 0 ? void 0 : studentQuestion.isOnline,\n              location: studentQuestion === null || studentQuestion === void 0 ? void 0 : studentQuestion.location,\n              force: true,\n              groupable: false\n            });\n\n          case 6:\n            newQuestion = _context4.sent;\n            _context4.next = 9;\n            return API.questions.update(newQuestion.id, {\n              status: OpenQuestionStatus.Queued\n            });\n\n          case 9:\n            _context4.next = 11;\n            return mutateQuestions();\n\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  })), [mutateQuestions, qid, studentQuestion]);\n  var openEditModal = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            mutate(\"/api/v1/queues/\".concat(qid, \"/questions\"));\n            setPopupEditQuestion(true);\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  })), [qid]);\n  var closeEditModal = useCallback(function () {\n    setPopupEditQuestion(false);\n    setIsJoining(false);\n  }, []);\n  var leaveQueueAndClose = useCallback(function () {\n    //delete draft when they leave the queue\n    deleteDraftQuestion();\n    leaveQueue();\n    closeEditModal();\n  }, [deleteDraftQuestion, leaveQueue, closeEditModal]);\n  var joinQueueOpenModal = useCallback( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(force) {\n      var createdQuestion, newQuestionsInQueue, _e$response, _e$response$data, _e$response$data$mess;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              _context6.next = 3;\n              return API.questions.create({\n                queueId: Number(qid),\n                text: \"\",\n                force: force,\n                questionType: null,\n                groupable: false\n              });\n\n            case 3:\n              createdQuestion = _context6.sent;\n              newQuestionsInQueue = [].concat(_toConsumableArray(questions === null || questions === void 0 ? void 0 : questions.queue), [createdQuestion]);\n              _context6.next = 7;\n              return mutateQuestions(_objectSpread(_objectSpread({}, questions), {}, {\n                queue: newQuestionsInQueue\n              }));\n\n            case 7:\n              setPopupEditQuestion(true);\n              return _context6.abrupt(\"return\", true);\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](0);\n\n              if (!((_e$response = _context6.t0.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : (_e$response$data$mess = _e$response$data.message) === null || _e$response$data$mess === void 0 ? void 0 : _e$response$data$mess.includes(ERROR_MESSAGES.questionController.createQuestion.oneQuestionAtATime))) {\n                _context6.next = 15;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", false);\n\n            case 15:\n              return _context6.abrupt(\"return\", true);\n\n            case 16:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[0, 11]]);\n    }));\n\n    return function (_x4) {\n      return _ref7.apply(this, arguments);\n    };\n  }(), [mutateQuestions, qid, questions]);\n  var finishQuestionAndClose = useCallback(function (text, qt, groupable, router, cid) {\n    deleteDraftQuestion();\n    finishQuestion(text, qt, groupable);\n    closeEditModal();\n\n    if (isFirstQuestion) {\n      notification.warn({\n        style: {\n          cursor: \"pointer\"\n        },\n        message: \"Enable Notifications\",\n        className: \"hide-in-percy\",\n        description: \"Turn on notifications for when it's almost your turn to get help.\",\n        placement: \"bottomRight\",\n        duration: 0,\n        onClick: function onClick() {\n          notification.destroy();\n          setIsFirstQuestion(false);\n          router.push(\"/settings?cid=\".concat(cid));\n        }\n      });\n    }\n  }, [deleteDraftQuestion, finishQuestion, closeEditModal, isFirstQuestion, setIsFirstQuestion]);\n\n  if (queue && questions) {\n    if (!queue.isOpen) {\n      return __jsx(\"h1\", {\n        style: {\n          marginTop: \"50px\"\n        }\n      }, \"The Queue is Closed!\");\n    }\n\n    return __jsx(React.Fragment, null, __jsx(Container, null, __jsx(CantFindModal, {\n      visible: (studentQuestion === null || studentQuestion === void 0 ? void 0 : studentQuestion.status) === LimboQuestionStatus.CantFind,\n      leaveQueue: leaveQueue,\n      rejoinQueue: rejoinQueue\n    }), __jsx(StudentRemovedFromQueueModal, {\n      question: studentQuestion,\n      leaveQueue: leaveQueue,\n      joinQueue: joinQueueAfterDeletion\n    }), __jsx(QueueInfoColumn, {\n      queueId: qid,\n      buttons: !studentQuestion && __jsx(Popconfirm, {\n        title: \"In order to join this queue, you must delete your previous question. Do you want to continue?\",\n        onConfirm: function onConfirm() {\n          return joinQueueOpenModal(true);\n        },\n        okText: \"Yes\",\n        cancelText: \"No\",\n        disabled: true,\n        visible: showJoinPopconfirm,\n        onVisibleChange: setShowJoinPopconfirm\n      }, __jsx(JoinButton, {\n        type: \"primary\",\n        disabled: !(queue === null || queue === void 0 ? void 0 : queue.allowQuestions),\n        \"data-cy\": \"join-queue-button\",\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n          return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  _context7.t0 = setShowJoinPopconfirm;\n                  _context7.next = 3;\n                  return joinQueueOpenModal(false);\n\n                case 3:\n                  _context7.t1 = !_context7.sent;\n                  return _context7.abrupt(\"return\", (0, _context7.t0)(_context7.t1));\n\n                case 5:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee7);\n        }))\n      }, \"Join Queue\"))\n    }), __jsx(VerticalDivider, null), __jsx(QueueListContainer, null, studentQuestion && __jsx(React.Fragment, null, __jsx(StudentBanner, {\n      queueId: qid,\n      editQuestion: openEditModal,\n      leaveQueue: leaveQueue\n    }), __jsx(\"div\", {\n      style: {\n        marginTop: \"40px\"\n      }\n    })), __jsx(QueueQuestions, {\n      questions: questions === null || questions === void 0 ? void 0 : questions.queue,\n      studentQuestion: studentQuestion\n    }))), __jsx(QuestionForm, {\n      visible: questions && !studentQuestion && isJoining || // && studentQuestion.status !== QuestionStatusKeys.Drafting)\n      popupEditQuestion,\n      question: studentQuestion,\n      leaveQueue: leaveQueueAndClose,\n      finishQuestion: finishQuestionAndClose,\n      position: studentQuestionIndex + 1,\n      cancel: closeEditModal\n    }));\n  } else {\n    return __jsx(\"div\", null);\n  }\n}\nvar QueueHeader = styled.h2.withConfig({\n  displayName: \"StudentQueue__QueueHeader\",\n  componentId: \"sc-1qu48se-7\"\n})([\"font-weight:500;font-size:24px;color:#212934;margin-bottom:0;\"]);\nvar NoQuestionsText = styled.div.withConfig({\n  displayName: \"StudentQueue__NoQuestionsText\",\n  componentId: \"sc-1qu48se-8\"\n})([\"font-weight:500;font-size:24px;color:#212934;\"]); // I think we could share this with the TA\n\nfunction QueueQuestions(_ref9) {\n  var questions = _ref9.questions,\n      studentQuestion = _ref9.studentQuestion;\n  return __jsx(\"div\", {\n    \"data-cy\": \"queueQuestions\"\n  }, (questions === null || questions === void 0 ? void 0 : questions.length) === 0 ? __jsx(NoQuestionsText, null, \"There are no questions in the queue\") : __jsx(React.Fragment, null, __jsx(QueueHeader, null, \"Queue\"), __jsx(StudentHeaderCard, {\n    bordered: false\n  }, __jsx(CenterRow, null, __jsx(Col, {\n    flex: \"0 0 64px\"\n  }, __jsx(HeaderText, null, \"#\")), __jsx(Col, {\n    flex: \"1 1\"\n  }, __jsx(HeaderText, null, \"question\")), __jsx(Col, {\n    flex: \"0 0 80px\"\n  }, __jsx(HeaderText, null, \"wait\"))))), questions === null || questions === void 0 ? void 0 : questions.map(function (question, index) {\n    return __jsx(StudentQueueCard, {\n      key: question.id,\n      rank: index + 1,\n      question: question,\n      highlighted: studentQuestion === question\n    });\n  }));\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Queue/Student/StudentQueue.tsx"],"names":["API","ClosedQuestionStatus","ERROR_MESSAGES","LimboQuestionStatus","OpenQuestionStatus","Card","Col","notification","Popconfirm","Row","useRouter","React","useCallback","useEffect","useState","styled","mutate","useDraftQuestion","useLocalStorage","useQuestions","useQueue","useStudentQuestion","QueueInfoColumn","QueueInfoColumnButton","QuestionForm","StudentBanner","CantFindModal","StudentQueueCard","StudentRemovedFromQueueModal","Container","div","QueueListContainer","JoinButton","VerticalDivider","StudentHeaderCard","HeaderText","CenterRow","StudentQueue","qid","queue","questions","mutateQuestions","studentQuestion","studentQuestionIndex","isFirstQuestion","setIsFirstQuestion","showJoinPopconfirm","setShowJoinPopconfirm","deleteDraftQuestion","status","Queued","isJoining","setIsJoining","popupEditQuestion","setPopupEditQuestion","router","editQuestionQueryParam","Boolean","query","edit_question","firstLanding","setFirstLanding","studentQuestionId","id","studentQuestionStatus","leaveQueue","update","ConfirmedDeleted","rejoinQueue","PriorityQueued","finishQuestion","text","questionType","groupable","updateStudent","Drafting","updatedQuestionFromStudent","newQuestionsInQueue","map","question","yourQuestion","joinQueueAfterDeletion","create","queueId","isOnline","location","force","newQuestion","openEditModal","closeEditModal","leaveQueueAndClose","joinQueueOpenModal","Number","createdQuestion","response","data","message","includes","questionController","createQuestion","oneQuestionAtATime","finishQuestionAndClose","qt","cid","warn","style","cursor","className","description","placement","duration","onClick","destroy","push","isOpen","marginTop","CantFind","allowQuestions","QueueHeader","h2","NoQuestionsText","QueueQuestions","length","index"],"mappings":"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","sourcesContent":["import { API } from \"@koh/api-client\";\nimport {\n  ClosedQuestionStatus,\n  ERROR_MESSAGES,\n  LimboQuestionStatus,\n  OpenQuestionStatus,\n  Question,\n  QuestionType,\n} from \"@koh/common\";\nimport { Card, Col, notification, Popconfirm, Row } from \"antd\";\nimport { Router, useRouter } from \"next/router\";\nimport React, { ReactElement, useCallback, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { mutate } from \"swr\";\nimport { useDraftQuestion } from \"../../../hooks/useDraftQuestion\";\nimport { useLocalStorage } from \"../../../hooks/useLocalStorage\";\nimport { useQuestions } from \"../../../hooks/useQuestions\";\nimport { useQueue } from \"../../../hooks/useQueue\";\nimport { useStudentQuestion } from \"../../../hooks/useStudentQuestion\";\nimport {\n  QueueInfoColumn,\n  QueueInfoColumnButton,\n} from \"../QueueListSharedComponents\";\nimport QuestionForm from \"./QuestionForm\";\nimport StudentBanner from \"./StudentBanner\";\nimport CantFindModal from \"./StudentCantFindModal\";\nimport StudentQueueCard from \"./StudentQueueCard\";\nimport StudentRemovedFromQueueModal from \"./StudentRemovedFromQueueModal\";\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n  @media (min-width: 650px) {\n    margin-top: 0;\n    flex-direction: row;\n    height: 100%;\n  }\n`;\n\nconst QueueListContainer = styled.div`\n  flex-grow: 1;\n  @media (min-width: 650px) {\n    margin-top: 32px;\n  }\n`;\n\nconst JoinButton = styled(QueueInfoColumnButton)`\n  background-color: #3684c6;\n  color: white;\n`;\n\nconst VerticalDivider = styled.div`\n  @media (min-width: 650px) {\n    border-right: 1px solid #cfd6de;\n    margin: 0 16px;\n  }\n  @media (min-width: 1000px) {\n    margin: 0 32px;\n  }\n`;\n\nconst StudentHeaderCard = styled(Card)`\n  height: 64px;\n  padding-left: 8px;\n  padding-right: 8px;\n  background: inherit;\n`;\n\nconst HeaderText = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 22px;\n  color: #8895a6;\n  font-variant: small-caps;\n`;\n\nconst CenterRow = styled(Row)`\n  align-items: center;\n`;\n\ninterface StudentQueueProps {\n  qid: number;\n}\n\nexport default function StudentQueue({ qid }: StudentQueueProps): ReactElement {\n  const { queue } = useQueue(qid);\n  const { questions, mutateQuestions } = useQuestions(qid);\n  const { studentQuestion, studentQuestionIndex } = useStudentQuestion(qid);\n  const [isFirstQuestion, setIsFirstQuestion] = useLocalStorage(\n    \"isFirstQuestion\",\n    true\n  );\n  const [showJoinPopconfirm, setShowJoinPopconfirm] = useState(false);\n  const { deleteDraftQuestion } = useDraftQuestion();\n  const [isJoining, setIsJoining] = useState(\n    questions &&\n      studentQuestion &&\n      studentQuestion?.status !== OpenQuestionStatus.Queued\n  );\n  const [popupEditQuestion, setPopupEditQuestion] = useState(false);\n\n  const router = useRouter();\n  const editQuestionQueryParam = Boolean(router.query.edit_question as string);\n  const [firstLanding, setFirstLanding] = useState(true);\n\n  useEffect(() => {\n    if (editQuestionQueryParam && firstLanding && studentQuestion) {\n      mutate(`/api/v1/queues/${qid}/questions`);\n      setPopupEditQuestion(true);\n      setFirstLanding(false);\n    }\n  }, [editQuestionQueryParam, qid, studentQuestion, firstLanding]);\n\n  const studentQuestionId = studentQuestion?.id;\n  const studentQuestionStatus = studentQuestion?.status;\n  const leaveQueue = useCallback(async () => {\n    await API.questions.update(studentQuestionId, {\n      status: ClosedQuestionStatus.ConfirmedDeleted,\n    });\n\n    setIsJoining(false);\n    await mutateQuestions();\n  }, [mutateQuestions, studentQuestionId]);\n\n  const rejoinQueue = useCallback(async () => {\n    await API.questions.update(studentQuestionId, {\n      status: OpenQuestionStatus.PriorityQueued,\n    });\n    await mutateQuestions();\n  }, [mutateQuestions, studentQuestionId]);\n\n  const finishQuestion = useCallback(\n    async (text: string, questionType: QuestionType, groupable: boolean) => {\n      const updateStudent = {\n        text,\n        questionType,\n        groupable,\n        status:\n          studentQuestionStatus === OpenQuestionStatus.Drafting\n            ? OpenQuestionStatus.Queued\n            : studentQuestionStatus,\n      };\n\n      const updatedQuestionFromStudent = await API.questions.update(\n        studentQuestionId,\n        updateStudent\n      );\n\n      const newQuestionsInQueue = questions?.queue?.map((question: Question) =>\n        question.id === studentQuestionId\n          ? updatedQuestionFromStudent\n          : question\n      );\n\n      // questions are the old questions and newQuestionsInQueue are questions that've been added since.\n      mutateQuestions({\n        ...questions,\n        yourQuestion: updatedQuestionFromStudent,\n        queue: newQuestionsInQueue,\n      });\n    },\n    [studentQuestionStatus, studentQuestionId, questions, mutateQuestions]\n  );\n\n  const joinQueueAfterDeletion = useCallback(async () => {\n    await API.questions.update(studentQuestion?.id, {\n      status: ClosedQuestionStatus.ConfirmedDeleted,\n    });\n    await mutateQuestions();\n    const newQuestion = await API.questions.create({\n      text: studentQuestion.text,\n      questionType: studentQuestion?.questionType,\n      queueId: qid,\n      isOnline: studentQuestion?.isOnline,\n      location: studentQuestion?.location,\n      force: true,\n      groupable: false,\n    });\n    await API.questions.update(newQuestion.id, {\n      status: OpenQuestionStatus.Queued,\n    });\n    await mutateQuestions();\n  }, [mutateQuestions, qid, studentQuestion]);\n\n  const openEditModal = useCallback(async () => {\n    mutate(`/api/v1/queues/${qid}/questions`);\n    setPopupEditQuestion(true);\n  }, [qid]);\n\n  const closeEditModal = useCallback(() => {\n    setPopupEditQuestion(false);\n    setIsJoining(false);\n  }, []);\n\n  const leaveQueueAndClose = useCallback(() => {\n    //delete draft when they leave the queue\n    deleteDraftQuestion();\n    leaveQueue();\n    closeEditModal();\n  }, [deleteDraftQuestion, leaveQueue, closeEditModal]);\n\n  const joinQueueOpenModal = useCallback(\n    async (force: boolean) => {\n      try {\n        const createdQuestion = await API.questions.create({\n          queueId: Number(qid),\n          text: \"\",\n          force: force,\n          questionType: null,\n          groupable: false,\n        });\n        const newQuestionsInQueue = [...questions?.queue, createdQuestion];\n        await mutateQuestions({ ...questions, queue: newQuestionsInQueue });\n        setPopupEditQuestion(true);\n        return true;\n      } catch (e) {\n        if (\n          e.response?.data?.message?.includes(\n            ERROR_MESSAGES.questionController.createQuestion.oneQuestionAtATime\n          )\n        ) {\n          return false;\n        }\n        return true;\n        // TODO: how should we handle error that happens for another reason?\n      }\n    },\n    [mutateQuestions, qid, questions]\n  );\n\n  const finishQuestionAndClose = useCallback(\n    (\n      text: string,\n      qt: QuestionType,\n      groupable: true,\n      router: Router,\n      cid: number\n    ) => {\n      deleteDraftQuestion();\n      finishQuestion(text, qt, groupable);\n      closeEditModal();\n      if (isFirstQuestion) {\n        notification.warn({\n          style: { cursor: \"pointer\" },\n          message: \"Enable Notifications\",\n          className: \"hide-in-percy\",\n          description:\n            \"Turn on notifications for when it's almost your turn to get help.\",\n          placement: \"bottomRight\",\n          duration: 0,\n          onClick: () => {\n            notification.destroy();\n            setIsFirstQuestion(false);\n            router.push(`/settings?cid=${cid}`);\n          },\n        });\n      }\n    },\n    [\n      deleteDraftQuestion,\n      finishQuestion,\n      closeEditModal,\n      isFirstQuestion,\n      setIsFirstQuestion,\n    ]\n  );\n\n  if (queue && questions) {\n    if (!queue.isOpen) {\n      return <h1 style={{ marginTop: \"50px\" }}>The Queue is Closed!</h1>;\n    }\n    return (\n      <>\n        <Container>\n          <CantFindModal\n            visible={studentQuestion?.status === LimboQuestionStatus.CantFind}\n            leaveQueue={leaveQueue}\n            rejoinQueue={rejoinQueue}\n          />\n          <StudentRemovedFromQueueModal\n            question={studentQuestion}\n            leaveQueue={leaveQueue}\n            joinQueue={joinQueueAfterDeletion}\n          />\n          <QueueInfoColumn\n            queueId={qid}\n            buttons={\n              !studentQuestion && (\n                <Popconfirm\n                  title=\"In order to join this queue, you must delete your previous question. Do you want to continue?\"\n                  onConfirm={() => joinQueueOpenModal(true)}\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                  disabled\n                  visible={showJoinPopconfirm}\n                  onVisibleChange={setShowJoinPopconfirm}\n                >\n                  <JoinButton\n                    type=\"primary\"\n                    disabled={!queue?.allowQuestions}\n                    data-cy=\"join-queue-button\"\n                    onClick={async () =>\n                      setShowJoinPopconfirm(!(await joinQueueOpenModal(false)))\n                    }\n                  >\n                    Join Queue\n                  </JoinButton>\n                </Popconfirm>\n              )\n            }\n          />\n          <VerticalDivider />\n          <QueueListContainer>\n            {studentQuestion && (\n              <>\n                <StudentBanner\n                  queueId={qid}\n                  editQuestion={openEditModal}\n                  leaveQueue={leaveQueue}\n                />\n                <div style={{ marginTop: \"40px\" }} />\n              </>\n            )}\n            <QueueQuestions\n              questions={questions?.queue}\n              studentQuestion={studentQuestion}\n            />\n          </QueueListContainer>\n        </Container>\n\n        <QuestionForm\n          visible={\n            (questions && !studentQuestion && isJoining) ||\n            // && studentQuestion.status !== QuestionStatusKeys.Drafting)\n            popupEditQuestion\n          }\n          question={studentQuestion}\n          leaveQueue={leaveQueueAndClose}\n          finishQuestion={finishQuestionAndClose}\n          position={studentQuestionIndex + 1}\n          cancel={closeEditModal}\n        />\n      </>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nconst QueueHeader = styled.h2`\n  font-weight: 500;\n  font-size: 24px;\n  color: #212934;\n  margin-bottom: 0;\n`;\n\nconst NoQuestionsText = styled.div`\n  font-weight: 500;\n  font-size: 24px;\n  color: #212934;\n`;\n\n// I think we could share this with the TA\ninterface QueueProps {\n  questions: Question[];\n  studentQuestion: Question;\n}\nfunction QueueQuestions({ questions, studentQuestion }: QueueProps) {\n  return (\n    <div data-cy=\"queueQuestions\">\n      {questions?.length === 0 ? (\n        <NoQuestionsText>There are no questions in the queue</NoQuestionsText>\n      ) : (\n        <>\n          <QueueHeader>Queue</QueueHeader>\n          <StudentHeaderCard bordered={false}>\n            <CenterRow>\n              <Col flex=\"0 0 64px\">\n                <HeaderText>#</HeaderText>\n              </Col>\n              <Col flex=\"1 1\">\n                <HeaderText>question</HeaderText>\n              </Col>\n              <Col flex=\"0 0 80px\">\n                <HeaderText>wait</HeaderText>\n              </Col>\n            </CenterRow>\n          </StudentHeaderCard>\n        </>\n      )}\n      {questions?.map((question: Question, index: number) => {\n        return (\n          <StudentQueueCard\n            key={question.id}\n            rank={index + 1}\n            question={question}\n            highlighted={studentQuestion === question}\n          />\n        );\n      })}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}