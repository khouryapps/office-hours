{"ast":null,"code":"var __jsx = React.createElement;\nimport { API } from \"@koh/api-client\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nconst TACheckInCheckOutCalendar = styled(Calendar).withConfig({\n  displayName: \"TACheckInCheckOutTimes__TACheckInCheckOutCalendar\",\n  componentId: \"q2bv8j-0\"\n})([\"height:70vh;padding-top:36px;padding-left:36px;\"]);\nconst CheckinHeader = styled.h1.withConfig({\n  displayName: \"TACheckInCheckOutTimes__CheckinHeader\",\n  componentId: \"q2bv8j-1\"\n})([\"margin-top:12px;margin-bottom:0;padding-left:36px;\"]);\nexport default function TACheckInCheckOutTimes({\n  courseId\n}) {\n  var _data$taCheckinTimes$;\n\n  // there has to be a better way -- right?\n  const sunday = new Date();\n  sunday.setDate(sunday.getDate() - sunday.getDay());\n  sunday.setHours(0, 0, 0, 0);\n  const nextSunday = new Date();\n  nextSunday.setDate(sunday.getDate() + 7);\n  nextSunday.setHours(0, 0, 0, 0);\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(sunday);\n  const {\n    0: endDate,\n    1: setEndDate\n  } = useState(nextSunday);\n\n  const fetcher = (_url, startDate, endDate) => {\n    return API.course.getTACheckinTimes(courseId, startDate.toISOString(), endDate.toISOString());\n  };\n\n  const {\n    data,\n    mutate\n  } = useSWR([`/api/v1/course/getTACheckinCheckoutTimes`, startDate, endDate], fetcher);\n  const tasWhoForgotToCheckOut = data === null || data === void 0 ? void 0 : data.taCheckinTimes.filter(e => e.forced);\n  const tasWhoAreCurrentlyInOH = data === null || data === void 0 ? void 0 : data.taCheckinTimes.filter(e => e.inProgress);\n  const calData = (_data$taCheckinTimes$ = data === null || data === void 0 ? void 0 : data.taCheckinTimes.map(e => ({\n    start: e.checkinTime,\n    end: e.checkoutTime ? e.checkoutTime : new Date(),\n    title: e.inProgress ? `TA currently holding office hours: ${e.name}` : e.forced ? `TA forgot to check out: ${e.name}` : e.name,\n    resource: e.numHelped\n  }))) !== null && _data$taCheckinTimes$ !== void 0 ? _data$taCheckinTimes$ : []; // Could have so many cool metrics, like, click on a ta's name and a modal\n  // comes up with the metrics of who they helped\n  // sinc eit's  acallback, maybe have to make a div that a modal can then\n  // portal a modal onto it\n  // https://reactjs.org/docs/react-dom.html#createportal\n\n  return __jsx(\"div\", null, __jsx(CheckinHeader, null, \"TA Check-In Check-Out Times\"), __jsx(TACheckInCheckOutCalendar, {\n    events: calData,\n    localizer: momentLocalizer(moment),\n    showMultiDayTimes: true,\n    defaultView: \"week\",\n    onRangeChange: newDates => {\n      if (Array.isArray(newDates)) {\n        setStartDate(newDates[0]);\n        setEndDate(newDates[newDates.length - 1]);\n      } else {\n        setStartDate(new Date(newDates.start));\n        setEndDate(new Date(newDates.end));\n      }\n\n      mutate();\n    },\n    onSelectEvent: event => {\n      alert(`${event.title} helped ${event.resource} students in their office hours`);\n    }\n  }), (tasWhoAreCurrentlyInOH === null || tasWhoAreCurrentlyInOH === void 0 ? void 0 : tasWhoAreCurrentlyInOH.length) ? __jsx(\"div\", null, __jsx(\"h3\", null, \"People currently holding office hours:\"), tasWhoAreCurrentlyInOH.map(ta => __jsx(\"p\", {\n    key: ta.name\n  }, ta.name))) : null, (tasWhoForgotToCheckOut === null || tasWhoForgotToCheckOut === void 0 ? void 0 : tasWhoForgotToCheckOut.length) ? __jsx(\"div\", null, __jsx(\"h3\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"The following course staff forgot to check out:\"), tasWhoForgotToCheckOut.map(ta => __jsx(\"p\", {\n    key: ta.name\n  }, ta.name)), __jsx(\"p\", {\n    style: {\n      width: \"800px\"\n    }\n  }, \"Please remind course staff to check out at the end of their office hours. This way students don't join a queue thinking that there are still office hours when the course staff has already left\")) : null);\n}","map":null,"metadata":{},"sourceType":"module"}