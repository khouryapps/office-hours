{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { API } from \"@koh/api-client\";\nimport { Button, Form, Input, message, Row } from \"antd\";\nimport { pick } from \"lodash\";\nimport { useIsMobile } from \"../../hooks/useIsMobile\";\nimport { HeaderTitle } from \"./Styled\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport useSWR from \"swr\";\nexport default function ProfileSettings() {\n  var _useSWR = useSWR(\"api/v1/profile\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", API.profile.index());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      profile = _useSWR.data,\n      mutate = _useSWR.mutate;\n\n  var isMobile = useIsMobile();\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var editProfile = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(updateProfile) {\n      var newProfile;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newProfile = _objectSpread(_objectSpread({}, profile), updateProfile);\n              mutate(newProfile, false);\n              _context2.next = 4;\n              return API.profile.patch(pick(newProfile, [\"firstName\", \"lastName\"]));\n\n            case 4:\n              mutate();\n              return _context2.abrupt(\"return\", newProfile);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function editProfile(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleOk = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var value, newProfile;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return form.validateFields();\n\n            case 2:\n              value = _context3.sent;\n              _context3.next = 5;\n              return editProfile(value);\n\n            case 5:\n              newProfile = _context3.sent;\n              form.setFieldsValue(newProfile);\n              message.success(\"Your profile settings have been successfully updated\");\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleOk() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var ResponsiveFormRow = styled(Row).withConfig({\n    displayName: \"ProfileSettings__ResponsiveFormRow\",\n    componentId: \"lbnrpn-0\"\n  })([\"flexdirection:\", \";\"], isMobile ? \"column\" : \"row\");\n  return profile ? __jsx(\"div\", null, __jsx(HeaderTitle, null, __jsx(\"h1\", null, \"Personal Information\")), __jsx(Form, {\n    wrapperCol: {\n      span: 18\n    },\n    form: form,\n    initialValues: profile\n  }, __jsx(ResponsiveFormRow, null, __jsx(Form.Item, {\n    label: \"First Name\",\n    name: \"firstName\",\n    \"data-cy\": \"firstNameInput\",\n    rules: [{\n      required: true,\n      message: \"Your name can't be empty!\"\n    }]\n  }, __jsx(Input, null)), __jsx(Form.Item, {\n    style: {\n      marginLeft: isMobile ? \"0\" : \"10px\"\n    },\n    label: \"Last Name\",\n    name: \"lastName\",\n    \"data-cy\": \"lastNameInput\",\n    rules: [{\n      required: true,\n      message: \"Your name can't be empty!\"\n    }]\n  }, __jsx(Input, null)))), __jsx(Button, {\n    key: \"submit\",\n    type: \"primary\",\n    \"data-cy\": \"saveButton\",\n    onClick: handleOk,\n    style: {\n      marginBottom: \"15px\"\n    }\n  }, \"Save\")) : null;\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Settings/ProfileSettings.tsx"],"names":["API","Button","Form","Input","message","Row","pick","useIsMobile","HeaderTitle","styled","React","useSWR","ProfileSettings","profile","index","data","mutate","isMobile","useForm","form","editProfile","updateProfile","newProfile","patch","handleOk","validateFields","value","setFieldsValue","success","ResponsiveFormRow","span","required","marginLeft","marginBottom"],"mappings":"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","sourcesContent":["import { API } from \"@koh/api-client\";\nimport { UpdateProfileParams } from \"@koh/common\";\nimport { Button, Form, Input, message, Row } from \"antd\";\nimport { pick } from \"lodash\";\nimport { useIsMobile } from \"../../hooks/useIsMobile\";\nimport { HeaderTitle } from \"./Styled\";\nimport styled from \"styled-components\";\nimport React, { ReactElement } from \"react\";\nimport useSWR from \"swr\";\n\nexport default function ProfileSettings(): ReactElement {\n  const { data: profile, mutate } = useSWR(`api/v1/profile`, async () =>\n    API.profile.index()\n  );\n  const isMobile = useIsMobile();\n  const [form] = Form.useForm();\n\n  const editProfile = async (updateProfile: UpdateProfileParams) => {\n    const newProfile = { ...profile, ...updateProfile };\n    mutate(newProfile, false);\n    await API.profile.patch(pick(newProfile, [\"firstName\", \"lastName\"]));\n    mutate();\n    return newProfile;\n  };\n\n  const handleOk = async () => {\n    const value = await form.validateFields();\n    const newProfile = await editProfile(value);\n    form.setFieldsValue(newProfile);\n    message.success(\"Your profile settings have been successfully updated\");\n  };\n\n  const ResponsiveFormRow = styled(Row)`\n    flexdirection: ${isMobile ? \"column\" : \"row\"};\n  `;\n\n  return profile ? (\n    <div>\n      <HeaderTitle>\n        <h1>Personal Information</h1>\n      </HeaderTitle>\n      <Form wrapperCol={{ span: 18 }} form={form} initialValues={profile}>\n        <ResponsiveFormRow>\n          <Form.Item\n            label=\"First Name\"\n            name=\"firstName\"\n            data-cy=\"firstNameInput\"\n            rules={[\n              {\n                required: true,\n                message: \"Your name can't be empty!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            style={{ marginLeft: isMobile ? \"0\" : \"10px\" }}\n            label=\"Last Name\"\n            name=\"lastName\"\n            data-cy=\"lastNameInput\"\n            rules={[\n              {\n                required: true,\n                message: \"Your name can't be empty!\",\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n        </ResponsiveFormRow>\n      </Form>\n      <Button\n        key=\"submit\"\n        type=\"primary\"\n        data-cy=\"saveButton\"\n        onClick={handleOk}\n        style={{ marginBottom: \"15px\" }}\n      >\n        Save\n      </Button>\n    </div>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}