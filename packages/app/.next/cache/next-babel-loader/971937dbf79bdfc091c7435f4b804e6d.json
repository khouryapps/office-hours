{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport useSWR from \"swr\";\nimport { API } from \"@koh/api-client\";\nimport Router, { useRouter } from \"next/router\";\nexport var useProfile = function useProfile() {\n  var _error$response;\n\n  var _useRouter = useRouter(),\n      pathname = _useRouter.pathname;\n\n  var _useSWR = useSWR(\"api/v1/profile\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return API.profile.index();\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      data = _useSWR.data,\n      error = _useSWR.error; // Redirect to login page (later Khoury Admin login) if API request returns an error or empty object\n\n\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && pathname !== \"/login\") {\n    Router.push(\"/login\");\n  } else if (data) {\n    return data;\n  }\n};","map":{"version":3,"sources":["/var/www/source/packages/app/hooks/useProfile.ts"],"names":["useSWR","API","Router","useRouter","useProfile","pathname","profile","index","data","error","response","status","push"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,aAAlC;AAKA,OAAO,IAAMC,UAAgB,GAAG,SAAnBA,UAAmB,GAAM;AAAA;;AAAA,mBACfD,SAAS,EADM;AAAA,MAC5BE,QAD4B,cAC5BA,QAD4B;;AAAA,gBAEZL,MAAM,yFAE5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkBC,GAAG,CAACK,OAAJ,CAAYC,KAAZ,EAAlB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAF4B,GAFM;AAAA,MAE5BC,IAF4B,WAE5BA,IAF4B;AAAA,MAEtBC,KAFsB,WAEtBA,KAFsB,EAOpC;;;AACA,MAAI,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAEC,QAAP,oEAAiBC,MAAjB,MAA4B,GAA5B,IAAmCN,QAAQ,KAAK,QAApD,EAA8D;AAC5DH,IAAAA,MAAM,CAACU,IAAP,CAAY,QAAZ;AACD,GAFD,MAEO,IAAIJ,IAAJ,EAAU;AACf,WAAOA,IAAP;AACD;AACF,CAbM","sourcesContent":["import useSWR from \"swr\";\nimport { API } from \"@koh/api-client\";\nimport Router, { useRouter } from \"next/router\";\nimport { User } from \"@koh/common\";\n\ntype Hook = () => User;\n\nexport const useProfile: Hook = () => {\n  const { pathname } = useRouter();\n  const { data, error } = useSWR(\n    `api/v1/profile`,\n    async () => await API.profile.index()\n  );\n\n  // Redirect to login page (later Khoury Admin login) if API request returns an error or empty object\n  if (error?.response?.status === 401 && pathname !== \"/login\") {\n    Router.push(\"/login\");\n  } else if (data) {\n    return data;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}