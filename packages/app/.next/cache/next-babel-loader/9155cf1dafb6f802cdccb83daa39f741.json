{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { API } from \"@koh/api-client\";\nimport { Button, Col, Form, Input, message, Switch } from \"antd\";\nimport { pick } from \"lodash\";\nimport { HeaderTitle } from \"./Styled\";\nimport React from \"react\";\nimport useSWR from \"swr\";\nexport default function TeamsSettings() {\n  var TextArea = Input.TextArea;\n\n  var _useSWR = useSWR(\"api/v1/profile\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", API.profile.index());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      profile = _useSWR.data,\n      mutate = _useSWR.mutate;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var editProfile = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(updateProfile) {\n      var newProfile;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              newProfile = _objectSpread(_objectSpread({}, profile), updateProfile);\n              mutate(newProfile, false);\n              _context2.next = 4;\n              return API.profile.patch(pick(newProfile, [\"defaultMessage\", \"includeDefaultMessage\"]));\n\n            case 4:\n              mutate();\n              return _context2.abrupt(\"return\", newProfile);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function editProfile(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleOk = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var value, newProfile;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return form.validateFields();\n\n            case 2:\n              value = _context3.sent;\n              _context3.next = 5;\n              return editProfile(value);\n\n            case 5:\n              newProfile = _context3.sent;\n              form.setFieldsValue(newProfile);\n              message.success(\"Your profile settings have been successfully updated\");\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleOk() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return profile ? __jsx(\"div\", null, __jsx(HeaderTitle, null, __jsx(\"h1\", null, \"Teams Settings\")), __jsx(Form, {\n    wrapperCol: {\n      span: 18\n    },\n    form: form,\n    initialValues: profile\n  }, __jsx(Col, null, __jsx(Form.Item, {\n    label: \"Open Teams Chat with Default Message\",\n    name: \"includeDefaultMessage\",\n    valuePropName: \"checked\"\n  }, __jsx(Switch, null)), __jsx(Form.Item, {\n    shouldUpdate: true,\n    noStyle: true,\n    style: {\n      marginTop: \"30px\"\n    }\n  }, function () {\n    return (form === null || form === void 0 ? void 0 : form.getFieldValue(\"includeDefaultMessage\")) && __jsx(Form.Item, {\n      label: \"Default Teams Message\",\n      name: \"defaultMessage\",\n      \"data-cy\": \"defaultMessageInput\",\n      rules: [{\n        required: true,\n        message: \"Please input your default message for Teams chat!\"\n      }]\n    }, __jsx(TextArea, {\n      rows: 4,\n      placeholder: (profile === null || profile === void 0 ? void 0 : profile.defaultMessage) ? profile === null || profile === void 0 ? void 0 : profile.defaultMessage : \"Enter Your Message Here\"\n    }));\n  }))), __jsx(Button, {\n    key: \"submit\",\n    type: \"primary\",\n    onClick: handleOk,\n    style: {\n      marginBottom: \"15px\"\n    }\n  }, \"Save\")) : null;\n}","map":{"version":3,"sources":["/var/www/source/packages/app/components/Settings/TeamsSettings.tsx"],"names":["API","Button","Col","Form","Input","message","Switch","pick","HeaderTitle","React","useSWR","TeamsSettings","TextArea","profile","index","data","mutate","useForm","form","editProfile","updateProfile","newProfile","patch","handleOk","validateFields","value","setFieldsValue","success","span","marginTop","getFieldValue","required","defaultMessage","marginBottom"],"mappings":"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","sourcesContent":["import { API } from \"@koh/api-client\";\nimport { UpdateProfileParams } from \"@koh/common\";\nimport { Button, Col, Form, Input, message, Switch } from \"antd\";\nimport { pick } from \"lodash\";\nimport { HeaderTitle } from \"./Styled\";\nimport React, { ReactElement } from \"react\";\nimport useSWR from \"swr\";\n\nexport default function TeamsSettings(): ReactElement {\n  const { TextArea } = Input;\n  const { data: profile, mutate } = useSWR(`api/v1/profile`, async () =>\n    API.profile.index()\n  );\n\n  const [form] = Form.useForm();\n  const editProfile = async (updateProfile: UpdateProfileParams) => {\n    const newProfile = { ...profile, ...updateProfile };\n    mutate(newProfile, false);\n    await API.profile.patch(\n      pick(newProfile, [\"defaultMessage\", \"includeDefaultMessage\"])\n    );\n    mutate();\n    return newProfile;\n  };\n\n  const handleOk = async () => {\n    const value = await form.validateFields();\n    const newProfile = await editProfile(value);\n    form.setFieldsValue(newProfile);\n    message.success(\"Your profile settings have been successfully updated\");\n  };\n\n  return profile ? (\n    <div>\n      <HeaderTitle>\n        <h1>Teams Settings</h1>\n      </HeaderTitle>\n      <Form wrapperCol={{ span: 18 }} form={form} initialValues={profile}>\n        <Col>\n          <Form.Item\n            label=\"Open Teams Chat with Default Message\"\n            name=\"includeDefaultMessage\"\n            valuePropName=\"checked\"\n          >\n            <Switch />\n          </Form.Item>\n          <Form.Item shouldUpdate noStyle style={{ marginTop: \"30px\" }}>\n            {() =>\n              form?.getFieldValue(\"includeDefaultMessage\") && (\n                <Form.Item\n                  label=\"Default Teams Message\"\n                  name=\"defaultMessage\"\n                  data-cy=\"defaultMessageInput\"\n                  rules={[\n                    {\n                      required: true,\n                      message:\n                        \"Please input your default message for Teams chat!\",\n                    },\n                  ]}\n                >\n                  <TextArea\n                    rows={4}\n                    placeholder={\n                      profile?.defaultMessage\n                        ? profile?.defaultMessage\n                        : \"Enter Your Message Here\"\n                    }\n                  />\n                </Form.Item>\n              )\n            }\n          </Form.Item>\n        </Col>\n      </Form>\n      <Button\n        key=\"submit\"\n        type=\"primary\"\n        onClick={handleOk}\n        style={{ marginBottom: \"15px\" }}\n      >\n        Save\n      </Button>\n    </div>\n  ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}