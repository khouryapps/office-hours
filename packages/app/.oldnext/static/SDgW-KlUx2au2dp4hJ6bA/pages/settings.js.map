{"version":3,"sources":["webpack:///./pages/settings.tsx","webpack:///../../pages/_app.tsx","webpack:////home/runner/work/office-hours/office-hours/node_modules/next/app.js","webpack:////home/runner/work/office-hours/office-hours/node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?a89f"],"names":["Settings","router","useRouter","courseId","query","defaultPage","Number","p","loadGetInitialProps","pageProps","this","__N_SSG","url","createUrl","React","Component","back","push","pushTo","pushRoute","as","href","pushUrl","replace","replaceTo","replaceRoute","replaceUrl","App","origGetInitialProps","appGetInitialProps","getInitialProps","module","exports","window","__NEXT_P"],"mappings":"2QAUe,SAASA,IACtB,IAAMC,EAASC,sBACTC,EAAWF,EAAOG,MAAP,IACXC,EAAcJ,EAAOG,MAAP,YACpB,OACE,EAAC,IAAD,KACE,EAAC,YAAD,KACE,EAAC,IAAD,KACE,kDAEF,EAAC,IAAD,CAAQD,SAAUG,OAAOH,KAEzB,EAAC,IAAD,CAAcE,YAAaA,Q,4nBCuD5B,SAAmBE,GACxB,EACA,OAAOA,EAAP,U,+BA/EF,mBACA,Y,SAmBA,E,kEAAA,8FAAkC,EAAlC,EAAkC,UAAlC,kBAI0B,IAAAC,qBAAA,EAAxB,GAJF,cAIQC,EAJR,yBAKS,CAAEA,cALX,4C,8DAQe,E,wIAUI,KACf,U,+BAGO,MACoDC,KAA3D,MAAM,EADC,EACD,SADC,EACD,YADC,EACD,YADC,EACD,UADC,EACD,QAGN,OACE,6CAKUC,GAAF,EANV,GAMkC,CAAEC,IAAKC,EAA/B,W,GAxB4CC,UAAMC,WAsDzD,SAASF,EAAUZ,GAAgB,IAElC,EAAN,EAAM,WAAN,EAAM,SAAN,EAAM,MACN,MAAO,CACL,YAEE,UAEF,eAEE,UAEF,aAEE,UAEFe,KAAM,WAEJf,UAEFgB,KAAM,cAEJ,OAAOhB,SAAP,IAEFiB,OAAQ,cAEN,IAAMC,EAAYC,EAAKC,EAAvB,GACMC,EAAUF,GAAhB,EAEA,OAAOnB,SAAP,IAEFsB,QAAS,cAEP,OAAOtB,YAAP,IAEFuB,UAAW,cAET,IAAMC,EAAeL,EAAKC,EAA1B,GACMK,EAAaN,GAAnB,EAEA,OAAOnB,YAAP,K,YA9Fe0B,EAIZC,oBAAsBC,EAJVF,EAKZG,gBAAkBD,G,uBCjC3BE,EAAOC,QAAU,EAAQ,S,sBCCpBC,OAAOC,SAAWD,OAAOC,UAAY,IAAIjB,KAAK,CAC7C,YACA,WACE,OAAO,EAAQ,a","file":"static/SDgW-KlUx2au2dp4hJ6bA/pages/settings.js","sourcesContent":["import { Container } from \"next/app\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport React, { ReactElement } from \"react\";\nimport { StandardPageContainer } from \"../components/common/PageContainer\";\nimport NavBar from \"../components/Nav/NavBar\";\nimport SettingsPage, {\n  SettingsOptions,\n} from \"../components/Settings/SettingsPage\";\n\nexport default function Settings(): ReactElement {\n  const router = useRouter();\n  const courseId = router.query[\"cid\"];\n  const defaultPage = router.query[\"defaultPage\"];\n  return (\n    <StandardPageContainer>\n      <Container>\n        <Head>\n          <title>Settings | Khoury Office Hours</title>\n        </Head>\n        <NavBar courseId={Number(courseId)} />\n\n        <SettingsPage defaultPage={defaultPage as SettingsOptions} />\n      </Container>\n    </StandardPageContainer>\n  );\n}\n","import React, { ErrorInfo } from 'react'\nimport {\n  execOnce,\n  loadGetInitialProps,\n  AppContextType,\n  AppInitialProps,\n  AppPropsType,\n} from '../next-server/lib/utils'\nimport { Router } from '../client/router'\n\nexport { AppInitialProps }\n\nexport type AppContext = AppContextType<Router>\n\nexport type AppProps<P = {}> = AppPropsType<Router, P>\n\n/**\n * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.\n * This allows for keeping state between navigation, custom error handling, injecting additional data.\n */\nasync function appGetInitialProps({\n  Component,\n  ctx,\n}: AppContext): Promise<AppInitialProps> {\n  const pageProps = await loadGetInitialProps(Component, ctx)\n  return { pageProps }\n}\n\nexport default class App<P = {}, CP = {}, S = {}> extends React.Component<\n  P & AppProps<CP>,\n  S\n> {\n  static origGetInitialProps = appGetInitialProps\n  static getInitialProps = appGetInitialProps\n\n  // Kept here for backwards compatibility.\n  // When someone ended App they could call `super.componentDidCatch`.\n  // @deprecated This method is no longer needed. Errors are caught at the top level\n  componentDidCatch(error: Error, _errorInfo: ErrorInfo): void {\n    throw error\n  }\n\n  render() {\n    const { router, Component, pageProps, __N_SSG, __N_SSP } = this\n      .props as AppProps<CP>\n\n    return (\n      <Component\n        {...pageProps}\n        {\n          // we don't add the legacy URL prop if it's using non-legacy\n          // methods like getStaticProps and getServerSideProps\n          ...(!(__N_SSG || __N_SSP) ? { url: createUrl(router) } : {})\n        }\n      />\n    )\n  }\n}\n\nlet warnContainer: () => void\nlet warnUrl: () => void\n\nif (process.env.NODE_ENV !== 'production') {\n  warnContainer = execOnce(() => {\n    console.warn(\n      `Warning: the \\`Container\\` in \\`_app\\` has been deprecated and should be removed. https://err.sh/vercel/next.js/app-container-deprecated`\n    )\n  })\n\n  warnUrl = execOnce(() => {\n    console.error(\n      `Warning: the 'url' property is deprecated. https://err.sh/vercel/next.js/url-deprecated`\n    )\n  })\n}\n\n// @deprecated noop for now until removal\nexport function Container(p: any) {\n  if (process.env.NODE_ENV !== 'production') warnContainer()\n  return p.children\n}\n\nexport function createUrl(router: Router) {\n  // This is to make sure we don't references the router object at call time\n  const { pathname, asPath, query } = router\n  return {\n    get query() {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return query\n    },\n    get pathname() {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return pathname\n    },\n    get asPath() {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return asPath\n    },\n    back: () => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      router.back()\n    },\n    push: (url: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return router.push(url, as)\n    },\n    pushTo: (href: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      const pushRoute = as ? href : ''\n      const pushUrl = as || href\n\n      return router.push(pushRoute, pushUrl)\n    },\n    replace: (url: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      return router.replace(url, as)\n    },\n    replaceTo: (href: string, as?: string) => {\n      if (process.env.NODE_ENV !== 'production') warnUrl()\n      const replaceRoute = as ? href : ''\n      const replaceUrl = as || href\n\n      return router.replace(replaceRoute, replaceUrl)\n    },\n  }\n}\n","module.exports = require('./dist/pages/_app')\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/settings\",\n      function () {\n        return require(\"private-next-pages/settings.tsx\");\n      }\n    ]);\n  "],"sourceRoot":""}