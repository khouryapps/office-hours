{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport { ArrowLeftOutlined, QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\nimport { Button, Skeleton, Tooltip } from \"antd\";\nimport Link from \"next/link\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useProfile } from \"../../../hooks/useProfile\";\nimport { useQuestions } from \"../../../hooks/useQuestions\";\nimport { SettingsOptions } from \"../../Settings/SettingsPage\";\nimport { SPLIT_DETAIL_BKPT } from \"./TAQueueBreakpoints\";\nimport TAQueueDetail from \"./TAQueueDetail\";\nimport TAQueueListSection from \"./TAQueueListSection\";\nvar Container = styled.div.withConfig({\n  displayName: \"TAQueueListDetail__Container\",\n  componentId: \"sc-1mkewun-0\"\n})([\"flex:1;background:white;border:1px solid #cfd6de;margin-bottom:30px;@media (min-width:\", \"px){border:none;border-left:1px solid #cfd6de;margin-bottom:0px;display:flex;flex-direction:row;min-height:calc( 100vh - 46px - 67px );// - (height of footer) - (height of navbar)}\"], SPLIT_DETAIL_BKPT);\nvar List = styled.div.withConfig({\n  displayName: \"TAQueueListDetail__List\",\n  componentId: \"sc-1mkewun-1\"\n})([\"@media (min-width:\", \"px){width:320px;overflow-y:scroll;}\"], SPLIT_DETAIL_BKPT);\nvar PriorityQueueQuestionBubble = styled(QuestionCircleOutlined).withConfig({\n  displayName: \"TAQueueListDetail__PriorityQueueQuestionBubble\",\n  componentId: \"sc-1mkewun-2\"\n})([\"margin-right:8px;\"]);\nvar Detail = styled.div.withConfig({\n  displayName: \"TAQueueListDetail__Detail\",\n  componentId: \"sc-1mkewun-3\"\n})([\"border-left:1px solid #cfd6de;border-right:1px solid #cfd6de;flex:1;@media (min-width:\", \"px){overflow-y:scroll;}\"], SPLIT_DETAIL_BKPT);\nvar BackToQueue = styled.div.withConfig({\n  displayName: \"TAQueueListDetail__BackToQueue\",\n  componentId: \"sc-1mkewun-4\"\n})([\"height:40px;display:flex;align-items:center;padding-left:12px;color:#1890ff;cursor:pointer;\"]);\n/**\n * List and detail panel of the TA queue\n */\n\nexport default function TAQueueListDetail(_ref) {\n  var _questions$questionsG;\n\n  var queueId = _ref.queueId,\n      courseId = _ref.courseId;\n  var user = useProfile();\n\n  var _useState = useState(null),\n      selectedQuestionId = _useState[0],\n      setSelectedQuestionId = _useState[1];\n\n  var _useQuestions = useQuestions(queueId),\n      questions = _useQuestions.questions,\n      questionsError = _useQuestions.questionsError,\n      mutateQuestions = _useQuestions.mutateQuestions;\n\n  var isSideBySide = useWindowWidth() >= SPLIT_DETAIL_BKPT;\n  var helpingQuestions = questions === null || questions === void 0 ? void 0 : (_questions$questionsG = questions.questionsGettingHelp) === null || _questions$questionsG === void 0 ? void 0 : _questions$questionsG.filter(function (q) {\n    return q.taHelped.id === user.id;\n  });\n  var allQuestionsList = questions ? [].concat(_toConsumableArray(helpingQuestions), _toConsumableArray(questions.queue), _toConsumableArray(questions.priorityQueue)) : [];\n  var selectedQuestion = allQuestionsList.find(function (q) {\n    return q.id === selectedQuestionId;\n  }); // set currentQuestion to null if it no longer exists in the queue\n\n  if (selectedQuestionId && !selectedQuestion) {\n    setSelectedQuestionId(null);\n  }\n\n  if (!questions) {\n    return __jsx(Skeleton, null);\n  }\n\n  if (allQuestionsList.length === 0) {\n    return __jsx(EmptyQueueInfo, null, __jsx(NoQuestionsText, null, \"There are no questions in the queue\"), !user.phoneNotifsEnabled && !user.desktopNotifsEnabled && __jsx(NotifReminderButton, {\n      courseId: courseId\n    }));\n  }\n\n  var list = __jsx(List, null, __jsx(\"div\", {\n    \"data-cy\": \"list-helping\"\n  }, __jsx(TAQueueListSection, {\n    title: \"Currently Helping\",\n    questions: helpingQuestions,\n    onClickQuestion: setSelectedQuestionId,\n    selectedQuestionId: selectedQuestionId\n  })), __jsx(\"div\", {\n    \"data-cy\": \"list-priority\"\n  }, __jsx(TAQueueListSection, {\n    title: __jsx(\"span\", null, __jsx(Tooltip, {\n      title: \"Students in the priority queue were at the top of the queue before for some reason (e.g. they were at the top but AFK, or a TA helped them previously, and then hit 'requeue student.' You should communicate with your fellow staff members to prioritize these students first.\"\n    }, __jsx(PriorityQueueQuestionBubble, null)), \"Priority Queue\"),\n    questions: questions.priorityQueue,\n    onClickQuestion: setSelectedQuestionId,\n    selectedQuestionId: selectedQuestionId,\n    collapsible: true\n  })), __jsx(\"div\", {\n    \"data-cy\": \"list-queue\"\n  }, __jsx(TAQueueListSection, {\n    title: \"Waiting In Line\",\n    questions: questions.queue,\n    onClickQuestion: setSelectedQuestionId,\n    selectedQuestionId: selectedQuestionId,\n    collapsible: true,\n    showNumbers: true\n  })));\n\n  var detail = __jsx(Detail, null, selectedQuestion && __jsx(TAQueueDetail, {\n    queueId: queueId,\n    question: selectedQuestion\n  }));\n\n  if (isSideBySide) {\n    return __jsx(Container, null, list, detail);\n  } else if (selectedQuestionId) {\n    return __jsx(Container, null, __jsx(BackToQueue, {\n      onClick: function onClick() {\n        return setSelectedQuestionId(null);\n      }\n    }, __jsx(\"span\", null, __jsx(ArrowLeftOutlined, null), \" Back To Queue\")), detail);\n  } else {\n    return __jsx(Container, null, list);\n  }\n}\nvar EmptyQueueInfo = styled.div.withConfig({\n  displayName: \"TAQueueListDetail__EmptyQueueInfo\",\n  componentId: \"sc-1mkewun-5\"\n})([\"flex:1;display:flex;flex-direction:column;align-items:center;margin-top:30px;\"]);\nvar NoQuestionsText = styled.div.withConfig({\n  displayName: \"TAQueueListDetail__NoQuestionsText\",\n  componentId: \"sc-1mkewun-6\"\n})([\"font-weight:500;font-size:24px;color:#212934;\"]);\nvar NotifRemindButton = styled(Button).withConfig({\n  displayName: \"TAQueueListDetail__NotifRemindButton\",\n  componentId: \"sc-1mkewun-7\"\n})([\"margin-top:16px;border-radius:6px;background:#fff;\"]);\n\nfunction NotifReminderButton(_ref2) {\n  var courseId = _ref2.courseId;\n  return __jsx(React.Fragment, null, __jsx(Link, {\n    href: {\n      pathname: \"/settings\",\n      query: {\n        cid: courseId,\n        defaultPage: SettingsOptions.NOTIFICATIONS\n      }\n    }\n  }, __jsx(NotifRemindButton, null, \"Sign Up for Notifications\")));\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Queue/TA/TAQueueListDetail.tsx"],"names":["ArrowLeftOutlined","QuestionCircleOutlined","useWindowWidth","Button","Skeleton","Tooltip","Link","React","useState","styled","useProfile","useQuestions","SettingsOptions","SPLIT_DETAIL_BKPT","TAQueueDetail","TAQueueListSection","Container","div","List","PriorityQueueQuestionBubble","Detail","BackToQueue","TAQueueListDetail","queueId","courseId","user","selectedQuestionId","setSelectedQuestionId","questions","questionsError","mutateQuestions","isSideBySide","helpingQuestions","questionsGettingHelp","filter","q","taHelped","id","allQuestionsList","queue","priorityQueue","selectedQuestion","find","length","phoneNotifsEnabled","desktopNotifsEnabled","list","detail","EmptyQueueInfo","NoQuestionsText","NotifRemindButton","NotifReminderButton","pathname","query","cid","defaultPage","NOTIFICATIONS"],"mappings":";;AAAA,SAASA,iBAAT,EAA4BC,sBAA5B,QAA0D,mBAA1D;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,QAA0C,MAA1C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,IAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,uRAOQJ,iBAPR,CAAf;AAmBA,IAAMK,IAAI,GAAGT,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,kEACaJ,iBADb,CAAV;AAOA,IAAMM,2BAA2B,GAAGV,MAAM,CAACR,sBAAD,CAAT;AAAA;AAAA;AAAA,yBAAjC;AAIA,IAAMmB,MAAM,GAAGX,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,0HAIWJ,iBAJX,CAAZ;AASA,IAAMQ,WAAW,GAAGZ,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,mGAAjB;AASA;;;;AAGA,eAAe,SAASK,iBAAT,OAME;AAAA;;AAAA,MALfC,OAKe,QALfA,OAKe;AAAA,MAJfC,QAIe,QAJfA,QAIe;AACf,MAAMC,IAAI,GAAGf,UAAU,EAAvB;;AADe,kBAEqCF,QAAQ,CAAS,IAAT,CAF7C;AAAA,MAERkB,kBAFQ;AAAA,MAEYC,qBAFZ;;AAAA,sBAGwChB,YAAY,CAACY,OAAD,CAHpD;AAAA,MAGPK,SAHO,iBAGPA,SAHO;AAAA,MAGIC,cAHJ,iBAGIA,cAHJ;AAAA,MAGoBC,eAHpB,iBAGoBA,eAHpB;;AAIf,MAAMC,YAAY,GAAG7B,cAAc,MAAMW,iBAAzC;AAEA,MAAMmB,gBAAgB,GAAGJ,SAAH,aAAGA,SAAH,gDAAGA,SAAS,CAAEK,oBAAd,0DAAG,sBAAiCC,MAAjC,CACvB,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,QAAF,CAAWC,EAAX,KAAkBZ,IAAI,CAACY,EAA9B;AAAA,GADuB,CAAzB;AAGA,MAAMC,gBAAgB,GAAGV,SAAS,gCAC1BI,gBAD0B,sBACLJ,SAAS,CAACW,KADL,sBACeX,SAAS,CAACY,aADzB,KAE9B,EAFJ;AAGA,MAAMC,gBAAgB,GAAGH,gBAAgB,CAACI,IAAjB,CACvB,UAACP,CAAD;AAAA,WAAOA,CAAC,CAACE,EAAF,KAASX,kBAAhB;AAAA,GADuB,CAAzB,CAZe,CAef;;AACA,MAAIA,kBAAkB,IAAI,CAACe,gBAA3B,EAA6C;AAC3Cd,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;;AAED,MAAI,CAACC,SAAL,EAAgB;AACd,WAAO,MAAC,QAAD,OAAP;AACD;;AAED,MAAIU,gBAAgB,CAACK,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,WACE,MAAC,cAAD,QACE,MAAC,eAAD,8CADF,EAEG,CAAClB,IAAI,CAACmB,kBAAN,IAA4B,CAACnB,IAAI,CAACoB,oBAAlC,IACC,MAAC,mBAAD;AAAqB,MAAA,QAAQ,EAAErB;AAA/B,MAHJ,CADF;AAQD;;AACD,MAAMsB,IAAI,GACR,MAAC,IAAD,QACE;AAAK,eAAQ;AAAb,KACE,MAAC,kBAAD;AACE,IAAA,KAAK,EAAE,mBADT;AAEE,IAAA,SAAS,EAAEd,gBAFb;AAGE,IAAA,eAAe,EAAEL,qBAHnB;AAIE,IAAA,kBAAkB,EAAED;AAJtB,IADF,CADF,EASE;AAAK,eAAQ;AAAb,KACE,MAAC,kBAAD;AACE,IAAA,KAAK,EACH,oBACE,MAAC,OAAD;AAAS,MAAA,KAAK,EAAC;AAAf,OACE,MAAC,2BAAD,OADF,CADF,mBAFJ;AASE,IAAA,SAAS,EAAEE,SAAS,CAACY,aATvB;AAUE,IAAA,eAAe,EAAEb,qBAVnB;AAWE,IAAA,kBAAkB,EAAED,kBAXtB;AAYE,IAAA,WAAW;AAZb,IADF,CATF,EAyBE;AAAK,eAAQ;AAAb,KACE,MAAC,kBAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,SAAS,EAAEE,SAAS,CAACW,KAFvB;AAGE,IAAA,eAAe,EAAEZ,qBAHnB;AAIE,IAAA,kBAAkB,EAAED,kBAJtB;AAKE,IAAA,WAAW,MALb;AAME,IAAA,WAAW;AANb,IADF,CAzBF,CADF;;AAsCA,MAAMqB,MAAM,GACV,MAAC,MAAD,QACGN,gBAAgB,IACf,MAAC,aAAD;AAAe,IAAA,OAAO,EAAElB,OAAxB;AAAiC,IAAA,QAAQ,EAAEkB;AAA3C,IAFJ,CADF;;AAQA,MAAIV,YAAJ,EAAkB;AAChB,WACE,MAAC,SAAD,QACGe,IADH,EAEGC,MAFH,CADF;AAMD,GAPD,MAOO,IAAIrB,kBAAJ,EAAwB;AAC7B,WACE,MAAC,SAAD,QACE,MAAC,WAAD;AAAa,MAAA,OAAO,EAAE;AAAA,eAAMC,qBAAqB,CAAC,IAAD,CAA3B;AAAA;AAAtB,OACE,oBACE,MAAC,iBAAD,OADF,EAEG,gBAFH,CADF,CADF,EAOGoB,MAPH,CADF;AAWD,GAZM,MAYA;AACL,WAAO,MAAC,SAAD,QAAYD,IAAZ,CAAP;AACD;AACF;AAED,IAAME,cAAc,GAAGvC,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,qFAApB;AAQA,IAAMgC,eAAe,GAAGxC,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,qDAArB;AAMA,IAAMiC,iBAAiB,GAAGzC,MAAM,CAACN,MAAD,CAAT;AAAA;AAAA;AAAA,0DAAvB;;AAMA,SAASgD,mBAAT,QAAiE;AAAA,MAAlC3B,QAAkC,SAAlCA,QAAkC;AAC/D,SACE,4BACE,MAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJ4B,MAAAA,QAAQ,EAAE,WADN;AAEJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,GAAG,EAAE9B,QAAP;AAAiB+B,QAAAA,WAAW,EAAE3C,eAAe,CAAC4C;AAA9C;AAFH;AADR,KAME,MAAC,iBAAD,oCANF,CADF,CADF;AAYD","sourcesContent":["import { ArrowLeftOutlined, QuestionCircleOutlined } from \"@ant-design/icons\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\nimport { Button, Skeleton, Tooltip } from \"antd\";\nimport Link from \"next/link\";\nimport React, { useState, ReactElement } from \"react\";\nimport styled from \"styled-components\";\nimport { useProfile } from \"../../../hooks/useProfile\";\nimport { useQuestions } from \"../../../hooks/useQuestions\";\nimport { SettingsOptions } from \"../../Settings/SettingsPage\";\nimport { SPLIT_DETAIL_BKPT } from \"./TAQueueBreakpoints\";\nimport TAQueueDetail from \"./TAQueueDetail\";\nimport TAQueueListSection from \"./TAQueueListSection\";\n\nconst Container = styled.div`\n  flex: 1;\n\n  background: white;\n  border: 1px solid #cfd6de;\n  margin-bottom: 30px;\n\n  @media (min-width: ${SPLIT_DETAIL_BKPT}px) {\n    border: none;\n    border-left: 1px solid #cfd6de;\n    margin-bottom: 0px;\n    display: flex;\n    flex-direction: row;\n    min-height: calc(\n      100vh - 46px - 67px\n    ); // - (height of footer) - (height of navbar)\n  }\n`;\n\nconst List = styled.div`\n  @media (min-width: ${SPLIT_DETAIL_BKPT}px) {\n    width: 320px;\n    overflow-y: scroll;\n  }\n`;\n\nconst PriorityQueueQuestionBubble = styled(QuestionCircleOutlined)`\n  margin-right: 8px;\n`;\n\nconst Detail = styled.div`\n  border-left: 1px solid #cfd6de;\n  border-right: 1px solid #cfd6de;\n  flex: 1;\n  @media (min-width: ${SPLIT_DETAIL_BKPT}px) {\n    overflow-y: scroll;\n  }\n`;\n\nconst BackToQueue = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n  padding-left: 12px;\n  color: #1890ff;\n  cursor: pointer;\n`;\n\n/**\n * List and detail panel of the TA queue\n */\nexport default function TAQueueListDetail({\n  queueId,\n  courseId,\n}: {\n  queueId: number;\n  courseId: number;\n}): ReactElement {\n  const user = useProfile();\n  const [selectedQuestionId, setSelectedQuestionId] = useState<number>(null);\n  const { questions, questionsError, mutateQuestions } = useQuestions(queueId);\n  const isSideBySide = useWindowWidth() >= SPLIT_DETAIL_BKPT;\n\n  const helpingQuestions = questions?.questionsGettingHelp?.filter(\n    (q) => q.taHelped.id === user.id\n  );\n  const allQuestionsList = questions\n    ? [...helpingQuestions, ...questions.queue, ...questions.priorityQueue]\n    : [];\n  const selectedQuestion = allQuestionsList.find(\n    (q) => q.id === selectedQuestionId\n  );\n  // set currentQuestion to null if it no longer exists in the queue\n  if (selectedQuestionId && !selectedQuestion) {\n    setSelectedQuestionId(null);\n  }\n\n  if (!questions) {\n    return <Skeleton />;\n  }\n\n  if (allQuestionsList.length === 0) {\n    return (\n      <EmptyQueueInfo>\n        <NoQuestionsText>There are no questions in the queue</NoQuestionsText>\n        {!user.phoneNotifsEnabled && !user.desktopNotifsEnabled && (\n          <NotifReminderButton courseId={courseId} />\n        )}\n      </EmptyQueueInfo>\n    );\n  }\n  const list = (\n    <List>\n      <div data-cy=\"list-helping\">\n        <TAQueueListSection\n          title={\"Currently Helping\"}\n          questions={helpingQuestions}\n          onClickQuestion={setSelectedQuestionId}\n          selectedQuestionId={selectedQuestionId}\n        />\n      </div>\n      <div data-cy=\"list-priority\">\n        <TAQueueListSection\n          title={\n            <span>\n              <Tooltip title=\"Students in the priority queue were at the top of the queue before for some reason (e.g. they were at the top but AFK, or a TA helped them previously, and then hit 'requeue student.' You should communicate with your fellow staff members to prioritize these students first.\">\n                <PriorityQueueQuestionBubble />\n              </Tooltip>\n              Priority Queue\n            </span>\n          }\n          questions={questions.priorityQueue}\n          onClickQuestion={setSelectedQuestionId}\n          selectedQuestionId={selectedQuestionId}\n          collapsible\n        />\n      </div>\n      <div data-cy=\"list-queue\">\n        <TAQueueListSection\n          title=\"Waiting In Line\"\n          questions={questions.queue}\n          onClickQuestion={setSelectedQuestionId}\n          selectedQuestionId={selectedQuestionId}\n          collapsible\n          showNumbers\n        />\n      </div>\n    </List>\n  );\n  const detail = (\n    <Detail>\n      {selectedQuestion && (\n        <TAQueueDetail queueId={queueId} question={selectedQuestion} />\n      )}\n    </Detail>\n  );\n\n  if (isSideBySide) {\n    return (\n      <Container>\n        {list}\n        {detail}\n      </Container>\n    );\n  } else if (selectedQuestionId) {\n    return (\n      <Container>\n        <BackToQueue onClick={() => setSelectedQuestionId(null)}>\n          <span>\n            <ArrowLeftOutlined />\n            {\" Back To Queue\"}\n          </span>\n        </BackToQueue>\n        {detail}\n      </Container>\n    );\n  } else {\n    return <Container>{list}</Container>;\n  }\n}\n\nconst EmptyQueueInfo = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n`;\n\nconst NoQuestionsText = styled.div`\n  font-weight: 500;\n  font-size: 24px;\n  color: #212934;\n`;\n\nconst NotifRemindButton = styled(Button)`\n  margin-top: 16px;\n  border-radius: 6px;\n  background: #fff;\n`;\n\nfunction NotifReminderButton({ courseId }: { courseId: number }) {\n  return (\n    <>\n      <Link\n        href={{\n          pathname: \"/settings\",\n          query: { cid: courseId, defaultPage: SettingsOptions.NOTIFICATIONS },\n        }}\n      >\n        <NotifRemindButton>Sign Up for Notifications</NotifRemindButton>\n      </Link>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}