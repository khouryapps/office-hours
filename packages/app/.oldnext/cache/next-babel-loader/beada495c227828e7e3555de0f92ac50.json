{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport { ClockCircleOutlined, NotificationOutlined, StopOutlined, CloudSyncOutlined, FrownOutlined } from \"@ant-design/icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useQueue } from \"../../hooks/useQueue\";\nimport { formatQueueTime } from \"../../utils/TimeUtil\";\nimport { TAStatuses } from \"./TAStatuses\";\nimport { Button, Tooltip } from \"antd\";\nexport var Container = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__Container\",\n  componentId: \"sc-1abq9vy-0\"\n})([\"display:flex;flex-direction:row;align-items:center;\"]);\nvar QueueTitle = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__QueueTitle\",\n  componentId: \"sc-1abq9vy-1\"\n})([\"font-weight:500;font-size:24px;color:#212934;\"]);\nexport var NotesText = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__NotesText\",\n  componentId: \"sc-1abq9vy-2\"\n})([\"font-size:16px;color:#5f6b79;\"]); // New queue styled components start here\n\nvar InfoColumnContainer = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__InfoColumnContainer\",\n  componentId: \"sc-1abq9vy-3\"\n})([\"flex-shrink:0;padding-bottom:30px;@media (min-width:650px){margin-top:32px;width:290px;}\"]);\nvar QueueInfoColumnButtonStyle = styled(Button).withConfig({\n  displayName: \"QueueListSharedComponents__QueueInfoColumnButtonStyle\",\n  componentId: \"sc-1abq9vy-4\"\n})([\"font-weight:500;font-size:14px;border:1px solid #cfd6de;border-radius:6px;margin-bottom:12px;\"]);\nexport var QueueInfoColumnButton = function QueueInfoColumnButton(props) {\n  return __jsx(QueueInfoColumnButtonStyle, _extends({\n    size: \"large\",\n    block: true\n  }, props));\n};\nvar QueuePropertyRow = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__QueuePropertyRow\",\n  componentId: \"sc-1abq9vy-5\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-bottom:20px;color:#5f6b79;font-size:20px;\"]);\nvar QueuePropertyText = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__QueuePropertyText\",\n  componentId: \"sc-1abq9vy-6\"\n})([\"margin-left:12px;font-size:16px;min-width:0;overflow-wrap:break-word;\"]);\nvar StaffH2 = styled.h2.withConfig({\n  displayName: \"QueueListSharedComponents__StaffH2\",\n  componentId: \"sc-1abq9vy-7\"\n})([\"margin-top:32px;\"]);\nvar QueueRoomGroup = styled.div.withConfig({\n  displayName: \"QueueListSharedComponents__QueueRoomGroup\",\n  componentId: \"sc-1abq9vy-8\"\n})([\"display:flex;flex-direction:row;align-items:center;margin-bottom:24px;\"]);\nexport function QueueInfoColumn(_ref) {\n  var queueId = _ref.queueId,\n      buttons = _ref.buttons;\n\n  var _useQueue = useQueue(queueId),\n      queue = _useQueue.queue,\n      isQueueLive = _useQueue.isQueueLive;\n\n  return __jsx(InfoColumnContainer, null, __jsx(QueueRoomGroup, null, __jsx(QueueTitle, null, queue === null || queue === void 0 ? void 0 : queue.room), !queue.allowQuestions && __jsx(Tooltip, {\n    title: \"This queue is no longer accepting questions\"\n  }, __jsx(StopOutlined, {\n    \"data-cy\": \"stopQuestions\",\n    style: {\n      color: \"red\",\n      fontSize: \"24px\",\n      marginLeft: \"8px\"\n    }\n  }))), queue.startTime && queue.endTime && __jsx(QueuePropertyRow, null, __jsx(ClockCircleOutlined, null), __jsx(QueuePropertyText, {\n    className: \"hide-in-percy\"\n  }, formatQueueTime(queue))), (queue === null || queue === void 0 ? void 0 : queue.notes) && __jsx(QueuePropertyRow, null, __jsx(NotificationOutlined, null), __jsx(QueuePropertyText, null, queue.notes)), __jsx(QueuePropertyRow, null, isQueueLive ? __jsx(CloudSyncOutlined, null) : __jsx(FrownOutlined, null), __jsx(QueuePropertyText, null, isQueueLive ? \"Queue up to date\" : \"Queue out of date\")), buttons, __jsx(StaffH2, null, \"Staff\"), __jsx(TAStatuses, {\n    queueId: queueId\n  }));\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Queue/QueueListSharedComponents.tsx"],"names":["ClockCircleOutlined","NotificationOutlined","StopOutlined","CloudSyncOutlined","FrownOutlined","React","styled","useQueue","formatQueueTime","TAStatuses","Button","Tooltip","Container","div","QueueTitle","NotesText","InfoColumnContainer","QueueInfoColumnButtonStyle","QueueInfoColumnButton","props","QueuePropertyRow","QueuePropertyText","StaffH2","h2","QueueRoomGroup","QueueInfoColumn","queueId","buttons","queue","isQueueLive","room","allowQuestions","color","fontSize","marginLeft","startTime","endTime","notes"],"mappings":"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","sourcesContent":["import {\n  ClockCircleOutlined,\n  NotificationOutlined,\n  StopOutlined,\n  CloudSyncOutlined,\n  FrownOutlined,\n} from \"@ant-design/icons\";\nimport React, { ReactElement, ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { useQueue } from \"../../hooks/useQueue\";\nimport { formatQueueTime } from \"../../utils/TimeUtil\";\nimport { TAStatuses } from \"./TAStatuses\";\nimport { Button, Tooltip } from \"antd\";\nimport { ButtonProps } from \"antd/lib/button\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst QueueTitle = styled.div`\n  font-weight: 500;\n  font-size: 24px;\n  color: #212934;\n`;\n\nexport const NotesText = styled.div`\n  font-size: 16px;\n  color: #5f6b79;\n`;\n\n// New queue styled components start here\n\nconst InfoColumnContainer = styled.div`\n  flex-shrink: 0;\n  padding-bottom: 30px;\n  @media (min-width: 650px) {\n    margin-top: 32px;\n    width: 290px;\n  }\n`;\n\nconst QueueInfoColumnButtonStyle = styled(Button)`\n  font-weight: 500;\n  font-size: 14px;\n  border: 1px solid #cfd6de;\n  border-radius: 6px;\n  margin-bottom: 12px;\n`;\n\nexport const QueueInfoColumnButton = (props: ButtonProps): ReactElement => (\n  <QueueInfoColumnButtonStyle size=\"large\" block {...props} />\n);\n\nconst QueuePropertyRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center; // This kinda funky, not sure how to align the tops of the row\n  margin-bottom: 20px;\n  color: #5f6b79;\n  font-size: 20px;\n`;\n\nconst QueuePropertyText = styled.div`\n  margin-left: 12px;\n  font-size: 16px;\n\n  // To break text in flexbox\n  min-width: 0;\n  overflow-wrap: break-word;\n`;\n\nconst StaffH2 = styled.h2`\n  margin-top: 32px;\n`;\n\nconst QueueRoomGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-bottom: 24px;\n`;\ninterface QueueInfoColumnProps {\n  queueId: number;\n  buttons: ReactNode;\n}\n\nexport function QueueInfoColumn({\n  queueId,\n  buttons,\n}: QueueInfoColumnProps): ReactElement {\n  const { queue, isQueueLive } = useQueue(queueId);\n  return (\n    <InfoColumnContainer>\n      <QueueRoomGroup>\n        <QueueTitle>{queue?.room}</QueueTitle>\n        {!queue.allowQuestions && (\n          <Tooltip title=\"This queue is no longer accepting questions\">\n            <StopOutlined\n              data-cy=\"stopQuestions\"\n              style={{ color: \"red\", fontSize: \"24px\", marginLeft: \"8px\" }}\n            />\n          </Tooltip>\n        )}\n      </QueueRoomGroup>\n\n      {queue.startTime && queue.endTime && (\n        <QueuePropertyRow>\n          <ClockCircleOutlined />\n          <QueuePropertyText className={\"hide-in-percy\"}>\n            {formatQueueTime(queue)}\n          </QueuePropertyText>\n        </QueuePropertyRow>\n      )}\n      {queue?.notes && (\n        <QueuePropertyRow>\n          <NotificationOutlined />\n          <QueuePropertyText>{queue.notes}</QueuePropertyText>\n        </QueuePropertyRow>\n      )}\n      <QueuePropertyRow>\n        {isQueueLive ? <CloudSyncOutlined /> : <FrownOutlined />}\n        <QueuePropertyText>\n          {isQueueLive ? \"Queue up to date\" : \"Queue out of date\"}\n        </QueuePropertyText>\n      </QueuePropertyRow>\n      {buttons}\n      <StaffH2>Staff</StaffH2>\n      <TAStatuses queueId={queueId} />\n    </InfoColumnContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}