{"ast":null,"code":"var __jsx = React.createElement;\nimport { StopOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Input, Row, Skeleton, Tooltip } from \"antd\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { formatQueueTime } from \"../../utils/TimeUtil\";\nimport AvatarWithInitals from \"../common/AvatarWithInitials\";\nvar PaddedCard = styled(Card).withConfig({\n  displayName: \"OpenQueueCard__PaddedCard\",\n  componentId: \"pissyg-0\"\n})([\"margin-top:32px;margin-bottom:25px;border-radius:6px;box-shadow:0px 2px 8px rgba(0,0,0,0.15);\"]);\nvar HeaderDiv = styled.div.withConfig({\n  displayName: \"OpenQueueCard__HeaderDiv\",\n  componentId: \"pissyg-1\"\n})([\"font-size:24px;font-weight:500;color:#212934;\"]);\nvar QueueInfoRow = styled.div.withConfig({\n  displayName: \"OpenQueueCard__QueueInfoRow\",\n  componentId: \"pissyg-2\"\n})([\"display:flex;flex-direction:row;justify-content:space-between;\"]);\nvar RightQueueInfoRow = styled.div.withConfig({\n  displayName: \"OpenQueueCard__RightQueueInfoRow\",\n  componentId: \"pissyg-3\"\n})([\"display:flex;flex-direction:row;align-items:center;\"]);\nvar QuestionNumberSpan = styled.span.withConfig({\n  displayName: \"OpenQueueCard__QuestionNumberSpan\",\n  componentId: \"pissyg-4\"\n})([\"font-size:24px;\"]);\nvar QueueSizeColorDiv = styled.div.withConfig({\n  displayName: \"OpenQueueCard__QueueSizeColorDiv\",\n  componentId: \"pissyg-5\"\n})([\"color:#212934;font-size:16px;\"]);\nvar HeaderText = styled.div.withConfig({\n  displayName: \"OpenQueueCard__HeaderText\",\n  componentId: \"pissyg-6\"\n})([\"font-size:14px;line-height:22px;font-weight:600;color:#bfbfbf;font-variant:small-caps;margin-bottom:8px;\"]);\nvar AvatarWithMargin = styled(AvatarWithInitals).withConfig({\n  displayName: \"OpenQueueCard__AvatarWithMargin\",\n  componentId: \"pissyg-7\"\n})([\"margin-right:25px;\"]);\nvar OpenQueueButton = styled(Button).withConfig({\n  displayName: \"OpenQueueCard__OpenQueueButton\",\n  componentId: \"pissyg-8\"\n})([\"background-color:#3684c6;border-radius:6px;color:white;font-weight:500;font-size:14px;margin-left:16px;\"]);\nvar EditNotesButton = styled(Button).withConfig({\n  displayName: \"OpenQueueCard__EditNotesButton\",\n  componentId: \"pissyg-9\"\n})([\"border-radius:6px;font-size:14px;font-weight:500;\"]);\nvar SaveButton = styled(Button).withConfig({\n  displayName: \"OpenQueueCard__SaveButton\",\n  componentId: \"pissyg-10\"\n})([\"background:#2a9187;border-radius:6px;color:white;font-weight:500;font-size:14px;\"]);\nvar ExtraText = styled.div.withConfig({\n  displayName: \"OpenQueueCard__ExtraText\",\n  componentId: \"pissyg-11\"\n})([\"color:#8895a6;font-size:14px;font-weight:normal;\"]);\nvar NotesInput = styled(Input).withConfig({\n  displayName: \"OpenQueueCard__NotesInput\",\n  componentId: \"pissyg-12\"\n})([\"border-radius:6px;border:1px solid #b8c4ce;\"]);\nvar Notes = styled.div.withConfig({\n  displayName: \"OpenQueueCard__Notes\",\n  componentId: \"pissyg-13\"\n})([\"overflow-wrap:break-word;\"]);\n\nvar OpenQueueCard = function OpenQueueCard(_ref) {\n  var queue = _ref.queue,\n      isTA = _ref.isTA,\n      updateQueueNotes = _ref.updateQueueNotes;\n\n  var _useState = useState(false),\n      editingNotes = _useState[0],\n      setEditingNotes = _useState[1];\n\n  var _useState2 = useState(queue.notes),\n      updatedNotes = _useState2[0],\n      setUpdatedNotes = _useState2[1];\n\n  var router = useRouter();\n  var cid = router.query.cid;\n  var staffList = queue.staffList;\n\n  var handleUpdate = function handleUpdate() {\n    setEditingNotes(false);\n    updateQueueNotes(queue, updatedNotes);\n  };\n\n  return __jsx(PaddedCard, {\n    headStyle: {\n      background: \"#F3F5F7\"\n    },\n    className: \"open-queue-card\",\n    title: staffList.map(function (staffMember) {\n      return staffMember.name;\n    }).join(\", \") || \"No Staff Checked In!\",\n    extra: queue.startTime && queue.endTime && formatQueueTime(queue)\n  }, __jsx(QueueInfoRow, null, __jsx(HeaderDiv, null, queue.room), __jsx(RightQueueInfoRow, null, !queue.allowQuestions && __jsx(Tooltip, {\n    title: \"This queue is no longer accepting questions\"\n  }, __jsx(StopOutlined, {\n    style: {\n      color: \"red\",\n      fontSize: \"24px\",\n      marginRight: \"8px\"\n    }\n  })), __jsx(QueueSizeColorDiv, null, __jsx(QuestionNumberSpan, null, queue.queueSize), \" in queue\"))), __jsx(\"br\", null), editingNotes ? __jsx(\"div\", null, __jsx(HeaderText, null, \"staff notes\"), __jsx(NotesInput, {\n    defaultValue: queue.notes,\n    onPressEnter: handleUpdate,\n    value: updatedNotes,\n    onChange: function onChange(e) {\n      return setUpdatedNotes(e.target.value);\n    }\n  })) : queue.notes && __jsx(\"div\", null, __jsx(HeaderText, {\n    style: {\n      marginBottom: 0\n    }\n  }, \"staff notes\"), __jsx(Notes, null, queue.notes)), __jsx(\"br\", null), staffList.length > 1 && __jsx(HeaderText, null, \"checked-in staff\")\n  /*todo: add better text*/\n  , __jsx(Row, {\n    justify: \"space-between\",\n    align: \"bottom\"\n  }, __jsx(\"div\", null, staffList.map(function (staffMember) {\n    return __jsx(Tooltip, {\n      key: staffMember.id,\n      title: staffMember.name\n    }, __jsx(AvatarWithMargin, {\n      size: 96,\n      fontSize: 40,\n      name: staffMember.name\n    }));\n  })), editingNotes && __jsx(SaveButton, {\n    onClick: handleUpdate,\n    size: \"large\"\n  }, \"Save Changes\"), !editingNotes && __jsx(Row, null, isTA && __jsx(EditNotesButton, {\n    size: \"large\",\n    onClick: function onClick() {\n      setEditingNotes(true);\n    }\n  }, \"Edit Notes\"), __jsx(Link, {\n    href: \"/course/[cid]/queue/[qid]\",\n    as: \"/course/\".concat(cid, \"/queue/\").concat(queue.id)\n  }, __jsx(OpenQueueButton, {\n    type: \"primary\",\n    size: \"large\",\n    \"data-cy\": \"open-queue-button\"\n  }, \"Open Queue\")))));\n};\n\nexport default OpenQueueCard;\nexport function OpenQueueCardSkeleton() {\n  return __jsx(PaddedCard, null, __jsx(Skeleton, {\n    paragraph: {\n      rows: 2\n    }\n  }), __jsx(Row, {\n    justify: \"space-between\",\n    align: \"bottom\"\n  }, __jsx(Skeleton.Avatar, {\n    size: 96\n  }), __jsx(Skeleton.Button, {\n    size: \"large\"\n  })));\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Today/OpenQueueCard.tsx"],"names":["StopOutlined","Button","Card","Input","Row","Skeleton","Tooltip","Link","useRouter","React","useState","styled","formatQueueTime","AvatarWithInitals","PaddedCard","HeaderDiv","div","QueueInfoRow","RightQueueInfoRow","QuestionNumberSpan","span","QueueSizeColorDiv","HeaderText","AvatarWithMargin","OpenQueueButton","EditNotesButton","SaveButton","ExtraText","NotesInput","Notes","OpenQueueCard","queue","isTA","updateQueueNotes","editingNotes","setEditingNotes","notes","updatedNotes","setUpdatedNotes","router","cid","query","staffList","handleUpdate","background","map","staffMember","name","join","startTime","endTime","room","allowQuestions","color","fontSize","marginRight","queueSize","e","target","value","marginBottom","length","id","OpenQueueCardSkeleton","rows"],"mappings":"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","sourcesContent":["import { StopOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Input, Row, Skeleton, Tooltip } from \"antd\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React, { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { QueuePartial } from \"../../../common/index\";\nimport { formatQueueTime } from \"../../utils/TimeUtil\";\nimport AvatarWithInitals from \"../common/AvatarWithInitials\";\n\ntype OpenQueueCard = {\n  queue: QueuePartial;\n  isTA: boolean;\n  updateQueueNotes: (queue: QueuePartial, queueNotes: string) => Promise<void>;\n};\n\nconst PaddedCard = styled(Card)`\n  margin-top: 32px;\n  margin-bottom: 25px;\n  border-radius: 6px;\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.15);\n`;\n\nconst HeaderDiv = styled.div`\n  font-size: 24px;\n  font-weight: 500;\n  color: #212934;\n`;\n\nconst QueueInfoRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst RightQueueInfoRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst QuestionNumberSpan = styled.span`\n  font-size: 24px;\n`;\n\nconst QueueSizeColorDiv = styled.div`\n  color: #212934;\n  font-size: 16px;\n`;\n\nconst HeaderText = styled.div`\n  font-size: 14px;\n  line-height: 22px;\n  font-weight: 600;\n  color: #bfbfbf;\n  font-variant: small-caps;\n  margin-bottom: 8px;\n`;\n\nconst AvatarWithMargin = styled(AvatarWithInitals)`\n  margin-right: 25px;\n`;\n\nconst OpenQueueButton = styled(Button)`\n  background-color: #3684c6;\n  border-radius: 6px;\n  color: white;\n  font-weight: 500;\n  font-size: 14px;\n  margin-left: 16px;\n`;\n\nconst EditNotesButton = styled(Button)`\n  border-radius: 6px;\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nconst SaveButton = styled(Button)`\n  background: #2a9187;\n  border-radius: 6px;\n  color: white;\n  font-weight: 500;\n  font-size: 14px;\n`;\n\nconst ExtraText = styled.div`\n  color: #8895a6;\n  font-size: 14px;\n  font-weight: normal;\n`;\n\nconst NotesInput = styled(Input)`\n  border-radius: 6px;\n  border: 1px solid #b8c4ce;\n`;\n\nconst Notes = styled.div`\n  overflow-wrap: break-word;\n`;\n\nconst OpenQueueCard = ({\n  queue,\n  isTA,\n  updateQueueNotes,\n}: OpenQueueCard): ReactElement => {\n  const [editingNotes, setEditingNotes] = useState(false);\n  const [updatedNotes, setUpdatedNotes] = useState(queue.notes);\n  const router = useRouter();\n  const { cid } = router.query;\n\n  const staffList = queue.staffList;\n\n  const handleUpdate = () => {\n    setEditingNotes(false);\n    updateQueueNotes(queue, updatedNotes);\n  };\n\n  return (\n    <PaddedCard\n      headStyle={{ background: \"#F3F5F7\" }}\n      className={\"open-queue-card\"}\n      title={\n        staffList.map((staffMember) => staffMember.name).join(\", \") ||\n        \"No Staff Checked In!\"\n      }\n      extra={queue.startTime && queue.endTime && formatQueueTime(queue)}\n    >\n      <QueueInfoRow>\n        <HeaderDiv>{queue.room}</HeaderDiv>\n        <RightQueueInfoRow>\n          {!queue.allowQuestions && (\n            <Tooltip title=\"This queue is no longer accepting questions\">\n              <StopOutlined\n                style={{ color: \"red\", fontSize: \"24px\", marginRight: \"8px\" }}\n              />\n            </Tooltip>\n          )}\n          <QueueSizeColorDiv>\n            <QuestionNumberSpan>{queue.queueSize}</QuestionNumberSpan> in queue\n          </QueueSizeColorDiv>\n        </RightQueueInfoRow>\n      </QueueInfoRow>\n\n      <br />\n\n      {editingNotes ? (\n        <div>\n          <HeaderText>staff notes</HeaderText>\n          <NotesInput\n            defaultValue={queue.notes}\n            onPressEnter={handleUpdate}\n            value={updatedNotes}\n            onChange={(e) => setUpdatedNotes(e.target.value as any)}\n          />\n        </div>\n      ) : (\n        queue.notes && (\n          <div>\n            <HeaderText style={{ marginBottom: 0 }}>staff notes</HeaderText>\n            <Notes>{queue.notes}</Notes>\n          </div>\n        )\n      )}\n      <br />\n\n      {\n        staffList.length > 1 && (\n          <HeaderText>checked-in staff</HeaderText>\n        ) /*todo: add better text*/\n      }\n\n      <Row justify=\"space-between\" align=\"bottom\">\n        {\n          // TODO: bring back photo URL && get rid of RegeX\n          // src={staffMember.photoURL}\n        }\n        <div>\n          {staffList.map((staffMember) => (\n            <Tooltip key={staffMember.id} title={staffMember.name}>\n              <AvatarWithMargin\n                size={96}\n                fontSize={40}\n                name={staffMember.name}\n              />\n            </Tooltip>\n          ))}\n        </div>\n        {editingNotes && (\n          <SaveButton onClick={handleUpdate} size=\"large\">\n            Save Changes\n          </SaveButton>\n        )}\n        {!editingNotes && (\n          <Row>\n            {isTA && (\n              <EditNotesButton\n                size=\"large\"\n                onClick={() => {\n                  setEditingNotes(true);\n                }}\n              >\n                Edit Notes\n              </EditNotesButton>\n            )}\n            <Link\n              href=\"/course/[cid]/queue/[qid]\"\n              as={`/course/${cid}/queue/${queue.id}`}\n            >\n              <OpenQueueButton\n                type=\"primary\"\n                size=\"large\"\n                data-cy=\"open-queue-button\"\n              >\n                Open Queue\n              </OpenQueueButton>\n            </Link>\n          </Row>\n        )}\n      </Row>\n    </PaddedCard>\n  );\n};\n\nexport default OpenQueueCard;\n\nexport function OpenQueueCardSkeleton(): ReactElement {\n  return (\n    <PaddedCard>\n      <Skeleton paragraph={{ rows: 2 }} />\n      <Row justify=\"space-between\" align=\"bottom\">\n        <Skeleton.Avatar size={96} />\n        <Skeleton.Button size=\"large\" />\n      </Row>\n    </PaddedCard>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}