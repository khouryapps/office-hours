{"ast":null,"code":"var __jsx = React.createElement;\nimport { StopOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Input, Row, Skeleton, Tooltip } from \"antd\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { formatQueueTime } from \"../../utils/TimeUtil\";\nimport { KOHAvatar } from \"../common/SelfAvatar\";\nconst PaddedCard = styled(Card).withConfig({\n  displayName: \"OpenQueueCard__PaddedCard\",\n  componentId: \"pissyg-0\"\n})([\"margin-top:32px;margin-bottom:25px;border-radius:6px;box-shadow:0px 2px 8px rgba(0,0,0,0.15);\"]);\nconst HeaderDiv = styled.div.withConfig({\n  displayName: \"OpenQueueCard__HeaderDiv\",\n  componentId: \"pissyg-1\"\n})([\"font-size:24px;font-weight:500;color:#212934;\"]);\nconst QueueInfoRow = styled.div.withConfig({\n  displayName: \"OpenQueueCard__QueueInfoRow\",\n  componentId: \"pissyg-2\"\n})([\"display:flex;flex-direction:row;justify-content:space-between;\"]);\nconst RightQueueInfoRow = styled.div.withConfig({\n  displayName: \"OpenQueueCard__RightQueueInfoRow\",\n  componentId: \"pissyg-3\"\n})([\"display:flex;flex-direction:row;align-items:center;\"]);\nconst QuestionNumberSpan = styled.span.withConfig({\n  displayName: \"OpenQueueCard__QuestionNumberSpan\",\n  componentId: \"pissyg-4\"\n})([\"font-size:24px;\"]);\nconst QueueSizeColorDiv = styled.div.withConfig({\n  displayName: \"OpenQueueCard__QueueSizeColorDiv\",\n  componentId: \"pissyg-5\"\n})([\"color:#212934;font-size:16px;\"]);\nconst HeaderText = styled.div.withConfig({\n  displayName: \"OpenQueueCard__HeaderText\",\n  componentId: \"pissyg-6\"\n})([\"font-size:14px;line-height:22px;font-weight:600;color:#bfbfbf;font-variant:small-caps;margin-bottom:8px;\"]);\nconst OpenQueueButton = styled(Button).withConfig({\n  displayName: \"OpenQueueCard__OpenQueueButton\",\n  componentId: \"pissyg-7\"\n})([\"background-color:#3684c6;border-radius:6px;color:white;font-weight:500;font-size:14px;margin-left:16px;\"]);\nconst EditNotesButton = styled(Button).withConfig({\n  displayName: \"OpenQueueCard__EditNotesButton\",\n  componentId: \"pissyg-8\"\n})([\"border-radius:6px;font-size:14px;font-weight:500;\"]);\nconst SaveButton = styled(Button).withConfig({\n  displayName: \"OpenQueueCard__SaveButton\",\n  componentId: \"pissyg-9\"\n})([\"background:#2a9187;border-radius:6px;color:white;font-weight:500;font-size:14px;\"]);\nconst ExtraText = styled.div.withConfig({\n  displayName: \"OpenQueueCard__ExtraText\",\n  componentId: \"pissyg-10\"\n})([\"color:#8895a6;font-size:14px;font-weight:normal;\"]);\nconst NotesInput = styled(Input).withConfig({\n  displayName: \"OpenQueueCard__NotesInput\",\n  componentId: \"pissyg-11\"\n})([\"border-radius:6px;border:1px solid #b8c4ce;\"]);\nconst Notes = styled.div.withConfig({\n  displayName: \"OpenQueueCard__Notes\",\n  componentId: \"pissyg-12\"\n})([\"overflow-wrap:break-word;\"]);\n\nconst OpenQueueCard = ({\n  queue,\n  isTA,\n  updateQueueNotes\n}) => {\n  const {\n    0: editingNotes,\n    1: setEditingNotes\n  } = useState(false);\n  const {\n    0: updatedNotes,\n    1: setUpdatedNotes\n  } = useState(queue.notes);\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const staffList = queue.staffList;\n\n  const handleUpdate = () => {\n    setEditingNotes(false);\n    updateQueueNotes(queue, updatedNotes);\n  };\n\n  return __jsx(PaddedCard, {\n    headStyle: {\n      background: \"#F3F5F7\"\n    },\n    className: \"open-queue-card\",\n    title: staffList.map(staffMember => staffMember.name).join(\", \") || \"No Staff Checked In!\",\n    extra: queue.startTime && queue.endTime && formatQueueTime(queue)\n  }, __jsx(QueueInfoRow, null, __jsx(HeaderDiv, null, queue.room), __jsx(RightQueueInfoRow, null, !queue.allowQuestions && __jsx(Tooltip, {\n    title: \"This queue is no longer accepting questions\"\n  }, __jsx(StopOutlined, {\n    style: {\n      color: \"red\",\n      fontSize: \"24px\",\n      marginRight: \"8px\"\n    }\n  })), __jsx(QueueSizeColorDiv, null, __jsx(QuestionNumberSpan, null, queue.queueSize), \" in queue\"))), __jsx(\"br\", null), editingNotes ? __jsx(\"div\", null, __jsx(HeaderText, null, \"staff notes\"), __jsx(NotesInput, {\n    defaultValue: queue.notes,\n    onPressEnter: handleUpdate,\n    value: updatedNotes,\n    onChange: e => setUpdatedNotes(e.target.value)\n  })) : queue.notes && __jsx(\"div\", null, __jsx(HeaderText, {\n    style: {\n      marginBottom: 0\n    }\n  }, \"staff notes\"), __jsx(Notes, null, queue.notes)), __jsx(\"br\", null), staffList.length > 1 && __jsx(HeaderText, null, \"checked-in staff\")\n  /*todo: add better text*/\n  , __jsx(Row, {\n    justify: \"space-between\",\n    align: \"bottom\"\n  }, __jsx(\"div\", null, staffList.map(staffMember => __jsx(Tooltip, {\n    key: staffMember.id,\n    title: staffMember.name\n  }, __jsx(KOHAvatar, {\n    size: 96,\n    photoURL: staffMember.photoURL,\n    name: staffMember.name,\n    style: {\n      marginRight: \"25px\"\n    }\n  })))), editingNotes && __jsx(SaveButton, {\n    onClick: handleUpdate,\n    size: \"large\"\n  }, \"Save Changes\"), !editingNotes && __jsx(Row, null, isTA && __jsx(EditNotesButton, {\n    size: \"large\",\n    onClick: () => {\n      setEditingNotes(true);\n    }\n  }, \"Edit Notes\"), __jsx(Link, {\n    href: \"/course/[cid]/queue/[qid]\",\n    as: `/course/${cid}/queue/${queue.id}`\n  }, __jsx(OpenQueueButton, {\n    type: \"primary\",\n    size: \"large\",\n    \"data-cy\": \"open-queue-button\"\n  }, \"Open Queue\")))));\n};\n\nexport default OpenQueueCard;\nexport function OpenQueueCardSkeleton() {\n  return __jsx(PaddedCard, null, __jsx(Skeleton, {\n    paragraph: {\n      rows: 2\n    }\n  }), __jsx(Row, {\n    justify: \"space-between\",\n    align: \"bottom\"\n  }, __jsx(Skeleton.Avatar, {\n    size: 96\n  }), __jsx(Skeleton.Button, {\n    size: \"large\"\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}