{"ast":null,"code":"var __jsx = React.createElement;\nimport { DownOutlined } from \"@ant-design/icons\";\nimport { Button, Drawer, Dropdown, Menu } from \"antd\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport { useProfile } from \"../../hooks/useProfile\";\nimport NavBarTabs from \"./NavBarTabs\";\nimport ProfileDrawer from \"./ProfileDrawer\";\nconst Nav = styled.nav.withConfig({\n  displayName: \"NavBar__Nav\",\n  componentId: \"sc-1jr3ir-0\"\n})([\"padding:0px 0px;display:flex;align-items:center;height:67px;z-index:1;\"]); // A hack to get the white stripe edge to edge, even when Nav is narrower.\n\nconst NavBG = styled.nav.withConfig({\n  displayName: \"NavBar__NavBG\",\n  componentId: \"sc-1jr3ir-1\"\n})([\"position:absolute;top:0;left:0;right:0;height:67px;background:#fff;border-bottom:solid 1px #e8e8e8;\"]);\nconst LogoContainer = styled.div.withConfig({\n  displayName: \"NavBar__LogoContainer\",\n  componentId: \"sc-1jr3ir-2\"\n})([\"z-index:1;display:flex;align-items:center;margin-right:20px;\"]);\nconst Logo = styled.div.withConfig({\n  displayName: \"NavBar__Logo\",\n  componentId: \"sc-1jr3ir-3\"\n})([\"font-size:20px;font-weight:500;color:#262626;text-transform:capitalize;\"]);\nconst MenuCon = styled.div.withConfig({\n  displayName: \"NavBar__MenuCon\",\n  componentId: \"sc-1jr3ir-4\"\n})([\"flex-grow:1;display:flex;align-items:center;justify-content:space-between;padding-left:0px;\"]);\nconst LeftMenu = styled.div.withConfig({\n  displayName: \"NavBar__LeftMenu\",\n  componentId: \"sc-1jr3ir-5\"\n})([\"@media (max-width:650px){display:none;}\"]);\nconst RightMenu = styled.div.withConfig({\n  displayName: \"NavBar__RightMenu\",\n  componentId: \"sc-1jr3ir-6\"\n})([\"@media (max-width:650px){display:none;}\"]);\nconst BarsMenu = styled(Button).withConfig({\n  displayName: \"NavBar__BarsMenu\",\n  componentId: \"sc-1jr3ir-7\"\n})([\"height:32px;padding:6px;margin-top:8px;display:none;background:none;@media (max-width:650px){display:inline-block;}\"]);\nconst BarsButton = styled.span.withConfig({\n  displayName: \"NavBar__BarsButton\",\n  componentId: \"sc-1jr3ir-8\"\n})([\"display:block;width:20px;height:2px;background:#1890ff;position:relative;&:after,:before{content:attr(x);width:20px;position:absolute;top:-6px;left:0;height:2px;background:#1890ff;}&:after{top:auto;bottom:-6px;}\"]);\nconst CoursesMenuItem = styled(Menu.Item).withConfig({\n  displayName: \"NavBar__CoursesMenuItem\",\n  componentId: \"sc-1jr3ir-9\"\n})([\"z-index:1;background:#ffffff;\"]);\nexport default function NavBar({\n  courseId\n}) {\n  const profile = useProfile();\n\n  if (!courseId) {\n    courseId = profile === null || profile === void 0 ? void 0 : profile.courses[0].course.id;\n  }\n\n  const [defaultCourse, setDefaultCourse] = useLocalStorage(\"defaultCourse\", null);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    pathname\n  } = useRouter();\n  const {\n    course\n  } = useCourse(courseId);\n  const queueId = (course === null || course === void 0 ? void 0 : course.queues) && course.queues.length > 0 && course.queues[0].id;\n\n  const showDrawer = () => {\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    setVisible(false);\n  };\n\n  const courseSelector = __jsx(Menu, null, profile === null || profile === void 0 ? void 0 : profile.courses.map(c => __jsx(CoursesMenuItem, {\n    key: c.course.id,\n    onClick: () => setDefaultCourse(c.course)\n  }, __jsx(Link, {\n    href: \"/course/[cid]/today\",\n    as: `/course/${c.course.id}/today`\n  }, __jsx(\"a\", null, c.course.name)))));\n\n  const tabs = [{\n    href: \"/course/[cid]/today\",\n    as: `/course/${courseId}/today`,\n    text: \"Today\"\n  }, {\n    href: \"/course/[cid]/schedule\",\n    as: `/course/${courseId}/schedule`,\n    text: \"Schedule\"\n  }];\n\n  if (queueId) {\n    tabs.push({\n      href: \"/course/[cid]/queue/[qid]\",\n      as: `/course/${courseId}/queue/${queueId}`,\n      text: \"Queue\"\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(NavBG, null), __jsx(Nav, null, __jsx(LogoContainer, null, (profile === null || profile === void 0 ? void 0 : profile.courses.length) > 1 ? __jsx(Dropdown, {\n    overlay: courseSelector,\n    trigger: [\"click\"],\n    placement: \"bottomLeft\"\n  }, __jsx(\"a\", null, __jsx(Logo, null, __jsx(\"span\", null, course === null || course === void 0 ? void 0 : course.name), __jsx(DownOutlined, {\n    style: {\n      fontSize: \"16px\",\n      verticalAlign: \"-0.125em\",\n      marginLeft: \"5px\"\n    }\n  })))) : __jsx(Logo, null, __jsx(\"span\", null, course === null || course === void 0 ? void 0 : course.name))), __jsx(MenuCon, null, __jsx(LeftMenu, null, __jsx(NavBarTabs, {\n    horizontal: true,\n    currentHref: pathname,\n    tabs: tabs\n  })), __jsx(RightMenu, null, __jsx(ProfileDrawer, {\n    courseId: courseId\n  }))), __jsx(BarsMenu, {\n    type: \"primary\",\n    onClick: showDrawer\n  }, __jsx(BarsButton, null)), __jsx(Drawer, {\n    title: \"Course\",\n    placement: \"right\",\n    visible: visible,\n    closable: false,\n    onClose: onClose,\n    bodyStyle: {\n      padding: \"12px\"\n    }\n  }, __jsx(NavBarTabs, {\n    currentHref: pathname,\n    tabs: tabs\n  }), __jsx(ProfileDrawer, {\n    courseId: courseId\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}