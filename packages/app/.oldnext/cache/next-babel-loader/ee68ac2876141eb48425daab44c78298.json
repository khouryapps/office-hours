{"ast":null,"code":"import _wrapNativeSuper from \"@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _temp, _dec2, _class3, _descriptor2, _temp2, _dec3, _dec4, _class5, _descriptor3, _descriptor4, _temp3, _dec5, _dec6, _dec7, _class7, _descriptor5, _descriptor6, _descriptor7, _temp4, _dec8, _dec9, _dec10, _dec11, _dec12, _class9, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _temp5, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _class11, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _temp6, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _class13, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _temp7, _dec29, _dec30, _dec31, _dec32, _class15, _descriptor26, _descriptor27, _descriptor28, _temp8, _dec33, _dec34, _dec35, _dec36, _dec37, _dec38, _dec39, _dec40, _dec41, _dec42, _dec43, _class17, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _temp9, _dec44, _dec45, _class19, _descriptor34, _descriptor35, _temp10, _dec46, _dec47, _dec48, _dec49, _class21, _descriptor36, _descriptor37, _descriptor38, _descriptor39, _temp11, _dec50, _dec51, _dec52, _dec53, _dec54, _dec55, _dec56, _dec57, _dec58, _class23, _descriptor40, _descriptor41, _descriptor42, _descriptor43, _descriptor44, _descriptor45, _temp12, _dec59, _dec60, _dec61, _dec62, _dec63, _dec64, _dec65, _dec66, _dec67, _dec68, _dec69, _dec70, _class25, _descriptor46, _descriptor47, _descriptor48, _descriptor49, _descriptor50, _descriptor51, _temp13, _dec71, _class27, _descriptor52, _temp14, _dec72, _dec73, _dec74, _class29, _descriptor53, _descriptor54, _temp15;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Type } from \"class-transformer\";\nimport { IsBoolean, IsDefined, IsEnum, IsInt, IsNotEmpty, IsOptional, IsString, ValidateIf } from \"class-validator\";\nimport \"reflect-metadata\";\nexport var PROD_URL = \"https://officehours.khoury.northeastern.edu\";\nexport var STAGING_URL = \"https://staging.khouryofficehours.com\"; // Get domain. works on node and browser\n\nvar domain = function domain() {\n  var _window, _window$location;\n\n  return process.env.DOMAIN || true && ((_window = window) === null || _window === void 0 ? void 0 : (_window$location = _window.location) === null || _window$location === void 0 ? void 0 : _window$location.origin);\n};\n\nexport var getEnv = function getEnv() {\n  switch (domain()) {\n    case PROD_URL:\n      return \"production\";\n\n    case STAGING_URL:\n      return \"staging\";\n\n    default:\n      return \"dev\";\n  }\n};\nexport var isProd = function isProd() {\n  return domain() === PROD_URL;\n}; // TODO: Clean this up, move it somwhere else, use moment???\n// a - b, in minutes\n\nexport function timeDiffInMins(a, b) {\n  return (a.getTime() - b.getTime()) / (1000 * 60);\n} /////////////////////////\n// API Base Data Types //\n/////////////////////////\n// NOTE: These are not the DB data types. They are only used for the api\n\n/**\n * Represents a user.\n * @param id - The unique id of the user in our db.\n * @param email - The email string of the user if they provide it (nullable)\n * @param name - The full name of this user: First Last.\n * @param photoURL - The URL string of this user photo. This is pulled from the admin site\n * @param courses - The list of courses that the user is accociated with (as either a 'student', 'ta' or 'professor')\n * @param desktopNotifs - list of endpoints so that frontend can figure out if device is enabled\n */\n\nexport var User = (_dec = Type(function () {\n  return DesktopNotifPartial;\n}), (_class = (_temp = function User() {\n  _classCallCheck(this, User);\n\n  this.id = void 0;\n  this.email = void 0;\n  this.firstName = void 0;\n  this.lastName = void 0;\n  this.name = void 0;\n  this.photoURL = void 0;\n  this.courses = void 0;\n  this.desktopNotifsEnabled = void 0;\n\n  _initializerDefineProperty(this, \"desktopNotifs\", _descriptor, this);\n\n  this.phoneNotifsEnabled = void 0;\n  this.phoneNumber = void 0;\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"desktopNotifs\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));\nexport var DesktopNotifPartial = (_dec2 = Type(function () {\n  return Date;\n}), (_class3 = (_temp2 = function DesktopNotifPartial() {\n  _classCallCheck(this, DesktopNotifPartial);\n\n  this.id = void 0;\n  this.endpoint = void 0;\n  this.name = void 0;\n\n  _initializerDefineProperty(this, \"createdAt\", _descriptor2, this);\n}, _temp2), (_descriptor2 = _applyDecoratedDescriptor(_class3.prototype, \"createdAt\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class3));\n/**\n * Contains the partial user info needed by the frontend when nested in a response\n * @param id - The unique id of the user in our db.\n * @param name - The full name of this user: First Last.\n * @param photoURL - The URL string of this user photo. This is pulled from the admin site\n */\n\nexport var UserPartial = function UserPartial() {\n  _classCallCheck(this, UserPartial);\n\n  this.id = void 0;\n  this.email = void 0;\n  this.name = void 0;\n  this.photoURL = void 0;\n};\n/**\n * Represents a partial course data needed on the front end when nested in a response.\n * @param id - The id number of this Course.\n * @param name - The subject and course number of this course. Ex: \"CS 2500\"\n */\n\n/**\n * Represents one of three possible user roles in a course.\n */\nexport var Role;\n\n(function (Role) {\n  Role[\"STUDENT\"] = \"student\";\n  Role[\"TA\"] = \"ta\";\n  Role[\"PROFESSOR\"] = \"professor\";\n})(Role || (Role = {}));\n\nvar OfficeHourPartial = (_dec3 = Type(function () {\n  return Date;\n}), _dec4 = Type(function () {\n  return Date;\n}), (_class5 = (_temp3 = function OfficeHourPartial() {\n  _classCallCheck(this, OfficeHourPartial);\n\n  this.id = void 0;\n  this.title = void 0;\n\n  _initializerDefineProperty(this, \"startTime\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"endTime\", _descriptor4, this);\n}, _temp3), (_descriptor3 = _applyDecoratedDescriptor(_class5.prototype, \"startTime\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class5.prototype, \"endTime\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class5));\n/**\n * A Queue that students can join with thier tickets.\n * @param id - The unique id number for a Queue.\n * @param course - The course that this office hours queue is for.\n * @param room - The full name of the building + room # that the current office hours queue is in.\n * @param staffList - The list of TA user's that are currently helping at office hours.\n * @param questions - The list of the students questions assocaited with the queue.\n * @param startTime - The scheduled start time of this queue based on the parsed ical.\n * @param endTime - The scheduled end time of this queue.\n */\n\n/**\n * A Queue partial to be shown on the today page.\n * @param id - The unique id number for a Queue.\n * @param room - The full name of the building + room # that the current office hours queue is in.\n * @param staffList - The list of TA user's that are currently helping at office hours.\n * @param startTime - The scheduled start time of this queue based on the parsed ical.\n * @param endTime - The scheduled end time of this queue.\n */\nexport var QueuePartial = (_dec5 = Type(function () {\n  return UserPartial;\n}), _dec6 = Type(function () {\n  return Date;\n}), _dec7 = Type(function () {\n  return Date;\n}), (_class7 = (_temp4 = function QueuePartial() {\n  _classCallCheck(this, QueuePartial);\n\n  this.id = void 0;\n  this.room = void 0;\n\n  _initializerDefineProperty(this, \"staffList\", _descriptor5, this);\n\n  this.queueSize = void 0;\n  this.notes = void 0;\n  this.isOpen = void 0;\n\n  _initializerDefineProperty(this, \"startTime\", _descriptor6, this);\n\n  _initializerDefineProperty(this, \"endTime\", _descriptor7, this);\n\n  this.allowQuestions = void 0;\n  this.isProfessorQueue = void 0;\n}, _temp4), (_descriptor5 = _applyDecoratedDescriptor(_class7.prototype, \"staffList\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class7.prototype, \"startTime\", [_dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class7.prototype, \"endTime\", [_dec7], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class7)); // Represents a list of office hours wait times of each hour of the week.\n// The first element of the array is the wait time for the first hour of Sunday, UTC.\n//   Users of the heatmap should rotate it according to their timezone.\n// INVARIANT: Must have 24*7 elements\n//\n// Wait time = -1 represents no office hours data at that time.\n\n/**\n * A Question is created when a student wants help from a TA.\n * @param id - The unique id number for a student question.\n * @param creator - The Student that has created the question.\n * @param text - The text descritipn of what he/she needs help with.\n * @param createdAt - The date string for the time that the Ticket was created. Ex: \"2020-09-12T12:00:00-04:00\"\n * @param helpedAt - The date string for the time that the TA began helping the Student.\n * @param closedAt - The date string for the time that the TA finished helping the Student.\n * @param questionType - The question type helps distinguish question for TA's and data insights.\n * @param status - The current status of the question in the queue.\n * @param position - The current position of this question in the queue.\n * @param location - The location of the particular student, to help TA's find them\n * @param isOnline - Wether or not the question will helped online or in-person\n */\nexport var Question = (_dec8 = Type(function () {\n  return UserPartial;\n}), _dec9 = Type(function () {\n  return UserPartial;\n}), _dec10 = Type(function () {\n  return Date;\n}), _dec11 = Type(function () {\n  return Date;\n}), _dec12 = Type(function () {\n  return Date;\n}), (_class9 = (_temp5 = function Question() {\n  _classCallCheck(this, Question);\n\n  this.id = void 0;\n\n  _initializerDefineProperty(this, \"creator\", _descriptor8, this);\n\n  this.text = void 0;\n\n  _initializerDefineProperty(this, \"taHelped\", _descriptor9, this);\n\n  _initializerDefineProperty(this, \"createdAt\", _descriptor10, this);\n\n  _initializerDefineProperty(this, \"helpedAt\", _descriptor11, this);\n\n  _initializerDefineProperty(this, \"closedAt\", _descriptor12, this);\n\n  this.questionType = void 0;\n  this.status = void 0;\n  this.location = void 0;\n  this.isOnline = void 0;\n}, _temp5), (_descriptor8 = _applyDecoratedDescriptor(_class9.prototype, \"creator\", [_dec8], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor9 = _applyDecoratedDescriptor(_class9.prototype, \"taHelped\", [_dec9], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor10 = _applyDecoratedDescriptor(_class9.prototype, \"createdAt\", [_dec10], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor11 = _applyDecoratedDescriptor(_class9.prototype, \"helpedAt\", [_dec11], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor12 = _applyDecoratedDescriptor(_class9.prototype, \"closedAt\", [_dec12], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class9)); // Question Types\n\nexport var QuestionType;\n\n(function (QuestionType) {\n  QuestionType[\"Concept\"] = \"Concept\";\n  QuestionType[\"Clarification\"] = \"Clarification\";\n  QuestionType[\"Testing\"] = \"Testing\";\n  QuestionType[\"Bug\"] = \"Bug\";\n  QuestionType[\"Setup\"] = \"Setup\";\n  QuestionType[\"Other\"] = \"Other\";\n})(QuestionType || (QuestionType = {}));\n\nexport var OpenQuestionStatus;\n/**\n * Limbo statuses are awaiting some confirmation from the student\n */\n\n(function (OpenQuestionStatus) {\n  OpenQuestionStatus[\"Drafting\"] = \"Drafting\";\n  OpenQuestionStatus[\"Queued\"] = \"Queued\";\n  OpenQuestionStatus[\"Helping\"] = \"Helping\";\n  OpenQuestionStatus[\"PriorityQueued\"] = \"PriorityQueued\";\n})(OpenQuestionStatus || (OpenQuestionStatus = {}));\n\nexport var LimboQuestionStatus;\n\n(function (LimboQuestionStatus) {\n  LimboQuestionStatus[\"CantFind\"] = \"CantFind\";\n  LimboQuestionStatus[\"ReQueueing\"] = \"ReQueueing\";\n  LimboQuestionStatus[\"TADeleted\"] = \"TADeleted\";\n})(LimboQuestionStatus || (LimboQuestionStatus = {}));\n\nexport var ClosedQuestionStatus;\n\n(function (ClosedQuestionStatus) {\n  ClosedQuestionStatus[\"Resolved\"] = \"Resolved\";\n  ClosedQuestionStatus[\"DeletedDraft\"] = \"DeletedDraft\";\n  ClosedQuestionStatus[\"ConfirmedDeleted\"] = \"ConfirmedDeleted\";\n  ClosedQuestionStatus[\"Stale\"] = \"Stale\";\n})(ClosedQuestionStatus || (ClosedQuestionStatus = {}));\n\nexport var StatusInQueue = [OpenQuestionStatus.Drafting, OpenQuestionStatus.Queued];\nexport var StatusInPriorityQueue = [OpenQuestionStatus.PriorityQueued];\nexport var StatusSentToCreator = [].concat(StatusInPriorityQueue, StatusInQueue, [OpenQuestionStatus.Helping, LimboQuestionStatus.ReQueueing, LimboQuestionStatus.CantFind, LimboQuestionStatus.TADeleted]); // Ticket Status - Represents a given status of as student's ticket\n\n// an Enum-like constant that contains all the statuses for convenience.\nexport var QuestionStatusKeys = _objectSpread(_objectSpread(_objectSpread({}, OpenQuestionStatus), ClosedQuestionStatus), LimboQuestionStatus);\n/**\n * A Semester object, representing a schedule semester term for the purposes of a course.\n * @param season - The season of this semester.\n * @param year - The year of this semester.\n */\n\n// =================== API Route Types ===========================\n// On backend, validated with https://docs.nestjs.com/techniques/validation\n// API route Params and Responses\n// Office Hours Response Types\nexport var GetProfileResponse = /*#__PURE__*/function (_User) {\n  _inherits(GetProfileResponse, _User);\n\n  var _super = _createSuper(GetProfileResponse);\n\n  function GetProfileResponse() {\n    _classCallCheck(this, GetProfileResponse);\n\n    return _super.apply(this, arguments);\n  }\n\n  return GetProfileResponse;\n}(User);\nexport var KhouryDataParams = (_dec13 = IsString(), _dec14 = IsString(), _dec15 = IsString(), _dec16 = IsInt(), _dec17 = IsOptional(), _dec18 = IsString(), _dec19 = IsOptional(), _dec20 = IsDefined(), _dec21 = IsOptional(), _dec22 = IsDefined(), (_class11 = (_temp6 = function KhouryDataParams() {\n  _classCallCheck(this, KhouryDataParams);\n\n  _initializerDefineProperty(this, \"email\", _descriptor13, this);\n\n  _initializerDefineProperty(this, \"first_name\", _descriptor14, this);\n\n  _initializerDefineProperty(this, \"last_name\", _descriptor15, this);\n\n  _initializerDefineProperty(this, \"campus\", _descriptor16, this);\n\n  _initializerDefineProperty(this, \"photo_url\", _descriptor17, this);\n\n  _initializerDefineProperty(this, \"courses\", _descriptor18, this);\n\n  _initializerDefineProperty(this, \"ta_courses\", _descriptor19, this);\n}, _temp6), (_descriptor13 = _applyDecoratedDescriptor(_class11.prototype, \"email\", [_dec13], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor14 = _applyDecoratedDescriptor(_class11.prototype, \"first_name\", [_dec14], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor15 = _applyDecoratedDescriptor(_class11.prototype, \"last_name\", [_dec15], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor16 = _applyDecoratedDescriptor(_class11.prototype, \"campus\", [_dec16], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor17 = _applyDecoratedDescriptor(_class11.prototype, \"photo_url\", [_dec17, _dec18], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor18 = _applyDecoratedDescriptor(_class11.prototype, \"courses\", [_dec19, _dec20], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor19 = _applyDecoratedDescriptor(_class11.prototype, \"ta_courses\", [_dec21, _dec22], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class11));\nexport var KhouryStudentCourse = (_dec23 = IsInt(), _dec24 = IsString(), _dec25 = IsBoolean(), _dec26 = IsInt(), _dec27 = IsString(), _dec28 = IsString(), (_class13 = (_temp7 = function KhouryStudentCourse() {\n  _classCallCheck(this, KhouryStudentCourse);\n\n  _initializerDefineProperty(this, \"crn\", _descriptor20, this);\n\n  _initializerDefineProperty(this, \"course\", _descriptor21, this);\n\n  _initializerDefineProperty(this, \"accelerated\", _descriptor22, this);\n\n  _initializerDefineProperty(this, \"section\", _descriptor23, this);\n\n  _initializerDefineProperty(this, \"semester\", _descriptor24, this);\n\n  _initializerDefineProperty(this, \"title\", _descriptor25, this);\n}, _temp7), (_descriptor20 = _applyDecoratedDescriptor(_class13.prototype, \"crn\", [_dec23], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor21 = _applyDecoratedDescriptor(_class13.prototype, \"course\", [_dec24], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor22 = _applyDecoratedDescriptor(_class13.prototype, \"accelerated\", [_dec25], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor23 = _applyDecoratedDescriptor(_class13.prototype, \"section\", [_dec26], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor24 = _applyDecoratedDescriptor(_class13.prototype, \"semester\", [_dec27], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor25 = _applyDecoratedDescriptor(_class13.prototype, \"title\", [_dec28], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class13));\nexport var KhouryTACourse = (_dec29 = IsString(), _dec30 = IsString(), _dec31 = IsInt(), _dec32 = IsOptional(), (_class15 = (_temp8 = function KhouryTACourse() {\n  _classCallCheck(this, KhouryTACourse);\n\n  _initializerDefineProperty(this, \"course\", _descriptor26, this);\n\n  _initializerDefineProperty(this, \"semester\", _descriptor27, this);\n\n  _initializerDefineProperty(this, \"instructor\", _descriptor28, this);\n}, _temp8), (_descriptor26 = _applyDecoratedDescriptor(_class15.prototype, \"course\", [_dec29], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor27 = _applyDecoratedDescriptor(_class15.prototype, \"semester\", [_dec30], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor28 = _applyDecoratedDescriptor(_class15.prototype, \"instructor\", [_dec31, _dec32], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class15));\nexport var UpdateProfileParams = (_dec33 = IsBoolean(), _dec34 = IsOptional(), _dec35 = IsBoolean(), _dec36 = IsOptional(), _dec37 = ValidateIf(function (o) {\n  return o.phoneNotifsEnabled;\n}), _dec38 = IsString(), _dec39 = IsNotEmpty(), _dec40 = IsString(), _dec41 = IsOptional(), _dec42 = IsString(), _dec43 = IsOptional(), (_class17 = (_temp9 = function UpdateProfileParams() {\n  _classCallCheck(this, UpdateProfileParams);\n\n  _initializerDefineProperty(this, \"desktopNotifsEnabled\", _descriptor29, this);\n\n  _initializerDefineProperty(this, \"phoneNotifsEnabled\", _descriptor30, this);\n\n  _initializerDefineProperty(this, \"phoneNumber\", _descriptor31, this);\n\n  _initializerDefineProperty(this, \"firstName\", _descriptor32, this);\n\n  _initializerDefineProperty(this, \"lastName\", _descriptor33, this);\n}, _temp9), (_descriptor29 = _applyDecoratedDescriptor(_class17.prototype, \"desktopNotifsEnabled\", [_dec33, _dec34], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor30 = _applyDecoratedDescriptor(_class17.prototype, \"phoneNotifsEnabled\", [_dec35, _dec36], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor31 = _applyDecoratedDescriptor(_class17.prototype, \"phoneNumber\", [_dec37, _dec38, _dec39], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor32 = _applyDecoratedDescriptor(_class17.prototype, \"firstName\", [_dec40, _dec41], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor33 = _applyDecoratedDescriptor(_class17.prototype, \"lastName\", [_dec42, _dec43], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class17));\nexport var GetCourseResponse = (_dec44 = Type(function () {\n  return OfficeHourPartial;\n}), _dec45 = Type(function () {\n  return QueuePartial;\n}), (_class19 = (_temp10 = function GetCourseResponse() {\n  _classCallCheck(this, GetCourseResponse);\n\n  this.id = void 0;\n  this.name = void 0;\n\n  _initializerDefineProperty(this, \"officeHours\", _descriptor34, this);\n\n  _initializerDefineProperty(this, \"queues\", _descriptor35, this);\n\n  this.heatmap = void 0;\n}, _temp10), (_descriptor34 = _applyDecoratedDescriptor(_class19.prototype, \"officeHours\", [_dec44], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor35 = _applyDecoratedDescriptor(_class19.prototype, \"queues\", [_dec45], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class19));\nexport var GetQueueResponse = /*#__PURE__*/function (_QueuePartial) {\n  _inherits(GetQueueResponse, _QueuePartial);\n\n  var _super2 = _createSuper(GetQueueResponse);\n\n  function GetQueueResponse() {\n    _classCallCheck(this, GetQueueResponse);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return GetQueueResponse;\n}(QueuePartial);\nexport var GetCourseQueuesResponse = /*#__PURE__*/function (_Array) {\n  _inherits(GetCourseQueuesResponse, _Array);\n\n  var _super3 = _createSuper(GetCourseQueuesResponse);\n\n  function GetCourseQueuesResponse() {\n    _classCallCheck(this, GetCourseQueuesResponse);\n\n    return _super3.apply(this, arguments);\n  }\n\n  return GetCourseQueuesResponse;\n}( /*#__PURE__*/_wrapNativeSuper(Array));\nexport var ListQuestionsResponse = (_dec46 = Type(function () {\n  return Question;\n}), _dec47 = Type(function () {\n  return Question;\n}), _dec48 = Type(function () {\n  return Question;\n}), _dec49 = Type(function () {\n  return Question;\n}), (_class21 = (_temp11 = function ListQuestionsResponse() {\n  _classCallCheck(this, ListQuestionsResponse);\n\n  _initializerDefineProperty(this, \"yourQuestion\", _descriptor36, this);\n\n  _initializerDefineProperty(this, \"questionsGettingHelp\", _descriptor37, this);\n\n  _initializerDefineProperty(this, \"queue\", _descriptor38, this);\n\n  _initializerDefineProperty(this, \"priorityQueue\", _descriptor39, this);\n}, _temp11), (_descriptor36 = _applyDecoratedDescriptor(_class21.prototype, \"yourQuestion\", [_dec46], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor37 = _applyDecoratedDescriptor(_class21.prototype, \"questionsGettingHelp\", [_dec47], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor38 = _applyDecoratedDescriptor(_class21.prototype, \"queue\", [_dec48], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor39 = _applyDecoratedDescriptor(_class21.prototype, \"priorityQueue\", [_dec49], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class21));\nexport var GetQuestionResponse = /*#__PURE__*/function (_Question) {\n  _inherits(GetQuestionResponse, _Question);\n\n  var _super4 = _createSuper(GetQuestionResponse);\n\n  function GetQuestionResponse() {\n    _classCallCheck(this, GetQuestionResponse);\n\n    return _super4.apply(this, arguments);\n  }\n\n  return GetQuestionResponse;\n}(Question);\nexport var CreateQuestionParams = (_dec50 = IsString(), _dec51 = IsEnum(QuestionType), _dec52 = IsOptional(), _dec53 = IsInt(), _dec54 = IsBoolean(), _dec55 = IsOptional(), _dec56 = IsString(), _dec57 = IsOptional(), _dec58 = IsBoolean(), (_class23 = (_temp12 = function CreateQuestionParams() {\n  _classCallCheck(this, CreateQuestionParams);\n\n  _initializerDefineProperty(this, \"text\", _descriptor40, this);\n\n  _initializerDefineProperty(this, \"questionType\", _descriptor41, this);\n\n  _initializerDefineProperty(this, \"queueId\", _descriptor42, this);\n\n  _initializerDefineProperty(this, \"isOnline\", _descriptor43, this);\n\n  _initializerDefineProperty(this, \"location\", _descriptor44, this);\n\n  _initializerDefineProperty(this, \"force\", _descriptor45, this);\n}, _temp12), (_descriptor40 = _applyDecoratedDescriptor(_class23.prototype, \"text\", [_dec50], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor41 = _applyDecoratedDescriptor(_class23.prototype, \"questionType\", [_dec51, _dec52], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor42 = _applyDecoratedDescriptor(_class23.prototype, \"queueId\", [_dec53], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor43 = _applyDecoratedDescriptor(_class23.prototype, \"isOnline\", [_dec54, _dec55], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor44 = _applyDecoratedDescriptor(_class23.prototype, \"location\", [_dec56, _dec57], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor45 = _applyDecoratedDescriptor(_class23.prototype, \"force\", [_dec58], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class23));\nexport var CreateQuestionResponse = /*#__PURE__*/function (_Question2) {\n  _inherits(CreateQuestionResponse, _Question2);\n\n  var _super5 = _createSuper(CreateQuestionResponse);\n\n  function CreateQuestionResponse() {\n    _classCallCheck(this, CreateQuestionResponse);\n\n    return _super5.apply(this, arguments);\n  }\n\n  return CreateQuestionResponse;\n}(Question);\nexport var UpdateQuestionParams = (_dec59 = IsString(), _dec60 = IsOptional(), _dec61 = IsEnum(QuestionType), _dec62 = IsOptional(), _dec63 = IsInt(), _dec64 = IsOptional(), _dec65 = IsEnum(QuestionStatusKeys), _dec66 = IsOptional(), _dec67 = IsBoolean(), _dec68 = IsOptional(), _dec69 = IsString(), _dec70 = IsOptional(), (_class25 = (_temp13 = function UpdateQuestionParams() {\n  _classCallCheck(this, UpdateQuestionParams);\n\n  _initializerDefineProperty(this, \"text\", _descriptor46, this);\n\n  _initializerDefineProperty(this, \"questionType\", _descriptor47, this);\n\n  _initializerDefineProperty(this, \"queueId\", _descriptor48, this);\n\n  _initializerDefineProperty(this, \"status\", _descriptor49, this);\n\n  _initializerDefineProperty(this, \"isOnline\", _descriptor50, this);\n\n  _initializerDefineProperty(this, \"location\", _descriptor51, this);\n}, _temp13), (_descriptor46 = _applyDecoratedDescriptor(_class25.prototype, \"text\", [_dec59, _dec60], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor47 = _applyDecoratedDescriptor(_class25.prototype, \"questionType\", [_dec61, _dec62], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor48 = _applyDecoratedDescriptor(_class25.prototype, \"queueId\", [_dec63, _dec64], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor49 = _applyDecoratedDescriptor(_class25.prototype, \"status\", [_dec65, _dec66], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor50 = _applyDecoratedDescriptor(_class25.prototype, \"isOnline\", [_dec67, _dec68], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor51 = _applyDecoratedDescriptor(_class25.prototype, \"location\", [_dec69, _dec70], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class25));\nexport var UpdateQuestionResponse = /*#__PURE__*/function (_Question3) {\n  _inherits(UpdateQuestionResponse, _Question3);\n\n  var _super6 = _createSuper(UpdateQuestionResponse);\n\n  function UpdateQuestionResponse() {\n    _classCallCheck(this, UpdateQuestionResponse);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return UpdateQuestionResponse;\n}(Question);\nexport var TACheckoutResponse = (_dec71 = Type(function () {\n  return Date;\n}), (_class27 = (_temp14 = function TACheckoutResponse() {\n  _classCallCheck(this, TACheckoutResponse);\n\n  this.queueId = void 0;\n  this.canClearQueue = void 0;\n\n  _initializerDefineProperty(this, \"nextOfficeHourTime\", _descriptor52, this);\n}, _temp14), (_descriptor52 = _applyDecoratedDescriptor(_class27.prototype, \"nextOfficeHourTime\", [_dec71], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class27));\nexport var UpdateQueueParams = (_dec72 = IsString(), _dec73 = IsOptional(), _dec74 = IsBoolean(), (_class29 = (_temp15 = function UpdateQueueParams() {\n  _classCallCheck(this, UpdateQueueParams);\n\n  _initializerDefineProperty(this, \"notes\", _descriptor53, this);\n\n  _initializerDefineProperty(this, \"allowQuestions\", _descriptor54, this);\n}, _temp15), (_descriptor53 = _applyDecoratedDescriptor(_class29.prototype, \"notes\", [_dec72, _dec73], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor54 = _applyDecoratedDescriptor(_class29.prototype, \"allowQuestions\", [_dec74], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class29));\nexport var SSEQueueResponse = function SSEQueueResponse() {\n  _classCallCheck(this, SSEQueueResponse);\n\n  this.queue = void 0;\n  this.questions = void 0;\n};\nexport var ERROR_MESSAGES = {\n  questionController: {\n    createQuestion: {\n      invalidQueue: \"Posted to an invalid queue\",\n      noNewQuestions: \"Queue not allowing new questions\",\n      closedQueue: \"Queue is closed\",\n      oneQuestionAtATime: \"You can't create more than one question at a time.\"\n    },\n    updateQuestion: {\n      fsmViolation: function fsmViolation(role, questionStatus, bodyStatus) {\n        return \"\".concat(role, \" cannot change status from \").concat(questionStatus, \" to \").concat(bodyStatus);\n      },\n      taOnlyEditQuestionStatus: \"TA/Professors can only edit question status\",\n      otherTAHelping: \"Another TA is currently helping with this question\",\n      otherTAResolved: \"Another TA has already resolved this question\",\n      taHelpingOther: \"TA is already helping someone else\",\n      loginUserCantEdit: \"Logged-in user does not have edit access\"\n    }\n  },\n  loginController: {\n    receiveDataFromKhoury: \"Invalid request signature\"\n  },\n  notificationController: {\n    messageNotFromTwilio: \"Message not from Twilio\"\n  },\n  notificationService: {\n    registerPhone: \"phone number invalid\"\n  },\n  questionRoleGuard: {\n    questionNotFound: \"Question not found\",\n    queueOfQuestionNotFound: \"Cannot find queue of question\",\n    queueDoesNotExist: \"This queue does not exist!\"\n  },\n  queueRoleGuard: {\n    queueNotFound: \"Queue not found\"\n  },\n  releaseNotesController: {\n    releaseNotesTime: function releaseNotesTime(e) {\n      return \"Error Parsing release notes time: \" + e;\n    }\n  },\n  roleGuard: {\n    notLoggedIn: \"Must be logged in\",\n    noCourseIdFound: \"No courseid found\",\n    notInCourse: \"Not In This Course\",\n    mustBeRoleToJoinCourse: function mustBeRoleToJoinCourse(roles) {\n      return \"You must have one of roles [\".concat(roles.join(\", \"), \"] to access this course\");\n    }\n  },\n  profileController: {\n    noDiskSpace: \"There is no disk space left to store an image. Please immediately contact your course staff and let them know. They will contact the Khoury Office Hours team as soon as possible.\"\n  }\n};","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/node_modules/@koh/common/index.ts"],"names":["Type","IsBoolean","IsDefined","IsEnum","IsInt","IsNotEmpty","IsOptional","IsString","ValidateIf","PROD_URL","STAGING_URL","domain","process","env","DOMAIN","window","location","origin","getEnv","isProd","timeDiffInMins","a","b","getTime","User","DesktopNotifPartial","id","email","firstName","lastName","name","photoURL","courses","desktopNotifsEnabled","phoneNotifsEnabled","phoneNumber","Date","endpoint","UserPartial","Role","OfficeHourPartial","title","QueuePartial","room","queueSize","notes","isOpen","allowQuestions","isProfessorQueue","Question","text","questionType","status","isOnline","QuestionType","OpenQuestionStatus","LimboQuestionStatus","ClosedQuestionStatus","StatusInQueue","Drafting","Queued","StatusInPriorityQueue","PriorityQueued","StatusSentToCreator","Helping","ReQueueing","CantFind","TADeleted","QuestionStatusKeys","GetProfileResponse","KhouryDataParams","KhouryStudentCourse","KhouryTACourse","UpdateProfileParams","o","GetCourseResponse","heatmap","GetQueueResponse","GetCourseQueuesResponse","Array","ListQuestionsResponse","GetQuestionResponse","CreateQuestionParams","CreateQuestionResponse","UpdateQuestionParams","UpdateQuestionResponse","TACheckoutResponse","queueId","canClearQueue","UpdateQueueParams","SSEQueueResponse","queue","questions","ERROR_MESSAGES","questionController","createQuestion","invalidQueue","noNewQuestions","closedQueue","oneQuestionAtATime","updateQuestion","fsmViolation","role","questionStatus","bodyStatus","taOnlyEditQuestionStatus","otherTAHelping","otherTAResolved","taHelpingOther","loginUserCantEdit","loginController","receiveDataFromKhoury","notificationController","messageNotFromTwilio","notificationService","registerPhone","questionRoleGuard","questionNotFound","queueOfQuestionNotFound","queueDoesNotExist","queueRoleGuard","queueNotFound","releaseNotesController","releaseNotesTime","e","roleGuard","notLoggedIn","noCourseIdFound","notInCourse","mustBeRoleToJoinCourse","roles","join","profileController","noDiskSpace"],"mappings":"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","sourcesContent":["import { Type } from \"class-transformer\";\nimport {\n  IsBoolean,\n  IsDefined,\n  IsEnum,\n  IsInt,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateIf,\n} from \"class-validator\";\nimport \"reflect-metadata\";\n\nexport const PROD_URL = \"https://officehours.khoury.northeastern.edu\";\nexport const STAGING_URL = \"https://staging.khouryofficehours.com\";\n// Get domain. works on node and browser\nconst domain = (): string | false =>\n  process.env.DOMAIN ||\n  (typeof window !== \"undefined\" && window?.location?.origin);\nexport const getEnv = (): \"production\" | \"staging\" | \"dev\" => {\n  switch (domain()) {\n    case PROD_URL:\n      return \"production\";\n    case STAGING_URL:\n      return \"staging\";\n    default:\n      return \"dev\";\n  }\n};\nexport const isProd = (): boolean => domain() === PROD_URL;\n\n// TODO: Clean this up, move it somwhere else, use moment???\n// a - b, in minutes\nexport function timeDiffInMins(a: Date, b: Date): number {\n  return (a.getTime() - b.getTime()) / (1000 * 60);\n}\n\n/////////////////////////\n// API Base Data Types //\n/////////////////////////\n\n// NOTE: These are not the DB data types. They are only used for the api\n\n/**\n * Represents a user.\n * @param id - The unique id of the user in our db.\n * @param email - The email string of the user if they provide it (nullable)\n * @param name - The full name of this user: First Last.\n * @param photoURL - The URL string of this user photo. This is pulled from the admin site\n * @param courses - The list of courses that the user is accociated with (as either a 'student', 'ta' or 'professor')\n * @param desktopNotifs - list of endpoints so that frontend can figure out if device is enabled\n */\nexport class User {\n  id!: number;\n  email!: string;\n  firstName?: string;\n  lastName?: string;\n  name!: string;\n  photoURL!: string;\n  courses!: UserCourse[];\n  desktopNotifsEnabled!: boolean;\n\n  @Type(() => DesktopNotifPartial)\n  desktopNotifs!: DesktopNotifPartial[];\n\n  phoneNotifsEnabled!: boolean;\n  phoneNumber!: string;\n}\n\nexport class DesktopNotifPartial {\n  id!: number;\n  endpoint!: string;\n  name?: string;\n  @Type(() => Date)\n  createdAt!: Date;\n}\n\n/**\n * Contains the partial user info needed by the frontend when nested in a response\n * @param id - The unique id of the user in our db.\n * @param name - The full name of this user: First Last.\n * @param photoURL - The URL string of this user photo. This is pulled from the admin site\n */\nexport class UserPartial {\n  id!: number;\n  email?: string;\n  name?: string;\n  photoURL?: string;\n}\n\n/**\n * Represents a partial course data needed on the front end when nested in a response.\n * @param id - The id number of this Course.\n * @param name - The subject and course number of this course. Ex: \"CS 2500\"\n */\nexport type CoursePartial = {\n  id: number;\n  name: string;\n};\n\n/**\n * Represents a course that a user is accociated with and their role in that course\n * @param course - The course the user accociated with.\n * @param role - The user's role in the course.\n */\nexport type UserCourse = {\n  course: CoursePartial;\n  role: Role;\n};\n\n/**\n * Represents one of three possible user roles in a course.\n */\nexport enum Role {\n  STUDENT = \"student\",\n  TA = \"ta\",\n  PROFESSOR = \"professor\",\n}\n\nclass OfficeHourPartial {\n  id!: number;\n  title!: string;\n\n  @Type(() => Date)\n  startTime!: Date;\n\n  @Type(() => Date)\n  endTime!: Date;\n}\n\n/**\n * A Queue that students can join with thier tickets.\n * @param id - The unique id number for a Queue.\n * @param course - The course that this office hours queue is for.\n * @param room - The full name of the building + room # that the current office hours queue is in.\n * @param staffList - The list of TA user's that are currently helping at office hours.\n * @param questions - The list of the students questions assocaited with the queue.\n * @param startTime - The scheduled start time of this queue based on the parsed ical.\n * @param endTime - The scheduled end time of this queue.\n */\nexport interface Queue {\n  id: number;\n  course: CoursePartial;\n  room: string;\n  staffList: UserPartial[];\n  questions: Question[];\n  startTime?: Date;\n  endTime?: Date;\n  allowQuestions: boolean;\n}\n\n/**\n * A Queue partial to be shown on the today page.\n * @param id - The unique id number for a Queue.\n * @param room - The full name of the building + room # that the current office hours queue is in.\n * @param staffList - The list of TA user's that are currently helping at office hours.\n * @param startTime - The scheduled start time of this queue based on the parsed ical.\n * @param endTime - The scheduled end time of this queue.\n */\nexport class QueuePartial {\n  id!: number;\n  room!: string;\n\n  @Type(() => UserPartial)\n  staffList!: UserPartial[];\n\n  queueSize!: number;\n  notes?: string;\n  isOpen!: boolean;\n\n  @Type(() => Date)\n  startTime?: Date;\n\n  @Type(() => Date)\n  endTime?: Date;\n\n  allowQuestions!: boolean;\n\n  isProfessorQueue!: boolean;\n}\n\n// Represents a list of office hours wait times of each hour of the week.\n// The first element of the array is the wait time for the first hour of Sunday, UTC.\n//   Users of the heatmap should rotate it according to their timezone.\n// INVARIANT: Must have 24*7 elements\n//\n// Wait time = -1 represents no office hours data at that time.\nexport type Heatmap = Array<number>;\n\n/**\n * A Question is created when a student wants help from a TA.\n * @param id - The unique id number for a student question.\n * @param creator - The Student that has created the question.\n * @param text - The text descritipn of what he/she needs help with.\n * @param createdAt - The date string for the time that the Ticket was created. Ex: \"2020-09-12T12:00:00-04:00\"\n * @param helpedAt - The date string for the time that the TA began helping the Student.\n * @param closedAt - The date string for the time that the TA finished helping the Student.\n * @param questionType - The question type helps distinguish question for TA's and data insights.\n * @param status - The current status of the question in the queue.\n * @param position - The current position of this question in the queue.\n * @param location - The location of the particular student, to help TA's find them\n * @param isOnline - Wether or not the question will helped online or in-person\n */\nexport class Question {\n  id!: number;\n\n  @Type(() => UserPartial)\n  creator!: UserPartial;\n  text?: string;\n\n  @Type(() => UserPartial)\n  taHelped?: UserPartial;\n\n  @Type(() => Date)\n  createdAt!: Date;\n\n  @Type(() => Date)\n  helpedAt?: Date;\n\n  @Type(() => Date)\n  closedAt?: Date;\n  questionType?: QuestionType;\n  status!: QuestionStatus;\n  location?: string;\n  isOnline?: boolean;\n}\n\n// Question Types\nexport enum QuestionType {\n  Concept = \"Concept\",\n  Clarification = \"Clarification\",\n  Testing = \"Testing\",\n  Bug = \"Bug\",\n  Setup = \"Setup\",\n  Other = \"Other\",\n}\n\nexport enum OpenQuestionStatus {\n  Drafting = \"Drafting\",\n  Queued = \"Queued\",\n  Helping = \"Helping\",\n  PriorityQueued = \"PriorityQueued\",\n}\n\n/**\n * Limbo statuses are awaiting some confirmation from the student\n */\nexport enum LimboQuestionStatus {\n  CantFind = \"CantFind\", // represents when a student can't be found by a TA\n  ReQueueing = \"ReQueueing\", // represents when a TA wants to get back to a student later and give them the option to be put into the priority queue\n  TADeleted = \"TADeleted\", // When a TA deletes a question for a multitude of reasons\n}\n\nexport enum ClosedQuestionStatus {\n  Resolved = \"Resolved\",\n  DeletedDraft = \"DeletedDraft\",\n  ConfirmedDeleted = \"ConfirmedDeleted\",\n  Stale = \"Stale\",\n}\n\nexport const StatusInQueue = [\n  OpenQuestionStatus.Drafting,\n  OpenQuestionStatus.Queued,\n];\n\nexport const StatusInPriorityQueue = [OpenQuestionStatus.PriorityQueued];\n\nexport const StatusSentToCreator = [\n  ...StatusInPriorityQueue,\n  ...StatusInQueue,\n  OpenQuestionStatus.Helping,\n  LimboQuestionStatus.ReQueueing,\n  LimboQuestionStatus.CantFind,\n  LimboQuestionStatus.TADeleted,\n];\n\n// Ticket Status - Represents a given status of as student's ticket\nexport type QuestionStatus = keyof typeof QuestionStatusKeys;\n// an Enum-like constant that contains all the statuses for convenience.\nexport const QuestionStatusKeys = {\n  ...OpenQuestionStatus,\n  ...ClosedQuestionStatus,\n  ...LimboQuestionStatus,\n};\n\n/**\n * A Semester object, representing a schedule semester term for the purposes of a course.\n * @param season - The season of this semester.\n * @param year - The year of this semester.\n */\ninterface Semester {\n  season: Season;\n  year: number;\n}\n\n/**\n * Represents one of the seasons in which a course can take place.\n */\nexport type Season = \"Fall\" | \"Spring\" | \"Summer 1\" | \"Summer 2\";\n\nexport type DesktopNotifBody = {\n  endpoint: string;\n  expirationTime?: number;\n  keys: {\n    p256dh: string;\n    auth: string;\n  };\n  name?: string;\n};\n\nexport type PhoneNotifBody = {\n  phoneNumber: string;\n};\n\n// =================== API Route Types ===========================\n// On backend, validated with https://docs.nestjs.com/techniques/validation\n// API route Params and Responses\n\n// Office Hours Response Types\nexport class GetProfileResponse extends User {}\n\nexport class KhouryDataParams {\n  @IsString()\n  email!: string;\n\n  @IsString()\n  first_name!: string;\n\n  @IsString()\n  last_name!: string;\n\n  @IsInt()\n  campus!: string;\n\n  @IsOptional()\n  @IsString()\n  photo_url!: string;\n\n  @IsOptional()\n  @IsDefined() // TODO: use ValidateNested instead, for some reason it's crunked\n  courses!: KhouryStudentCourse[];\n\n  @IsOptional()\n  @IsDefined() // TODO: use ValidateNested instead, for some reason it's crunked\n  ta_courses!: KhouryTACourse[];\n}\n\nexport class KhouryStudentCourse {\n  @IsInt()\n  crn!: number;\n\n  @IsString()\n  course!: string;\n\n  @IsBoolean()\n  accelerated!: boolean;\n\n  @IsInt()\n  section!: number;\n\n  @IsString()\n  semester!: string;\n\n  @IsString()\n  title!: string;\n}\n\nexport class KhouryTACourse {\n  @IsString()\n  course!: string;\n\n  @IsString()\n  semester!: string;\n\n  @IsInt()\n  @IsOptional()\n  instructor!: number;\n}\n\nexport interface KhouryRedirectResponse {\n  redirect: string;\n}\n\nexport class UpdateProfileParams {\n  @IsBoolean()\n  @IsOptional()\n  desktopNotifsEnabled?: boolean;\n\n  @IsBoolean()\n  @IsOptional()\n  phoneNotifsEnabled?: boolean;\n\n  @ValidateIf((o) => o.phoneNotifsEnabled)\n  @IsString()\n  @IsNotEmpty()\n  phoneNumber?: string;\n\n  @IsString()\n  @IsOptional()\n  firstName?: string;\n\n  @IsString()\n  @IsOptional()\n  lastName?: string;\n}\n\nexport class GetCourseResponse {\n  id!: number;\n  name!: string;\n\n  @Type(() => OfficeHourPartial)\n  officeHours!: Array<OfficeHourPartial>;\n\n  @Type(() => QueuePartial)\n  queues!: QueuePartial[];\n\n  heatmap!: Heatmap | false;\n}\n\nexport class GetQueueResponse extends QueuePartial {}\n\nexport class GetCourseQueuesResponse extends Array<QueuePartial> {}\n\nexport class ListQuestionsResponse {\n  @Type(() => Question)\n  yourQuestion?: Question;\n\n  @Type(() => Question)\n  questionsGettingHelp!: Array<Question>;\n\n  @Type(() => Question)\n  queue!: Array<Question>;\n\n  @Type(() => Question)\n  priorityQueue!: Array<Question>;\n}\n\nexport class GetQuestionResponse extends Question {}\n\nexport class CreateQuestionParams {\n  @IsString()\n  text!: string;\n\n  @IsEnum(QuestionType)\n  @IsOptional()\n  questionType?: QuestionType;\n\n  @IsInt()\n  queueId!: number;\n\n  @IsBoolean()\n  @IsOptional()\n  isOnline?: boolean;\n\n  @IsString()\n  @IsOptional()\n  location?: string;\n\n  @IsBoolean()\n  force!: boolean;\n}\nexport class CreateQuestionResponse extends Question {}\n\nexport class UpdateQuestionParams {\n  @IsString()\n  @IsOptional()\n  text?: string;\n\n  @IsEnum(QuestionType)\n  @IsOptional()\n  questionType?: QuestionType;\n\n  @IsInt()\n  @IsOptional()\n  queueId?: number;\n\n  @IsEnum(QuestionStatusKeys)\n  @IsOptional()\n  status?: QuestionStatus;\n\n  @IsBoolean()\n  @IsOptional()\n  isOnline?: boolean;\n\n  @IsString()\n  @IsOptional()\n  location?: string;\n}\nexport class UpdateQuestionResponse extends Question {}\n\nexport type TAUpdateStatusResponse = QueuePartial;\nexport type QueueNotePayloadType = {\n  notes: string;\n};\n\nexport class TACheckoutResponse {\n  // The ID of the queue we checked out of\n  queueId!: number;\n  canClearQueue!: boolean;\n\n  @Type(() => Date)\n  nextOfficeHourTime?: Date;\n}\n\nexport class UpdateQueueParams {\n  @IsString()\n  @IsOptional()\n  notes?: string;\n\n  @IsBoolean()\n  allowQuestions?: boolean;\n}\n\nexport class SSEQueueResponse {\n  queue?: GetQueueResponse;\n  questions?: ListQuestionsResponse;\n}\n\nexport interface TwilioBody {\n  ToCountry: string;\n  ToState: string;\n  SmsMessageSid: string;\n  NumMedia: string;\n  ToCity: string;\n  FromZip: string;\n  SmsSid: string;\n  FromState: string;\n  SmsStatus: string;\n  FromCity: string;\n  Body: string;\n  FromCountry: string;\n  To: string;\n  ToZip: string;\n  NumSegments: string;\n  MessageSid: string;\n  AccountSid: string;\n  From: string;\n  ApiVersion: string;\n}\n\nexport interface GetReleaseNotesResponse {\n  releaseNotes: unknown;\n  lastUpdatedUnixTime: number;\n}\n\nexport const ERROR_MESSAGES = {\n  questionController: {\n    createQuestion: {\n      invalidQueue: \"Posted to an invalid queue\",\n      noNewQuestions: \"Queue not allowing new questions\",\n      closedQueue: \"Queue is closed\",\n      oneQuestionAtATime: \"You can't create more than one question at a time.\",\n    },\n    updateQuestion: {\n      fsmViolation: (\n        role: string,\n        questionStatus: string,\n        bodyStatus: string\n      ): string =>\n        `${role} cannot change status from ${questionStatus} to ${bodyStatus}`,\n      taOnlyEditQuestionStatus: \"TA/Professors can only edit question status\",\n      otherTAHelping: \"Another TA is currently helping with this question\",\n      otherTAResolved: \"Another TA has already resolved this question\",\n      taHelpingOther: \"TA is already helping someone else\",\n      loginUserCantEdit: \"Logged-in user does not have edit access\",\n    },\n  },\n  loginController: {\n    receiveDataFromKhoury: \"Invalid request signature\",\n  },\n  notificationController: {\n    messageNotFromTwilio: \"Message not from Twilio\",\n  },\n  notificationService: {\n    registerPhone: \"phone number invalid\",\n  },\n  questionRoleGuard: {\n    questionNotFound: \"Question not found\",\n    queueOfQuestionNotFound: \"Cannot find queue of question\",\n    queueDoesNotExist: \"This queue does not exist!\",\n  },\n  queueRoleGuard: {\n    queueNotFound: \"Queue not found\",\n  },\n  releaseNotesController: {\n    releaseNotesTime: (e: any): string =>\n      \"Error Parsing release notes time: \" + e,\n  },\n  roleGuard: {\n    notLoggedIn: \"Must be logged in\",\n    noCourseIdFound: \"No courseid found\",\n    notInCourse: \"Not In This Course\",\n    mustBeRoleToJoinCourse: (roles: string[]): string =>\n      `You must have one of roles [${roles.join(\", \")}] to access this course`,\n  },\n  profileController: {\n    noDiskSpace:\n      \"There is no disk space left to store an image. Please immediately contact your course staff and let them know. They will contact the Khoury Office Hours team as soon as possible.\",\n  },\n};\n"]},"metadata":{},"sourceType":"module"}