{"ast":null,"code":"var _dec, _class, _descriptor, _temp, _dec2, _class3, _descriptor2, _temp2, _dec3, _dec4, _class5, _descriptor3, _descriptor4, _temp3, _dec5, _dec6, _dec7, _class7, _descriptor5, _descriptor6, _descriptor7, _temp4, _dec8, _dec9, _dec10, _dec11, _dec12, _class9, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _temp5, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _class11, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _temp6, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _class13, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _temp7, _dec31, _dec32, _class15, _descriptor27, _descriptor28, _temp8, _dec33, _dec34, _dec35, _dec36, _dec37, _dec38, _dec39, _dec40, _dec41, _dec42, _dec43, _class17, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _temp9, _dec44, _dec45, _class19, _descriptor34, _descriptor35, _temp10, _dec46, _dec47, _dec48, _dec49, _class21, _descriptor36, _descriptor37, _descriptor38, _descriptor39, _temp11, _dec50, _dec51, _dec52, _dec53, _dec54, _dec55, _dec56, _dec57, _dec58, _class23, _descriptor40, _descriptor41, _descriptor42, _descriptor43, _descriptor44, _descriptor45, _temp12, _dec59, _dec60, _dec61, _dec62, _dec63, _dec64, _dec65, _dec66, _dec67, _dec68, _dec69, _dec70, _class25, _descriptor46, _descriptor47, _descriptor48, _descriptor49, _descriptor50, _descriptor51, _temp13, _dec71, _class27, _descriptor52, _temp14, _dec72, _dec73, _dec74, _class29, _descriptor53, _descriptor54, _temp15;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }\n\nfunction _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }\n\nimport { Type } from \"class-transformer\";\nimport { IsBoolean, IsDefined, IsEnum, IsInt, IsNotEmpty, IsOptional, IsString, ValidateIf } from \"class-validator\";\nimport \"reflect-metadata\";\nexport const PROD_URL = \"https://khouryofficehours.com\";\nexport const isProd = () => {\n  var _window, _window$location;\n\n  return process.env.DOMAIN === PROD_URL || false && ((_window = window) === null || _window === void 0 ? void 0 : (_window$location = _window.location) === null || _window$location === void 0 ? void 0 : _window$location.origin) === PROD_URL;\n}; // TODO: Clean this up, move it somwhere else, use moment???\n// a - b, in minutes\n\nexport function timeDiffInMins(a, b) {\n  return (a.getTime() - b.getTime()) / (1000 * 60);\n} /////////////////////////\n// API Base Data Types //\n/////////////////////////\n// NOTE: These are not the DB data types. They are only used for the api\n\n/**\n * Represents a user.\n * @param id - The unique id of the user in our db.\n * @param email - The email string of the user if they provide it (nullable)\n * @param name - The full name of this user: First Last.\n * @param photoURL - The URL string of this user photo. This is pulled from the admin site\n * @param courses - The list of courses that the user is accociated with (as either a 'student', 'ta' or 'professor')\n * @param desktopNotifs - list of endpoints so that frontend can figure out if device is enabled\n */\n\nexport let User = (_dec = Type(() => DesktopNotifPartial), (_class = (_temp = class User {\n  constructor() {\n    this.id = void 0;\n    this.email = void 0;\n    this.firstName = void 0;\n    this.lastName = void 0;\n    this.name = void 0;\n    this.photoURL = void 0;\n    this.courses = void 0;\n    this.desktopNotifsEnabled = void 0;\n\n    _initializerDefineProperty(this, \"desktopNotifs\", _descriptor, this);\n\n    this.phoneNotifsEnabled = void 0;\n    this.phoneNumber = void 0;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"desktopNotifs\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class));\nexport let DesktopNotifPartial = (_dec2 = Type(() => Date), (_class3 = (_temp2 = class DesktopNotifPartial {\n  constructor() {\n    this.id = void 0;\n    this.endpoint = void 0;\n    this.name = void 0;\n\n    _initializerDefineProperty(this, \"createdAt\", _descriptor2, this);\n  }\n\n}, _temp2), (_descriptor2 = _applyDecoratedDescriptor(_class3.prototype, \"createdAt\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class3));\n/**\n * Contains the partial user info needed by the frontend when nested in a response\n * @param id - The unique id of the user in our db.\n * @param name - The full name of this user: First Last.\n * @param photoURL - The URL string of this user photo. This is pulled from the admin site\n */\n\nexport class UserPartial {\n  constructor() {\n    this.id = void 0;\n    this.email = void 0;\n    this.name = void 0;\n    this.photoURL = void 0;\n  }\n\n}\n/**\n * Represents a partial course data needed on the front end when nested in a response.\n * @param id - The id number of this Course.\n * @param name - The subject and course number of this course. Ex: \"CS 2500\"\n */\n\n/**\n * Represents one of three possible user roles in a course.\n */\nexport let Role;\n\n(function (Role) {\n  Role[\"STUDENT\"] = \"student\";\n  Role[\"TA\"] = \"ta\";\n  Role[\"PROFESSOR\"] = \"professor\";\n})(Role || (Role = {}));\n\nlet OfficeHourPartial = (_dec3 = Type(() => Date), _dec4 = Type(() => Date), (_class5 = (_temp3 = class OfficeHourPartial {\n  constructor() {\n    this.id = void 0;\n    this.title = void 0;\n\n    _initializerDefineProperty(this, \"startTime\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"endTime\", _descriptor4, this);\n  }\n\n}, _temp3), (_descriptor3 = _applyDecoratedDescriptor(_class5.prototype, \"startTime\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class5.prototype, \"endTime\", [_dec4], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class5));\n/**\n * A Queue that students can join with thier tickets.\n * @param id - The unique id number for a Queue.\n * @param course - The course that this office hours queue is for.\n * @param room - The full name of the building + room # that the current office hours queue is in.\n * @param staffList - The list of TA user's that are currently helping at office hours.\n * @param questions - The list of the students questions assocaited with the queue.\n * @param startTime - The scheduled start time of this queue based on the parsed ical.\n * @param endTime - The scheduled end time of this queue.\n */\n\n/**\n * A Queue partial to be shown on the today page.\n * @param id - The unique id number for a Queue.\n * @param room - The full name of the building + room # that the current office hours queue is in.\n * @param staffList - The list of TA user's that are currently helping at office hours.\n * @param startTime - The scheduled start time of this queue based on the parsed ical.\n * @param endTime - The scheduled end time of this queue.\n */\nexport let QueuePartial = (_dec5 = Type(() => UserPartial), _dec6 = Type(() => Date), _dec7 = Type(() => Date), (_class7 = (_temp4 = class QueuePartial {\n  constructor() {\n    this.id = void 0;\n    this.room = void 0;\n\n    _initializerDefineProperty(this, \"staffList\", _descriptor5, this);\n\n    this.queueSize = void 0;\n    this.notes = void 0;\n    this.isOpen = void 0;\n\n    _initializerDefineProperty(this, \"startTime\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"endTime\", _descriptor7, this);\n\n    this.allowQuestions = void 0;\n  }\n\n}, _temp4), (_descriptor5 = _applyDecoratedDescriptor(_class7.prototype, \"staffList\", [_dec5], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor6 = _applyDecoratedDescriptor(_class7.prototype, \"startTime\", [_dec6], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor7 = _applyDecoratedDescriptor(_class7.prototype, \"endTime\", [_dec7], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class7)); // Represents a list of office hours wait times of each hour of the week.\n// The first element of the array is the wait time for the first hour of Sunday, UTC.\n//   Users of the heatmap should rotate it according to their timezone.\n// INVARIANT: Must have 24*7 elements\n//\n// Wait time = -1 represents no office hours data at that time.\n\n/**\n * A Question is created when a student wants help from a TA.\n * @param id - The unique id number for a student question.\n * @param creator - The Student that has created the question.\n * @param text - The text descritipn of what he/she needs help with.\n * @param createdAt - The date string for the time that the Ticket was created. Ex: \"2020-09-12T12:00:00-04:00\"\n * @param helpedAt - The date string for the time that the TA began helping the Student.\n * @param closedAt - The date string for the time that the TA finished helping the Student.\n * @param questionType - The question type helps distinguish question for TA's and data insights.\n * @param status - The current status of the question in the queue.\n * @param position - The current position of this question in the queue.\n * @param location - The location of the particular student, to help TA's find them\n * @param isOnline - Wether or not the question will helped online or in-person\n */\nexport let Question = (_dec8 = Type(() => UserPartial), _dec9 = Type(() => UserPartial), _dec10 = Type(() => Date), _dec11 = Type(() => Date), _dec12 = Type(() => Date), (_class9 = (_temp5 = class Question {\n  constructor() {\n    this.id = void 0;\n\n    _initializerDefineProperty(this, \"creator\", _descriptor8, this);\n\n    this.text = void 0;\n\n    _initializerDefineProperty(this, \"taHelped\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"createdAt\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"helpedAt\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"closedAt\", _descriptor12, this);\n\n    this.questionType = void 0;\n    this.status = void 0;\n    this.location = void 0;\n    this.isOnline = void 0;\n  }\n\n}, _temp5), (_descriptor8 = _applyDecoratedDescriptor(_class9.prototype, \"creator\", [_dec8], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor9 = _applyDecoratedDescriptor(_class9.prototype, \"taHelped\", [_dec9], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor10 = _applyDecoratedDescriptor(_class9.prototype, \"createdAt\", [_dec10], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor11 = _applyDecoratedDescriptor(_class9.prototype, \"helpedAt\", [_dec11], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor12 = _applyDecoratedDescriptor(_class9.prototype, \"closedAt\", [_dec12], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class9)); // Question Types\n\nexport let QuestionType;\n\n(function (QuestionType) {\n  QuestionType[\"Concept\"] = \"Concept\";\n  QuestionType[\"Clarification\"] = \"Clarification\";\n  QuestionType[\"Testing\"] = \"Testing\";\n  QuestionType[\"Bug\"] = \"Bug\";\n  QuestionType[\"Setup\"] = \"Setup\";\n  QuestionType[\"Other\"] = \"Other\";\n})(QuestionType || (QuestionType = {}));\n\nexport let OpenQuestionStatus;\n/**\n * Limbo statuses are awaiting some confirmation from the student\n */\n\n(function (OpenQuestionStatus) {\n  OpenQuestionStatus[\"Drafting\"] = \"Drafting\";\n  OpenQuestionStatus[\"Queued\"] = \"Queued\";\n  OpenQuestionStatus[\"Helping\"] = \"Helping\";\n  OpenQuestionStatus[\"PriorityQueued\"] = \"PriorityQueued\";\n})(OpenQuestionStatus || (OpenQuestionStatus = {}));\n\nexport let LimboQuestionStatus;\n\n(function (LimboQuestionStatus) {\n  LimboQuestionStatus[\"CantFind\"] = \"CantFind\";\n  LimboQuestionStatus[\"ReQueueing\"] = \"ReQueueing\";\n  LimboQuestionStatus[\"TADeleted\"] = \"TADeleted\";\n})(LimboQuestionStatus || (LimboQuestionStatus = {}));\n\nexport let ClosedQuestionStatus;\n\n(function (ClosedQuestionStatus) {\n  ClosedQuestionStatus[\"Resolved\"] = \"Resolved\";\n  ClosedQuestionStatus[\"DeletedDraft\"] = \"DeletedDraft\";\n  ClosedQuestionStatus[\"ConfirmedDeleted\"] = \"ConfirmedDeleted\";\n  ClosedQuestionStatus[\"Stale\"] = \"Stale\";\n})(ClosedQuestionStatus || (ClosedQuestionStatus = {}));\n\nexport const StatusInQueue = [OpenQuestionStatus.Drafting, OpenQuestionStatus.Queued];\nexport const StatusInPriorityQueue = [OpenQuestionStatus.PriorityQueued];\nexport const StatusSentToCreator = [...StatusInPriorityQueue, ...StatusInQueue, OpenQuestionStatus.Helping, LimboQuestionStatus.ReQueueing, LimboQuestionStatus.CantFind, LimboQuestionStatus.TADeleted]; // Ticket Status - Represents a given status of as student's ticket\n\n// an Enum-like constant that contains all the statuses for convenience.\nexport const QuestionStatusKeys = _objectSpread(_objectSpread(_objectSpread({}, OpenQuestionStatus), ClosedQuestionStatus), LimboQuestionStatus);\n/**\n * A Semester object, representing a schedule semester term for the purposes of a course.\n * @param season - The season of this semester.\n * @param year - The year of this semester.\n */\n\n// =================== API Route Types ===========================\n// On backend, validated with https://docs.nestjs.com/techniques/validation\n// API route Params and Responses\n// Office Hours Response Types\nexport class GetProfileResponse extends User {}\nexport let KhouryDataParams = (_dec13 = IsString(), _dec14 = IsString(), _dec15 = IsString(), _dec16 = IsInt(), _dec17 = IsInt(), _dec18 = IsOptional(), _dec19 = IsOptional(), _dec20 = IsString(), _dec21 = IsOptional(), _dec22 = IsDefined(), _dec23 = IsOptional(), _dec24 = IsDefined(), (_class11 = (_temp6 = class KhouryDataParams {\n  constructor() {\n    _initializerDefineProperty(this, \"email\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"first_name\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"last_name\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"campus\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"professor\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"photo_url\", _descriptor18, this);\n\n    _initializerDefineProperty(this, \"courses\", _descriptor19, this);\n\n    _initializerDefineProperty(this, \"ta_courses\", _descriptor20, this);\n  }\n\n}, _temp6), (_descriptor13 = _applyDecoratedDescriptor(_class11.prototype, \"email\", [_dec13], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor14 = _applyDecoratedDescriptor(_class11.prototype, \"first_name\", [_dec14], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor15 = _applyDecoratedDescriptor(_class11.prototype, \"last_name\", [_dec15], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor16 = _applyDecoratedDescriptor(_class11.prototype, \"campus\", [_dec16], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor17 = _applyDecoratedDescriptor(_class11.prototype, \"professor\", [_dec17, _dec18], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor18 = _applyDecoratedDescriptor(_class11.prototype, \"photo_url\", [_dec19, _dec20], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor19 = _applyDecoratedDescriptor(_class11.prototype, \"courses\", [_dec21, _dec22], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor20 = _applyDecoratedDescriptor(_class11.prototype, \"ta_courses\", [_dec23, _dec24], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class11));\nexport let KhouryStudentCourse = (_dec25 = IsInt(), _dec26 = IsString(), _dec27 = IsBoolean(), _dec28 = IsInt(), _dec29 = IsString(), _dec30 = IsString(), (_class13 = (_temp7 = class KhouryStudentCourse {\n  constructor() {\n    _initializerDefineProperty(this, \"crn\", _descriptor21, this);\n\n    _initializerDefineProperty(this, \"course\", _descriptor22, this);\n\n    _initializerDefineProperty(this, \"accelerated\", _descriptor23, this);\n\n    _initializerDefineProperty(this, \"section\", _descriptor24, this);\n\n    _initializerDefineProperty(this, \"semester\", _descriptor25, this);\n\n    _initializerDefineProperty(this, \"title\", _descriptor26, this);\n  }\n\n}, _temp7), (_descriptor21 = _applyDecoratedDescriptor(_class13.prototype, \"crn\", [_dec25], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor22 = _applyDecoratedDescriptor(_class13.prototype, \"course\", [_dec26], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor23 = _applyDecoratedDescriptor(_class13.prototype, \"accelerated\", [_dec27], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor24 = _applyDecoratedDescriptor(_class13.prototype, \"section\", [_dec28], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor25 = _applyDecoratedDescriptor(_class13.prototype, \"semester\", [_dec29], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor26 = _applyDecoratedDescriptor(_class13.prototype, \"title\", [_dec30], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class13));\nexport let KhouryTACourse = (_dec31 = IsString(), _dec32 = IsString(), (_class15 = (_temp8 = class KhouryTACourse {\n  constructor() {\n    _initializerDefineProperty(this, \"course\", _descriptor27, this);\n\n    _initializerDefineProperty(this, \"semester\", _descriptor28, this);\n  }\n\n}, _temp8), (_descriptor27 = _applyDecoratedDescriptor(_class15.prototype, \"course\", [_dec31], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor28 = _applyDecoratedDescriptor(_class15.prototype, \"semester\", [_dec32], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class15));\nexport let UpdateProfileParams = (_dec33 = IsBoolean(), _dec34 = IsOptional(), _dec35 = IsBoolean(), _dec36 = IsOptional(), _dec37 = ValidateIf(o => o.phoneNotifsEnabled), _dec38 = IsString(), _dec39 = IsNotEmpty(), _dec40 = IsString(), _dec41 = IsOptional(), _dec42 = IsString(), _dec43 = IsOptional(), (_class17 = (_temp9 = class UpdateProfileParams {\n  constructor() {\n    _initializerDefineProperty(this, \"desktopNotifsEnabled\", _descriptor29, this);\n\n    _initializerDefineProperty(this, \"phoneNotifsEnabled\", _descriptor30, this);\n\n    _initializerDefineProperty(this, \"phoneNumber\", _descriptor31, this);\n\n    _initializerDefineProperty(this, \"firstName\", _descriptor32, this);\n\n    _initializerDefineProperty(this, \"lastName\", _descriptor33, this);\n  }\n\n}, _temp9), (_descriptor29 = _applyDecoratedDescriptor(_class17.prototype, \"desktopNotifsEnabled\", [_dec33, _dec34], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor30 = _applyDecoratedDescriptor(_class17.prototype, \"phoneNotifsEnabled\", [_dec35, _dec36], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor31 = _applyDecoratedDescriptor(_class17.prototype, \"phoneNumber\", [_dec37, _dec38, _dec39], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor32 = _applyDecoratedDescriptor(_class17.prototype, \"firstName\", [_dec40, _dec41], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor33 = _applyDecoratedDescriptor(_class17.prototype, \"lastName\", [_dec42, _dec43], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class17));\nexport let GetCourseResponse = (_dec44 = Type(() => OfficeHourPartial), _dec45 = Type(() => QueuePartial), (_class19 = (_temp10 = class GetCourseResponse {\n  constructor() {\n    this.id = void 0;\n    this.name = void 0;\n\n    _initializerDefineProperty(this, \"officeHours\", _descriptor34, this);\n\n    _initializerDefineProperty(this, \"queues\", _descriptor35, this);\n\n    this.heatmap = void 0;\n  }\n\n}, _temp10), (_descriptor34 = _applyDecoratedDescriptor(_class19.prototype, \"officeHours\", [_dec44], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor35 = _applyDecoratedDescriptor(_class19.prototype, \"queues\", [_dec45], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class19));\nexport class GetQueueResponse extends QueuePartial {}\nexport class GetCourseQueuesResponse extends Array {}\nexport let ListQuestionsResponse = (_dec46 = Type(() => Question), _dec47 = Type(() => Question), _dec48 = Type(() => Question), _dec49 = Type(() => Question), (_class21 = (_temp11 = class ListQuestionsResponse {\n  constructor() {\n    _initializerDefineProperty(this, \"yourQuestion\", _descriptor36, this);\n\n    _initializerDefineProperty(this, \"questionsGettingHelp\", _descriptor37, this);\n\n    _initializerDefineProperty(this, \"queue\", _descriptor38, this);\n\n    _initializerDefineProperty(this, \"priorityQueue\", _descriptor39, this);\n  }\n\n}, _temp11), (_descriptor36 = _applyDecoratedDescriptor(_class21.prototype, \"yourQuestion\", [_dec46], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor37 = _applyDecoratedDescriptor(_class21.prototype, \"questionsGettingHelp\", [_dec47], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor38 = _applyDecoratedDescriptor(_class21.prototype, \"queue\", [_dec48], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor39 = _applyDecoratedDescriptor(_class21.prototype, \"priorityQueue\", [_dec49], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class21));\nexport class GetQuestionResponse extends Question {}\nexport let CreateQuestionParams = (_dec50 = IsString(), _dec51 = IsEnum(QuestionType), _dec52 = IsOptional(), _dec53 = IsInt(), _dec54 = IsBoolean(), _dec55 = IsOptional(), _dec56 = IsString(), _dec57 = IsOptional(), _dec58 = IsBoolean(), (_class23 = (_temp12 = class CreateQuestionParams {\n  constructor() {\n    _initializerDefineProperty(this, \"text\", _descriptor40, this);\n\n    _initializerDefineProperty(this, \"questionType\", _descriptor41, this);\n\n    _initializerDefineProperty(this, \"queueId\", _descriptor42, this);\n\n    _initializerDefineProperty(this, \"isOnline\", _descriptor43, this);\n\n    _initializerDefineProperty(this, \"location\", _descriptor44, this);\n\n    _initializerDefineProperty(this, \"force\", _descriptor45, this);\n  }\n\n}, _temp12), (_descriptor40 = _applyDecoratedDescriptor(_class23.prototype, \"text\", [_dec50], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor41 = _applyDecoratedDescriptor(_class23.prototype, \"questionType\", [_dec51, _dec52], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor42 = _applyDecoratedDescriptor(_class23.prototype, \"queueId\", [_dec53], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor43 = _applyDecoratedDescriptor(_class23.prototype, \"isOnline\", [_dec54, _dec55], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor44 = _applyDecoratedDescriptor(_class23.prototype, \"location\", [_dec56, _dec57], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor45 = _applyDecoratedDescriptor(_class23.prototype, \"force\", [_dec58], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class23));\nexport class CreateQuestionResponse extends Question {}\nexport let UpdateQuestionParams = (_dec59 = IsString(), _dec60 = IsOptional(), _dec61 = IsEnum(QuestionType), _dec62 = IsOptional(), _dec63 = IsInt(), _dec64 = IsOptional(), _dec65 = IsEnum(QuestionStatusKeys), _dec66 = IsOptional(), _dec67 = IsBoolean(), _dec68 = IsOptional(), _dec69 = IsString(), _dec70 = IsOptional(), (_class25 = (_temp13 = class UpdateQuestionParams {\n  constructor() {\n    _initializerDefineProperty(this, \"text\", _descriptor46, this);\n\n    _initializerDefineProperty(this, \"questionType\", _descriptor47, this);\n\n    _initializerDefineProperty(this, \"queueId\", _descriptor48, this);\n\n    _initializerDefineProperty(this, \"status\", _descriptor49, this);\n\n    _initializerDefineProperty(this, \"isOnline\", _descriptor50, this);\n\n    _initializerDefineProperty(this, \"location\", _descriptor51, this);\n  }\n\n}, _temp13), (_descriptor46 = _applyDecoratedDescriptor(_class25.prototype, \"text\", [_dec59, _dec60], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor47 = _applyDecoratedDescriptor(_class25.prototype, \"questionType\", [_dec61, _dec62], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor48 = _applyDecoratedDescriptor(_class25.prototype, \"queueId\", [_dec63, _dec64], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor49 = _applyDecoratedDescriptor(_class25.prototype, \"status\", [_dec65, _dec66], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor50 = _applyDecoratedDescriptor(_class25.prototype, \"isOnline\", [_dec67, _dec68], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor51 = _applyDecoratedDescriptor(_class25.prototype, \"location\", [_dec69, _dec70], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class25));\nexport class UpdateQuestionResponse extends Question {}\nexport let TACheckoutResponse = (_dec71 = Type(() => Date), (_class27 = (_temp14 = class TACheckoutResponse {\n  constructor() {\n    this.queueId = void 0;\n    this.canClearQueue = void 0;\n\n    _initializerDefineProperty(this, \"nextOfficeHourTime\", _descriptor52, this);\n  }\n\n}, _temp14), (_descriptor52 = _applyDecoratedDescriptor(_class27.prototype, \"nextOfficeHourTime\", [_dec71], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class27));\nexport let UpdateQueueParams = (_dec72 = IsString(), _dec73 = IsOptional(), _dec74 = IsBoolean(), (_class29 = (_temp15 = class UpdateQueueParams {\n  constructor() {\n    _initializerDefineProperty(this, \"notes\", _descriptor53, this);\n\n    _initializerDefineProperty(this, \"allowQuestions\", _descriptor54, this);\n  }\n\n}, _temp15), (_descriptor53 = _applyDecoratedDescriptor(_class29.prototype, \"notes\", [_dec72, _dec73], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor54 = _applyDecoratedDescriptor(_class29.prototype, \"allowQuestions\", [_dec74], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class29));\nexport class SSEQueueResponse {\n  constructor() {\n    this.queue = void 0;\n    this.questions = void 0;\n  }\n\n}\nexport const ERROR_MESSAGES = {\n  questionController: {\n    createQuestion: {\n      invalidQueue: \"Posted to an invalid queue\",\n      noNewQuestions: \"Queue not allowing new questions\",\n      closedQueue: \"Queue is closed\",\n      oneQuestionAtATime: \"You can't create more than one question at a time.\"\n    },\n    updateQuestion: {\n      fsmViolation: (role, questionStatus, bodyStatus) => `${role} cannot change status from ${questionStatus} to ${bodyStatus}`,\n      taOnlyEditQuestionStatus: \"TA/Professors can only edit question status\",\n      otherTAHelping: \"Another TA is currently helping with this question\",\n      otherTAResolved: \"Another TA has already resolved this question\",\n      taHelpingOther: \"TA is already helping someone else\",\n      loginUserCantEdit: \"Logged-in user does not have edit access\"\n    }\n  },\n  loginController: {\n    receiveDataFromKhoury: \"Invalid request signature\"\n  },\n  notificationController: {\n    messageNotFromTwilio: \"Message not from Twilio\"\n  },\n  notificationService: {\n    registerPhone: \"phone number invalid\"\n  },\n  questionRoleGuard: {\n    questionNotFound: \"Question not found\",\n    queueOfQuestionNotFound: \"Cannot find queue of question\",\n    queueDoesNotExist: \"This queue does not exist!\"\n  },\n  queueRoleGuard: {\n    queueNotFound: \"Queue not found\"\n  },\n  releaseNotesController: {\n    releaseNotesTime: e => \"Error Parsing release notes time: \" + e\n  },\n  roleGuard: {\n    notLoggedIn: \"Must be logged in\",\n    noCourseIdFound: \"No courseid found\",\n    notInCourse: \"Not In This Course\",\n    mustBeRoleToJoinCourse: roles => `You must have one of roles [${roles.join(\", \")}] to access this course`\n  },\n  profileController: {\n    noDiskSpace: \"There is no disk space left to store an image. Please immediately contact your course staff and let them know. They will contact the Khoury Office Hours team as soon as possible.\"\n  }\n};","map":null,"metadata":{},"sourceType":"module"}