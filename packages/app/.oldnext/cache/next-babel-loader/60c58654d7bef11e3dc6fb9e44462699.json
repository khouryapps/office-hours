{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Modal from \"antd/lib/modal/Modal\";\nimport { Switch, Input, Form } from \"antd\";\nimport styled from \"styled-components\";\nimport { API } from \"@koh/api-client\";\nimport { useQueue } from \"../../../hooks/useQueue\";\nimport { pick } from \"lodash\";\nvar NotesInput = styled(Input).withConfig({\n  displayName: \"EditQueueModal__NotesInput\",\n  componentId: \"c8x0cn-0\"\n})([\"border-radius:6px;border:1px solid #b8c4ce;\"]);\nexport function EditQueueModal(_ref) {\n  var queueId = _ref.queueId,\n      visible = _ref.visible,\n      onClose = _ref.onClose;\n\n  var _useQueue = useQueue(queueId),\n      queue = _useQueue.queue,\n      mutateQueue = _useQueue.mutateQueue;\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var editQueue = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(updateQueue) {\n      var newQueue;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              newQueue = _objectSpread(_objectSpread({}, queue), updateQueue);\n              mutateQueue(newQueue, false);\n              _context.next = 4;\n              return API.queues.update(newQueue.id, pick(newQueue, [\"notes\", \"allowQuestions\"]));\n\n            case 4:\n              mutateQueue();\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function editQueue(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Modal, {\n    title: \"Edit Queue Details\",\n    visible: visible,\n    onCancel: onClose,\n    onOk: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var value;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return form.validateFields();\n\n            case 2:\n              value = _context2.sent;\n              _context2.next = 5;\n              return editQueue(value);\n\n            case 5:\n              onClose();\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))\n  }, queue && __jsx(Form, {\n    form: form,\n    initialValues: queue\n  }, __jsx(Form.Item, {\n    label: \"Queue Notes\",\n    name: \"notes\"\n  }, __jsx(NotesInput, {\n    allowClear: true,\n    placeholder: \"\"\n  })), __jsx(Form.Item, {\n    label: \"Allow New Questions\",\n    name: \"allowQuestions\",\n    valuePropName: \"checked\"\n  }, __jsx(Switch, {\n    \"data-cy\": \"allow-questions-toggle\"\n  }))));\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Queue/TA/EditQueueModal.tsx"],"names":["Modal","Switch","Input","Form","styled","API","useQueue","pick","NotesInput","EditQueueModal","queueId","visible","onClose","queue","mutateQueue","useForm","form","editQueue","updateQueue","newQueue","queues","update","id","validateFields","value"],"mappings":";;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,sBAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,MAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,QAAT,QAAyB,yBAAzB;AAEA,SAASC,IAAT,QAAqB,QAArB;AAEA,IAAMC,UAAU,GAAGJ,MAAM,CAACF,KAAD,CAAT;AAAA;AAAA;AAAA,mDAAhB;AAWA,OAAO,SAASO,cAAT,OAI+B;AAAA,MAHpCC,OAGoC,QAHpCA,OAGoC;AAAA,MAFpCC,OAEoC,QAFpCA,OAEoC;AAAA,MADpCC,OACoC,QADpCA,OACoC;;AAAA,kBACLN,QAAQ,CAACI,OAAD,CADH;AAAA,MAC5BG,KAD4B,aAC5BA,KAD4B;AAAA,MACrBC,WADqB,aACrBA,WADqB;;AAAA,sBAErBX,IAAI,CAACY,OAAL,EAFqB;AAAA;AAAA,MAE7BC,IAF6B;;AAIpC,MAAMC,SAAS;AAAA,yEAAG,iBAAOC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,cAAAA,QADU,mCACMN,KADN,GACgBK,WADhB;AAEhBJ,cAAAA,WAAW,CAACK,QAAD,EAAW,KAAX,CAAX;AAFgB;AAAA,qBAGVd,GAAG,CAACe,MAAJ,CAAWC,MAAX,CACJF,QAAQ,CAACG,EADL,EAEJf,IAAI,CAACY,QAAD,EAAW,CAAC,OAAD,EAAU,gBAAV,CAAX,CAFA,CAHU;;AAAA;AAOhBL,cAAAA,WAAW;;AAPK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATG,SAAS;AAAA;AAAA;AAAA,KAAf;;AAUA,SACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAC,oBADR;AAEE,IAAA,OAAO,EAAEN,OAFX;AAGE,IAAA,QAAQ,EAAEC,OAHZ;AAIE,IAAA,IAAI,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgBI,IAAI,CAACO,cAAL,EADhB;;AAAA;AACEC,cAAAA,KADF;AAAA;AAAA,qBAEEP,SAAS,CAACO,KAAD,CAFX;;AAAA;AAGJZ,cAAAA,OAAO;;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;AAJN,KAUGC,KAAK,IACJ,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEG,IAAZ;AAAkB,IAAA,aAAa,EAAEH;AAAjC,KACE,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAC,aAAjB;AAA+B,IAAA,IAAI,EAAC;AAApC,KACE,MAAC,UAAD;AAAY,IAAA,UAAU,EAAE,IAAxB;AAA8B,IAAA,WAAW,EAAE;AAA3C,IADF,CADF,EAIE,MAAC,IAAD,CAAM,IAAN;AACE,IAAA,KAAK,EAAC,qBADR;AAEE,IAAA,IAAI,EAAC,gBAFP;AAGE,IAAA,aAAa,EAAC;AAHhB,KAKE,MAAC,MAAD;AAAQ,eAAQ;AAAhB,IALF,CAJF,CAXJ,CADF;AA2BD","sourcesContent":["import { ReactElement } from \"react\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { Switch, Input, Form } from \"antd\";\nimport styled from \"styled-components\";\nimport { API } from \"@koh/api-client\";\nimport { useQueue } from \"../../../hooks/useQueue\";\nimport { UpdateQueueParams } from \"@koh/common\";\nimport { pick } from \"lodash\";\n\nconst NotesInput = styled(Input)`\n  border-radius: 6px;\n  border: 1px solid #b8c4ce;\n`;\n\ninterface EditQueueModalProps {\n  queueId: number;\n  visible: boolean;\n  onClose: () => void;\n}\n\nexport function EditQueueModal({\n  queueId,\n  visible,\n  onClose,\n}: EditQueueModalProps): ReactElement {\n  const { queue, mutateQueue } = useQueue(queueId);\n  const [form] = Form.useForm();\n\n  const editQueue = async (updateQueue: UpdateQueueParams) => {\n    const newQueue = { ...queue, ...updateQueue };\n    mutateQueue(newQueue, false);\n    await API.queues.update(\n      newQueue.id,\n      pick(newQueue, [\"notes\", \"allowQuestions\"])\n    );\n    mutateQueue();\n  };\n\n  return (\n    <Modal\n      title=\"Edit Queue Details\"\n      visible={visible}\n      onCancel={onClose}\n      onOk={async () => {\n        const value = await form.validateFields();\n        await editQueue(value);\n        onClose();\n      }}\n    >\n      {queue && (\n        <Form form={form} initialValues={queue}>\n          <Form.Item label=\"Queue Notes\" name=\"notes\">\n            <NotesInput allowClear={true} placeholder={\"\"} />\n          </Form.Item>\n          <Form.Item\n            label=\"Allow New Questions\"\n            name=\"allowQuestions\"\n            valuePropName=\"checked\"\n          >\n            <Switch data-cy=\"allow-questions-toggle\" />\n          </Form.Item>\n        </Form>\n      )}\n    </Modal>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}