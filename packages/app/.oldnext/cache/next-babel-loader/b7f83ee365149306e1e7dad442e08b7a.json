{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { FileTextOutlined, LogoutOutlined, QuestionCircleOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { isProd } from \"@koh/common\";\nimport { Menu, Popover } from \"antd\";\nimport Link from \"next/link\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SelfAvatar from \"../common/SelfAvatar\";\n\nconst StyleablePopover = (_ref) => {\n  let {\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\"]);\n\n  return __jsx(Popover, _extends({}, props, {\n    overlayClassName: className\n  }));\n};\n\nconst NoPaddingPopover = styled(StyleablePopover).withConfig({\n  displayName: \"ProfileDrawer__NoPaddingPopover\",\n  componentId: \"sc-4orw83-0\"\n})([\"& .ant-popover-inner-content{padding:0px;}\"]);\nconst AvatarButton = styled.div.withConfig({\n  displayName: \"ProfileDrawer__AvatarButton\",\n  componentId: \"sc-4orw83-1\"\n})([\"cursor:pointer;\"]);\nexport default function ProfileDrawer({\n  courseId\n}) {\n  const {\n    0: isPopoverOpen,\n    1: setIsPopoverOpen\n  } = useState(false);\n  const loginPath = isProd() ? \"/login\" : \"/dev\";\n  return __jsx(React.Fragment, null, __jsx(NoPaddingPopover, {\n    content: isPopoverOpen && __jsx(Menu, {\n      mode: \"inline\"\n    }, __jsx(Menu.Item, {\n      icon: __jsx(SettingOutlined, null)\n    }, __jsx(Link, {\n      href: {\n        pathname: \"/settings\",\n        query: {\n          cid: courseId\n        }\n      }\n    }, __jsx(\"a\", null, \"Settings\"))), __jsx(Menu.Item, {\n      key: \"1\",\n      icon: __jsx(QuestionCircleOutlined, null),\n      onClick: () => {\n        window.open(\"https://info.khouryofficehours.com/help\");\n        setIsPopoverOpen(false);\n      }\n    }, \"Help Guide\"), __jsx(Menu.Item, {\n      key: \"2\",\n      icon: __jsx(FileTextOutlined, null),\n      onClick: () => {\n        window.open(\"https://info.khouryofficehours.com/release-notes-archive\");\n        setIsPopoverOpen(false);\n      }\n    }, \"Release Notes\"), __jsx(Menu.Item, {\n      key: \"3\",\n      icon: __jsx(LogoutOutlined, null)\n    }, __jsx(Link, {\n      href: \"/api/v1/logout\"\n    }, __jsx(\"a\", null, \"Logout\")))),\n    placement: \"bottomRight\",\n    trigger: \"click\",\n    visible: isPopoverOpen,\n    onVisibleChange: setIsPopoverOpen\n  }, __jsx(AvatarButton, null, __jsx(SelfAvatar, {\n    size: 40\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}