{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSWR from \"swr\";\nimport { Modal, notification } from \"antd\";\nimport { useState } from \"react\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport { NotionRenderer } from \"react-notion\";\nimport { API } from \"@koh/api-client\";\nexport default function ReleaseNotes() {\n  var _useLocalStorage = useLocalStorage(\"releaseNotesLastSeen\", null),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      releaseNotesLastSeen = _useLocalStorage2[0],\n      setReleaseNotesLastSeen = _useLocalStorage2[1];\n\n  var _useState = useState(false),\n      showReleaseNotes = _useState[0],\n      setShowReleaseNotes = _useState[1];\n\n  var _useSWR = useSWR(\"api/v1/release_notes\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", API.releaseNotes.get());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      data = _useSWR.data;\n\n  if (!releaseNotesLastSeen && (data === null || data === void 0 ? void 0 : data.lastUpdatedUnixTime) || new Date(releaseNotesLastSeen) < new Date(data === null || data === void 0 ? void 0 : data.lastUpdatedUnixTime)) {\n    notification.open({\n      message: \"We've got new features/bug fixes\",\n      type: \"info\",\n      duration: 0,\n      description: \"Click to see what's new!\",\n      className: \"clickable-notification hide-in-percy\",\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: function onClick() {\n        setShowReleaseNotes(true);\n        notification.destroy();\n      }\n    });\n    setReleaseNotesLastSeen(new Date());\n  }\n\n  var openLinksInNewTab = function openLinksInNewTab(e) {\n    if (e.target.className === \"notion-link\") {\n      e.preventDefault();\n      window.open(e.target.href);\n    }\n  };\n\n  return __jsx(\"div\", {\n    onClick: openLinksInNewTab\n  }, (data === null || data === void 0 ? void 0 : data.releaseNotes) ? __jsx(Modal, {\n    title: \"Release Notes\",\n    visible: showReleaseNotes,\n    bodyStyle: {\n      padding: \"0px 24px\"\n    },\n    footer: __jsx(React.Fragment, null, __jsx(\"b\", null, \"Want to see more? \"), __jsx(\"a\", {\n      href: \"https://info.khouryofficehours.com/release-notes-archive\",\n      target: \"_blank\",\n      rel: \"noreferrer\"\n    }, \" \", \"Click here to view the archive\")),\n    width: 625,\n    onCancel: function onCancel() {\n      return setShowReleaseNotes(false);\n    }\n  }, __jsx(NotionRenderer, {\n    blockMap: data.releaseNotes\n  })) : null);\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Today/ReleaseNotes.tsx"],"names":["useSWR","Modal","notification","useState","useLocalStorage","NotionRenderer","API","ReleaseNotes","releaseNotesLastSeen","setReleaseNotesLastSeen","showReleaseNotes","setShowReleaseNotes","releaseNotes","get","data","lastUpdatedUnixTime","Date","open","message","type","duration","description","className","style","cursor","onClick","destroy","openLinksInNewTab","e","target","preventDefault","window","href","padding"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,SAASC,KAAT,EAAgBC,YAAhB,QAAoC,MAApC;AACA,SAAuBC,QAAvB,QAAkD,OAAlD;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,cAAT,QAA6C,cAA7C;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,eAAe,SAASC,YAAT,GAAsC;AAAA,yBACKH,eAAe,CACrE,sBADqE,EAErE,IAFqE,CADpB;AAAA;AAAA,MAC5CI,oBAD4C;AAAA,MACtBC,uBADsB;;AAAA,kBAKHN,QAAQ,CAAC,KAAD,CALL;AAAA,MAK5CO,gBAL4C;AAAA,MAK1BC,mBAL0B;;AAAA,gBAMlCX,MAAM,+FAAyB;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC9CM,GAAG,CAACM,YAAJ,CAAiBC,GAAjB,EAD8C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB,GAN4B;AAAA,MAM3CC,IAN2C,WAM3CA,IAN2C;;AAUnD,MACG,CAACN,oBAAD,KAAyBM,IAAzB,aAAyBA,IAAzB,uBAAyBA,IAAI,CAAEC,mBAA/B,CAAD,IACA,IAAIC,IAAJ,CAASR,oBAAT,IAAiC,IAAIQ,IAAJ,CAASF,IAAT,aAASA,IAAT,uBAASA,IAAI,CAAEC,mBAAf,CAFnC,EAGE;AACAb,IAAAA,YAAY,CAACe,IAAb,CAAkB;AAChBC,MAAAA,OAAO,EAAE,kCADO;AAEhBC,MAAAA,IAAI,EAAE,MAFU;AAGhBC,MAAAA,QAAQ,EAAE,CAHM;AAIhBC,MAAAA,WAAW,EAAE,0BAJG;AAKhBC,MAAAA,SAAS,EAAE,sCALK;AAMhBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE;AADH,OANS;AAShBC,MAAAA,OAAO,EAAE,mBAAM;AACbd,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACAT,QAAAA,YAAY,CAACwB,OAAb;AACD;AAZe,KAAlB;AAcAjB,IAAAA,uBAAuB,CAAC,IAAIO,IAAJ,EAAD,CAAvB;AACD;;AAED,MAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC/B,QAAIA,CAAC,CAACC,MAAF,CAASP,SAAT,KAAuB,aAA3B,EAA0C;AACxCM,MAAAA,CAAC,CAACE,cAAF;AACAC,MAAAA,MAAM,CAACd,IAAP,CAAYW,CAAC,CAACC,MAAF,CAASG,IAArB;AACD;AACF,GALD;;AAOA,SACE;AAAK,IAAA,OAAO,EAAEL;AAAd,KACG,CAAAb,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEF,YAAN,IACC,MAAC,KAAD;AACE,IAAA,KAAK,EAAE,eADT;AAEE,IAAA,OAAO,EAAEF,gBAFX;AAGE,IAAA,SAAS,EAAE;AAAEuB,MAAAA,OAAO,EAAE;AAAX,KAHb;AAIE,IAAA,MAAM,EACJ,4BACE,sCADF,EAEE;AACE,MAAA,IAAI,EAAC,0DADP;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,GAAG,EAAC;AAHN,OAKG,GALH,mCAFF,CALJ;AAiBE,IAAA,KAAK,EAAE,GAjBT;AAkBE,IAAA,QAAQ,EAAE;AAAA,aAAMtB,mBAAmB,CAAC,KAAD,CAAzB;AAAA;AAlBZ,KAoBE,MAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEG,IAAI,CAACF;AAA/B,IApBF,CADD,GAuBG,IAxBN,CADF;AA4BD","sourcesContent":["import useSWR from \"swr\";\nimport { Modal, notification } from \"antd\";\nimport { ReactElement, useState, useEffect } from \"react\";\nimport { useLocalStorage } from \"../../hooks/useLocalStorage\";\nimport { NotionRenderer, BlockMapType } from \"react-notion\";\nimport { API } from \"@koh/api-client\";\n\nexport default function ReleaseNotes(): ReactElement {\n  const [releaseNotesLastSeen, setReleaseNotesLastSeen] = useLocalStorage(\n    \"releaseNotesLastSeen\",\n    null\n  );\n  const [showReleaseNotes, setShowReleaseNotes] = useState(false);\n  const { data } = useSWR(`api/v1/release_notes`, async () =>\n    API.releaseNotes.get()\n  );\n\n  if (\n    (!releaseNotesLastSeen && data?.lastUpdatedUnixTime) ||\n    new Date(releaseNotesLastSeen) < new Date(data?.lastUpdatedUnixTime)\n  ) {\n    notification.open({\n      message: \"We've got new features/bug fixes\",\n      type: \"info\",\n      duration: 0,\n      description: \"Click to see what's new!\",\n      className: \"clickable-notification hide-in-percy\",\n      style: {\n        cursor: \"pointer\",\n      },\n      onClick: () => {\n        setShowReleaseNotes(true);\n        notification.destroy();\n      },\n    });\n    setReleaseNotesLastSeen(new Date());\n  }\n\n  const openLinksInNewTab = (e) => {\n    if (e.target.className === \"notion-link\") {\n      e.preventDefault();\n      window.open(e.target.href);\n    }\n  };\n\n  return (\n    <div onClick={openLinksInNewTab}>\n      {data?.releaseNotes ? (\n        <Modal\n          title={\"Release Notes\"}\n          visible={showReleaseNotes}\n          bodyStyle={{ padding: \"0px 24px\" }}\n          footer={\n            <>\n              <b>Want to see more? </b>\n              <a\n                href=\"https://info.khouryofficehours.com/release-notes-archive\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                {\" \"}\n                Click here to view the archive\n              </a>\n            </>\n          }\n          width={625}\n          onCancel={() => setShowReleaseNotes(false)}\n        >\n          <NotionRenderer blockMap={data.releaseNotes as BlockMapType} />\n        </Modal>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}