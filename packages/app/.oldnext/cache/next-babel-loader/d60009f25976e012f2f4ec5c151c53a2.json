{"ast":null,"code":"import { useProfile } from \"./useProfile\";\nimport { useQuestions } from \"./useQuestions\";\n\n/**\n * SWR wrapper for the question of the currently logged-in student\n */\nexport function useStudentQuestion(qid) {\n  var profile = useProfile();\n\n  var _useQuestions = useQuestions(qid),\n      questions = _useQuestions.questions,\n      questionsError = _useQuestions.questionsError;\n\n  var studentQuestion = profile && questions && (questions === null || questions === void 0 ? void 0 : questions.yourQuestion);\n  var studentQuestionIndex = studentQuestion && questions.queue.findIndex(function (question) {\n    return studentQuestion.id === question.id;\n  });\n  return {\n    studentQuestion: studentQuestion,\n    studentQuestionIndex: studentQuestionIndex,\n    studentQuestionError: questionsError\n  };\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/hooks/useStudentQuestion.ts"],"names":["useProfile","useQuestions","useStudentQuestion","qid","profile","questions","questionsError","studentQuestion","yourQuestion","studentQuestionIndex","queue","findIndex","question","id","studentQuestionError"],"mappings":"AAEA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAWA;;;AAGA,OAAO,SAASC,kBAAT,CAA4BC,GAA5B,EAAmE;AACxE,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;;AADwE,sBAElCC,YAAY,CAACE,GAAD,CAFsB;AAAA,MAEhEE,SAFgE,iBAEhEA,SAFgE;AAAA,MAErDC,cAFqD,iBAErDA,cAFqD;;AAIxE,MAAMC,eAAe,GAAGH,OAAO,IAAIC,SAAX,KAAwBA,SAAxB,aAAwBA,SAAxB,uBAAwBA,SAAS,CAAEG,YAAnC,CAAxB;AAEA,MAAMC,oBAAoB,GACxBF,eAAe,IACfF,SAAS,CAACK,KAAV,CAAgBC,SAAhB,CAA0B,UAACC,QAAD;AAAA,WAAcL,eAAe,CAACM,EAAhB,KAAuBD,QAAQ,CAACC,EAA9C;AAAA,GAA1B,CAFF;AAIA,SAAO;AACLN,IAAAA,eAAe,EAAfA,eADK;AAELE,IAAAA,oBAAoB,EAApBA,oBAFK;AAGLK,IAAAA,oBAAoB,EAAER;AAHjB,GAAP;AAKD","sourcesContent":["import { Question } from \"@koh/common\";\nimport { responseInterface } from \"swr\";\nimport { useProfile } from \"./useProfile\";\nimport { useQuestions } from \"./useQuestions\";\n\ntype queueResponse = responseInterface<Question, any>;\n\ninterface UseStudentQuestionReturn {\n  studentQuestion?: queueResponse[\"data\"];\n  studentQuestionIndex?: number;\n  studentQuestionError: queueResponse[\"error\"];\n  // mutateStudentQuestion: (q: Question) => void;\n}\n\n/**\n * SWR wrapper for the question of the currently logged-in student\n */\nexport function useStudentQuestion(qid: number): UseStudentQuestionReturn {\n  const profile = useProfile();\n  const { questions, questionsError } = useQuestions(qid);\n\n  const studentQuestion = profile && questions && questions?.yourQuestion;\n\n  const studentQuestionIndex =\n    studentQuestion &&\n    questions.queue.findIndex((question) => studentQuestion.id === question.id);\n\n  return {\n    studentQuestion,\n    studentQuestionIndex,\n    studentQuestionError: questionsError,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}