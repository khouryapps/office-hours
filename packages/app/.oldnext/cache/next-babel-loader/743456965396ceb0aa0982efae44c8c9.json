{"ast":null,"code":"var __jsx = React.createElement;\nimport { DeleteRowOutlined, EditOutlined, TeamOutlined, UndoOutlined } from \"@ant-design/icons\";\nimport { API } from \"@koh/api-client\";\nimport { OpenQuestionStatus } from \"@koh/common\";\nimport { Button, Col, Popconfirm, Tooltip } from \"antd\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useDraftQuestion } from \"../../../hooks/useDraftQuestion\";\nimport { useStudentQuestion } from \"../../../hooks/useStudentQuestion\";\nimport { toOrdinal } from \"../../../utils/ordinal\";\nimport Banner, { BannerButton, BannerDangerButton } from \"../Banner\";\nconst BoldNumber = styled.span.withConfig({\n  displayName: \"StudentBanner__BoldNumber\",\n  componentId: \"znqvhq-0\"\n})([\"font-weight:bold;\"]);\nconst QuestionDetails = styled.div.withConfig({\n  displayName: \"StudentBanner__QuestionDetails\",\n  componentId: \"znqvhq-1\"\n})([\"display:flex;\"]);\nconst InfoHeader = styled.div.withConfig({\n  displayName: \"StudentBanner__InfoHeader\",\n  componentId: \"znqvhq-2\"\n})([\"font-weight:bold;font-size:14px;font-variant:small-caps;\"]);\nconst Bullets = styled.ul.withConfig({\n  displayName: \"StudentBanner__Bullets\",\n  componentId: \"znqvhq-3\"\n})([\"color:#000;\"]);\nconst ColWithRightMargin = styled(Col).withConfig({\n  displayName: \"StudentBanner__ColWithRightMargin\",\n  componentId: \"znqvhq-4\"\n})([\"margin-right:32px;\"]);\nconst PriorityQueuedBanner = styled.span.withConfig({\n  displayName: \"StudentBanner__PriorityQueuedBanner\",\n  componentId: \"znqvhq-5\"\n})([\"display:flex;flex-direction:column;margin:12px 0;\"]);\nexport default function StudentBanner({\n  queueId,\n  editQuestion,\n  leaveQueue\n}) {\n  const {\n    studentQuestion,\n    studentQuestionIndex\n  } = useStudentQuestion(queueId);\n  const {\n    draftQuestion\n  } = useDraftQuestion();\n\n  switch (studentQuestion === null || studentQuestion === void 0 ? void 0 : studentQuestion.status) {\n    case \"Drafting\":\n      return __jsx(Banner, {\n        titleColor: \"#faad14\",\n        contentColor: \"#ffd666\",\n        title: \"Please finish writing your question\",\n        content: \"Your spot in queue has been temporarily reserved. Please finish describing your question to receive help and finish joining the queue.\",\n        buttons: __jsx(React.Fragment, null, __jsx(Tooltip, {\n          title: \"Delete Draft\"\n        }, __jsx(BannerButton, {\n          icon: __jsx(DeleteRowOutlined, null),\n          onClick: leaveQueue\n        })), __jsx(Tooltip, {\n          title: \"Finish Draft\"\n        }, __jsx(BannerButton, {\n          \"data-cy\": \"edit-question\",\n          icon: __jsx(EditOutlined, null),\n          onClick: async () => {\n            editQuestion();\n          }\n        })))\n      });\n\n    case \"Queued\":\n      return __jsx(Banner, {\n        titleColor: \"#3684C6\",\n        contentColor: \"#ABD4F3\",\n        title: __jsx(\"span\", null, \"You are\", \" \", __jsx(BoldNumber, null, toOrdinal(studentQuestionIndex + 1)), \" in queue\"),\n        buttons: __jsx(React.Fragment, null, __jsx(LeaveQueueButton, {\n          leaveQueue: leaveQueue\n        }), __jsx(Tooltip, {\n          title: \"Edit Question\"\n        }, __jsx(BannerButton, {\n          \"data-cy\": \"edit-question\",\n          icon: __jsx(EditOutlined, null),\n          onClick: editQuestion\n        }))),\n        content: __jsx(QuestionDetails, null, __jsx(ColWithRightMargin, {\n          flex: \"1 1\"\n        }, __jsx(InfoHeader, null, \"question\"), __jsx(\"div\", null, studentQuestion.text)), __jsx(Col, {\n          flex: \"0 0 89px\"\n        }, __jsx(InfoHeader, null, \"type\"), __jsx(\"div\", null, studentQuestion.questionType)))\n      });\n\n    case \"Helping\":\n      return __jsx(Banner, {\n        titleColor: \"#66BB6A\",\n        contentColor: \"#82C985\",\n        title: __jsx(\"span\", null, __jsx(BoldNumber, null, studentQuestion.taHelped.name), \" is coming to help you\"),\n        buttons: __jsx(React.Fragment, null, __jsx(LeaveQueueButton, {\n          leaveQueue: leaveQueue\n        }), studentQuestion.isOnline && __jsx(Tooltip, {\n          title: \"Open Teams DM\"\n        }, __jsx(BannerButton, {\n          icon: __jsx(TeamOutlined, null),\n          onClick: () => {\n            window.open(`https://teams.microsoft.com/l/chat/0/0?users=${studentQuestion.taHelped.email}`);\n          }\n        }))),\n        content: __jsx(Bullets, null, __jsx(\"li\", null, \"Please be dressed appropriately\"), __jsx(\"li\", null, \"Be respectful of the TA\\u2019s time\"), __jsx(\"li\", null, \"Come prepared with your question!\"))\n      });\n\n    case \"ReQueueing\":\n      return __jsx(Banner, {\n        titleColor: \"#66BB6A\",\n        contentColor: \"#82C985\",\n        title: __jsx(\"span\", null, \"Are you ready to re-join the queue?\"),\n        buttons: __jsx(React.Fragment, null, __jsx(LeaveQueueButton, {\n          leaveQueue: leaveQueue\n        }), __jsx(Tooltip, {\n          title: \"Rejoin Queue\"\n        }, __jsx(Button, {\n          shape: \"circle\",\n          style: {\n            marginLeft: \"16px\",\n            border: 0\n          },\n          icon: __jsx(UndoOutlined, null),\n          onClick: async () => {\n            await API.questions.update(studentQuestion.id, {\n              status: OpenQuestionStatus.PriorityQueued\n            });\n          },\n          type: \"primary\",\n          \"data-cy\": \"re-join-queue\",\n          size: \"large\"\n        }))),\n        content: __jsx(Bullets, null, __jsx(\"li\", null, \"Have you finished doing what the TA has told you?\"), __jsx(\"li\", null, \"Once you hit requeue, you will be placed at the top of the queue\"))\n      });\n\n    case \"PriorityQueued\":\n      return __jsx(Banner, {\n        titleColor: \"#3684C6\",\n        contentColor: \"#ABD4F3\",\n        title: __jsx(PriorityQueuedBanner, null, \"You are now in a priority queue, you will be helped soon. \", __jsx(\"br\", null), __jsx(\"span\", {\n          style: {\n            fontSize: 16\n          }\n        }, \"You were last helped by\", \" \", __jsx(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          }\n        }, studentQuestion.taHelped.name), \".\")),\n        buttons: __jsx(React.Fragment, null, __jsx(LeaveQueueButton, {\n          leaveQueue: leaveQueue\n        }), __jsx(Tooltip, {\n          title: \"Edit Question\"\n        }, __jsx(BannerButton, {\n          \"data-cy\": \"edit-question\",\n          icon: __jsx(EditOutlined, null),\n          onClick: editQuestion\n        }))),\n        content: __jsx(QuestionDetails, null, __jsx(ColWithRightMargin, {\n          flex: \"1 1\"\n        }, __jsx(InfoHeader, null, \"question\"), __jsx(\"div\", null, studentQuestion.text)), __jsx(Col, {\n          flex: \"0 0 89px\"\n        }, __jsx(InfoHeader, null, \"type\"), __jsx(\"div\", null, studentQuestion.questionType)))\n      });\n\n    default:\n      return __jsx(\"div\", null);\n  }\n}\n\nfunction LeaveQueueButton({\n  leaveQueue\n}) {\n  return __jsx(Popconfirm, {\n    title: `Are you sure you want to leave the queue?`,\n    okText: \"Yes\",\n    cancelText: \"No\",\n    onConfirm: leaveQueue\n  }, __jsx(Tooltip, {\n    title: \"Leave Queue\"\n  }, __jsx(BannerDangerButton, {\n    \"data-cy\": \"leave-queue\",\n    icon: __jsx(DeleteRowOutlined, null)\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}