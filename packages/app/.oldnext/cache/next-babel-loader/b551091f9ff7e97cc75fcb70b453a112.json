{"ast":null,"code":"export function getWaitTime(question) {\n  var now = new Date();\n  var difference = now.getTime() - question.createdAt.getTime();\n  return formatWaitTime(difference / 60000);\n}\nexport function formatWaitTime(minutes) {\n  var m = Math.floor(minutes);\n\n  if (!m) {\n    return \"0 min\";\n  } else if (m % 60 == 0) {\n    return \"\".concat(Math.floor(m / 60), \"hr\");\n  } else if (m >= 60) {\n    return \"\".concat(Math.floor(m / 60), \"hr \").concat(Math.floor(m) % 60, \"min\");\n  } else {\n    return \"\".concat(Math.floor(m), \" min\");\n  }\n}\nexport function formatQueueTime(queue) {\n  return formatDateTime(queue.startTime) + \" - \" + formatDateTime(queue.endTime);\n}\n\nfunction formatDateTime(date) {\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var ampm = hours >= 12 ? \"PM\" : \"AM\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  return hours + \":\" + minutes + \" \" + ampm;\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/utils/TimeUtil.ts"],"names":["getWaitTime","question","now","Date","difference","getTime","createdAt","formatWaitTime","minutes","m","Math","floor","formatQueueTime","queue","formatDateTime","startTime","endTime","date","hours","getHours","getMinutes","ampm"],"mappings":"AAEA,OAAO,SAASA,WAAT,CAAqBC,QAArB,EAAiD;AACtD,MAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,MAAMC,UAAU,GAAGF,GAAG,CAACG,OAAJ,KAAgBJ,QAAQ,CAACK,SAAT,CAAmBD,OAAnB,EAAnC;AACA,SAAOE,cAAc,CAACH,UAAU,GAAG,KAAd,CAArB;AACD;AAED,OAAO,SAASG,cAAT,CAAwBC,OAAxB,EAAiD;AACtD,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAX,CAAV;;AACA,MAAI,CAACC,CAAL,EAAQ;AACN,WAAO,OAAP;AACD,GAFD,MAEO,IAAIA,CAAC,GAAG,EAAJ,IAAU,CAAd,EAAiB;AACtB,qBAAUC,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAG,EAAf,CAAV;AACD,GAFM,MAEA,IAAIA,CAAC,IAAI,EAAT,EAAa;AAClB,qBAAUC,IAAI,CAACC,KAAL,CAAWF,CAAC,GAAG,EAAf,CAAV,gBAAkCC,IAAI,CAACC,KAAL,CAAWF,CAAX,IAAgB,EAAlD;AACD,GAFM,MAEA;AACL,qBAAUC,IAAI,CAACC,KAAL,CAAWF,CAAX,CAAV;AACD;AACF;AAED,OAAO,SAASG,eAAT,CAAyBC,KAAzB,EAAsD;AAC3D,SACEC,cAAc,CAACD,KAAK,CAACE,SAAP,CAAd,GAAkC,KAAlC,GAA0CD,cAAc,CAACD,KAAK,CAACG,OAAP,CAD1D;AAGD;;AAED,SAASF,cAAT,CAAwBG,IAAxB,EAAoC;AAClC,MAAIC,KAAK,GAAGD,IAAI,CAACE,QAAL,EAAZ;AACA,MAAIX,OAAY,GAAGS,IAAI,CAACG,UAAL,EAAnB;AACA,MAAMC,IAAI,GAAGH,KAAK,IAAI,EAAT,GAAc,IAAd,GAAqB,IAAlC;AACAA,EAAAA,KAAK,GAAGA,KAAK,GAAG,EAAhB;AACAA,EAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,EAAxB,CALkC,CAKN;;AAC5BV,EAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;AACA,SAAOU,KAAK,GAAG,GAAR,GAAcV,OAAd,GAAwB,GAAxB,GAA8Ba,IAArC;AACD","sourcesContent":["import { Question, QueuePartial } from \"@koh/common\";\n\nexport function getWaitTime(question: Question): string {\n  const now = new Date();\n  const difference = now.getTime() - question.createdAt.getTime();\n  return formatWaitTime(difference / 60000);\n}\n\nexport function formatWaitTime(minutes: number): string {\n  const m = Math.floor(minutes);\n  if (!m) {\n    return \"0 min\";\n  } else if (m % 60 == 0) {\n    return `${Math.floor(m / 60)}hr`;\n  } else if (m >= 60) {\n    return `${Math.floor(m / 60)}hr ${Math.floor(m) % 60}min`;\n  } else {\n    return `${Math.floor(m)} min`;\n  }\n}\n\nexport function formatQueueTime(queue: QueuePartial): string {\n  return (\n    formatDateTime(queue.startTime) + \" - \" + formatDateTime(queue.endTime)\n  );\n}\n\nfunction formatDateTime(date: Date) {\n  let hours = date.getHours();\n  let minutes: any = date.getMinutes();\n  const ampm = hours >= 12 ? \"PM\" : \"AM\";\n  hours = hours % 12;\n  hours = hours ? hours : 12; // the hour '0' should be '12'\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  return hours + \":\" + minutes + \" \" + ampm;\n}\n"]},"metadata":{},"sourceType":"module"}