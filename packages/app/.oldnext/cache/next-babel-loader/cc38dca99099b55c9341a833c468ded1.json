{"ast":null,"code":"var __jsx = React.createElement;\nimport { Role } from \"@koh/common\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport UpdateCalendarButton from \"./UpdateCalendarButton\";\nvar ScheduleCalendar = styled(Calendar).withConfig({\n  displayName: \"SchedulePanel__ScheduleCalendar\",\n  componentId: \"sc-1bcbtu4-0\"\n})([\"height:70vh;\"]);\nexport default function SchedulePanel(_ref) {\n  var _course$officeHours$m;\n\n  var courseId = _ref.courseId,\n      _ref$defaultView = _ref.defaultView,\n      defaultView = _ref$defaultView === void 0 ? \"week\" : _ref$defaultView;\n\n  var _useCourse = useCourse(courseId),\n      course = _useCourse.course;\n\n  var role = useRoleInCourse(courseId);\n  var myEvents = (_course$officeHours$m = course === null || course === void 0 ? void 0 : course.officeHours.map(function (e) {\n    return {\n      start: e.startTime,\n      end: e.endTime,\n      title: e.title\n    };\n  })) !== null && _course$officeHours$m !== void 0 ? _course$officeHours$m : [];\n  var today = new Date();\n  return __jsx(\"div\", null, __jsx(ScheduleCalendar, {\n    localizer: momentLocalizer(moment),\n    events: myEvents,\n    defaultView: defaultView,\n    scrollToTime: new Date(today.getFullYear(), today.getMonth(), today.getDate(), 8)\n  }), role === Role.PROFESSOR && __jsx(UpdateCalendarButton, {\n    courseId: courseId\n  }));\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Schedule/SchedulePanel.tsx"],"names":["Role","moment","React","Calendar","momentLocalizer","styled","useCourse","useRoleInCourse","UpdateCalendarButton","ScheduleCalendar","SchedulePanel","courseId","defaultView","course","role","myEvents","officeHours","map","e","start","startTime","end","endTime","title","today","Date","getFullYear","getMonth","getDate","PROFESSOR"],"mappings":";AAAA,SAASA,IAAT,QAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAoC,OAApC;AACA,SACEC,QADF,EAIEC,eAJF,QAMO,oBANP;AAOA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,IAAMC,gBAAgB,GAAGJ,MAAM,CAACF,QAAD,CAAT;AAAA;AAAA;AAAA,oBAAtB;AASA,eAAe,SAASO,aAAT,OAGiB;AAAA;;AAAA,MAF9BC,QAE8B,QAF9BA,QAE8B;AAAA,8BAD9BC,WAC8B;AAAA,MAD9BA,WAC8B,iCADhB,MACgB;;AAAA,mBACXN,SAAS,CAACK,QAAD,CADE;AAAA,MACtBE,MADsB,cACtBA,MADsB;;AAE9B,MAAMC,IAAI,GAAGP,eAAe,CAACI,QAAD,CAA5B;AAEA,MAAMI,QAAiB,4BACrBF,MADqB,aACrBA,MADqB,uBACrBA,MAAM,CAAEG,WAAR,CAAoBC,GAApB,CAAwB,UAACC,CAAD;AAAA,WAAQ;AAC9BC,MAAAA,KAAK,EAAED,CAAC,CAACE,SADqB;AAE9BC,MAAAA,GAAG,EAAEH,CAAC,CAACI,OAFuB;AAG9BC,MAAAA,KAAK,EAAEL,CAAC,CAACK;AAHqB,KAAR;AAAA,GAAxB,CADqB,yEAKd,EALT;AAOA,MAAMC,KAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,SACE,mBACE,MAAC,gBAAD;AACE,IAAA,SAAS,EAAErB,eAAe,CAACH,MAAD,CAD5B;AAEE,IAAA,MAAM,EAAEc,QAFV;AAGE,IAAA,WAAW,EAAEH,WAHf;AAIE,IAAA,YAAY,EACV,IAAIa,IAAJ,CAASD,KAAK,CAACE,WAAN,EAAT,EAA8BF,KAAK,CAACG,QAAN,EAA9B,EAAgDH,KAAK,CAACI,OAAN,EAAhD,EAAiE,CAAjE;AALJ,IADF,EASGd,IAAI,KAAKd,IAAI,CAAC6B,SAAd,IAA2B,MAAC,oBAAD;AAAsB,IAAA,QAAQ,EAAElB;AAAhC,IAT9B,CADF;AAaD","sourcesContent":["import { Role } from \"@koh/common\";\nimport moment from \"moment\";\nimport React, { ReactElement } from \"react\";\nimport {\n  Calendar,\n  CalendarProps,\n  Event,\n  momentLocalizer,\n  View,\n} from \"react-big-calendar\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport UpdateCalendarButton from \"./UpdateCalendarButton\";\n\nconst ScheduleCalendar = styled(Calendar)<CalendarProps>`\n  height: 70vh;\n`;\n\ntype ScheduleProps = {\n  courseId: number;\n  defaultView?: View;\n};\n\nexport default function SchedulePanel({\n  courseId,\n  defaultView = \"week\",\n}: ScheduleProps): ReactElement {\n  const { course } = useCourse(courseId);\n  const role = useRoleInCourse(courseId);\n\n  const myEvents: Event[] =\n    course?.officeHours.map((e) => ({\n      start: e.startTime,\n      end: e.endTime,\n      title: e.title,\n    })) ?? [];\n\n  const today: Date = new Date();\n  return (\n    <div>\n      <ScheduleCalendar\n        localizer={momentLocalizer(moment)}\n        events={myEvents}\n        defaultView={defaultView}\n        scrollToTime={\n          new Date(today.getFullYear(), today.getMonth(), today.getDate(), 8)\n        }\n      />\n      {role === Role.PROFESSOR && <UpdateCalendarButton courseId={courseId} />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}