{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { API } from \"@koh/api-client\";\nimport { ERROR_MESSAGES, OpenQuestionStatus } from \"@koh/common\";\nimport { notification } from \"antd\";\n/**\n * Method to help student and\n * pop open notification if another TA helped at same time (race condition)\n */\n\nexport default function onHelpQuestion(_x) {\n  return _onHelpQuestion.apply(this, arguments);\n}\n\nfunction _onHelpQuestion() {\n  _onHelpQuestion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(questionId) {\n    var _e$response, _e$response2, _e$response2$data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return API.questions.update(questionId, {\n              status: OpenQuestionStatus.Helping\n            });\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (((_e$response = _context.t0.response) === null || _e$response === void 0 ? void 0 : _e$response.status) === 401 && ((_e$response2 = _context.t0.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.message) === ERROR_MESSAGES.questionController.updateQuestion.otherTAHelping) {\n              notification.open({\n                message: \"Another TA is currently helping the student\",\n                description: \"This happens when another TA clicks help at the exact same time\",\n                type: \"error\",\n                duration: 3,\n                className: \"hide-in-percy\",\n                style: {\n                  width: 450\n                }\n              });\n            }\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 5]]);\n  }));\n  return _onHelpQuestion.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Queue/TA/onHelpQuestion.ts"],"names":["API","ERROR_MESSAGES","OpenQuestionStatus","notification","onHelpQuestion","questionId","questions","update","status","Helping","response","data","message","questionController","updateQuestion","otherTAHelping","open","description","type","duration","className","style","width"],"mappings":";;AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,aAAnD;AACA,SAASC,YAAT,QAA6B,MAA7B;AAEA;;;;;AAIA,wBAA8BC,cAA9B;AAAA;AAAA;;;6EAAe,iBACbC,UADa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAILL,GAAG,CAACM,SAAJ,CAAcC,MAAd,CAAqBF,UAArB,EAAiC;AACrCG,cAAAA,MAAM,EAAEN,kBAAkB,CAACO;AADU,aAAjC,CAJK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAQX,gBACE,4BAAEC,QAAF,4DAAYF,MAAZ,MAAuB,GAAvB,IACA,6BAAEE,QAAF,mFAAYC,IAAZ,wEAAkBC,OAAlB,MACEX,cAAc,CAACY,kBAAf,CAAkCC,cAAlC,CAAiDC,cAHrD,EAIE;AACAZ,cAAAA,YAAY,CAACa,IAAb,CAAkB;AAChBJ,gBAAAA,OAAO,EAAE,6CADO;AAEhBK,gBAAAA,WAAW,EACT,iEAHc;AAIhBC,gBAAAA,IAAI,EAAE,OAJU;AAKhBC,gBAAAA,QAAQ,EAAE,CALM;AAMhBC,gBAAAA,SAAS,EAAE,eANK;AAOhBC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,KAAK,EAAE;AADF;AAPS,eAAlB;AAWD;;AAxBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { API } from \"@koh/api-client\";\nimport { ERROR_MESSAGES, OpenQuestionStatus } from \"@koh/common\";\nimport { notification } from \"antd\";\n\n/**\n * Method to help student and\n * pop open notification if another TA helped at same time (race condition)\n */\nexport default async function onHelpQuestion(\n  questionId: number\n): Promise<void> {\n  try {\n    await API.questions.update(questionId, {\n      status: OpenQuestionStatus.Helping,\n    });\n  } catch (e) {\n    if (\n      e.response?.status === 401 &&\n      e.response?.data?.message ===\n        ERROR_MESSAGES.questionController.updateQuestion.otherTAHelping\n    ) {\n      notification.open({\n        message: \"Another TA is currently helping the student\",\n        description:\n          \"This happens when another TA clicks help at the exact same time\",\n        type: \"error\",\n        duration: 3,\n        className: \"hide-in-percy\",\n        style: {\n          width: 450,\n        },\n      });\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}