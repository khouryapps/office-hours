{"ast":null,"code":"var __jsx = React.createElement;\nimport { API } from \"@koh/api-client\";\nimport { Role } from \"@koh/common\";\nimport { Modal, Radio } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useProfile } from \"../../hooks/useProfile\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport TACheckinButton, { CheckinButton } from \"./TACheckinButton\";\nconst ProfessorModalRadio = styled(Radio).withConfig({\n  displayName: \"ProfessorCheckinButton__ProfessorModalRadio\",\n  componentId: \"dqhp9z-0\"\n})([\"display:block;height:30px;lineheight:30px;\"]);\nexport default function TodayPageCheckinButton() {\n  const profile = useProfile();\n  const {\n    0: modalVisible,\n    1: setModalVisible\n  } = useState(false);\n  const {\n    0: queueToCheckInto,\n    1: setQueueToCheckInto\n  } = useState(0);\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const {\n    course\n  } = useCourse(Number(cid));\n  const role = useRoleInCourse(Number(cid));\n  const queueCheckedIn = course === null || course === void 0 ? void 0 : course.queues.find(queue => queue.staffList.find(staff => staff.id === (profile === null || profile === void 0 ? void 0 : profile.id)));\n  return __jsx(React.Fragment, null, modalVisible && __jsx(Modal, {\n    title: \"Check-In To Office Hours\",\n    visible: modalVisible,\n    onCancel: () => setModalVisible(false),\n    okText: \"Check In\",\n    onOk: async () => {\n      const redirectID = await API.taStatus.checkIn(Number(cid), course === null || course === void 0 ? void 0 : course.queues[queueToCheckInto].room);\n      router.push(\"/course/[cid]/queue/[qid]\", `/course/${Number(cid)}/queue/${redirectID.id}`);\n    }\n  }, __jsx(\"h3\", null, \"Which queue would you like to check into?\"), __jsx(Radio.Group, {\n    value: queueToCheckInto,\n    onChange: e => setQueueToCheckInto(e.target.value)\n  }, course === null || course === void 0 ? void 0 : course.queues.map((q, i) => __jsx(ProfessorModalRadio, {\n    key: q.id,\n    value: i\n  }, q.room)))), role === Role.TA && __jsx(TACheckinButton, {\n    courseId: Number(cid),\n    room: \"Online\",\n    state: queueCheckedIn ? \"CheckedIn\" : \"CheckedOut\"\n  }), !queueCheckedIn && role === Role.PROFESSOR && __jsx(CheckinButton, {\n    type: \"default\",\n    size: \"large\",\n    onClick: () => setModalVisible(true)\n  }, \"Check In\"), queueCheckedIn && role === Role.PROFESSOR && __jsx(TACheckinButton, {\n    courseId: Number(cid),\n    room: queueCheckedIn.room,\n    state: \"CheckedIn\"\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}