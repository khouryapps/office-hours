{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport { API } from \"@koh/api-client\";\nimport { Role } from \"@koh/common\";\nimport { Modal, Radio } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useProfile } from \"../../hooks/useProfile\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport TACheckinButton, { CheckinButton } from \"./TACheckinButton\";\nvar ProfessorModalRadio = styled(Radio).withConfig({\n  displayName: \"ProfessorCheckinButton__ProfessorModalRadio\",\n  componentId: \"dqhp9z-0\"\n})([\"display:block;height:30px;lineheight:30px;\"]);\nexport default function TodayPageCheckinButton() {\n  var profile = useProfile();\n\n  var _useState = useState(false),\n      modalVisible = _useState[0],\n      setModalVisible = _useState[1];\n\n  var _useState2 = useState(0),\n      queueToCheckInto = _useState2[0],\n      setQueueToCheckInto = _useState2[1];\n\n  var router = useRouter();\n  var cid = router.query.cid;\n\n  var _useCourse = useCourse(Number(cid)),\n      course = _useCourse.course;\n\n  var role = useRoleInCourse(Number(cid));\n  var queueCheckedIn = course === null || course === void 0 ? void 0 : course.queues.find(function (queue) {\n    return queue.staffList.find(function (staff) {\n      return staff.id === (profile === null || profile === void 0 ? void 0 : profile.id);\n    });\n  });\n  return __jsx(React.Fragment, null, modalVisible && __jsx(Modal, {\n    title: \"Check-In To Office Hours\",\n    visible: modalVisible,\n    onCancel: function onCancel() {\n      return setModalVisible(false);\n    },\n    okText: \"Check In\",\n    onOk: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var redirectID;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return API.taStatus.checkIn(Number(cid), course === null || course === void 0 ? void 0 : course.queues[queueToCheckInto].room);\n\n            case 2:\n              redirectID = _context.sent;\n              router.push(\"/course/[cid]/queue/[qid]\", \"/course/\".concat(Number(cid), \"/queue/\").concat(redirectID.id));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))\n  }, __jsx(\"h3\", null, \"Which queue would you like to check into?\"), __jsx(Radio.Group, {\n    value: queueToCheckInto,\n    onChange: function onChange(e) {\n      return setQueueToCheckInto(e.target.value);\n    }\n  }, course === null || course === void 0 ? void 0 : course.queues.map(function (q, i) {\n    return __jsx(ProfessorModalRadio, {\n      key: q.id,\n      value: i\n    }, q.room);\n  }))), role === Role.TA && __jsx(TACheckinButton, {\n    courseId: Number(cid),\n    room: \"Online\",\n    state: queueCheckedIn ? \"CheckedIn\" : \"CheckedOut\"\n  }), !queueCheckedIn && role === Role.PROFESSOR && __jsx(CheckinButton, {\n    type: \"default\",\n    size: \"large\",\n    onClick: function onClick() {\n      return setModalVisible(true);\n    }\n  }, \"Check In\"), queueCheckedIn && role === Role.PROFESSOR && __jsx(TACheckinButton, {\n    courseId: Number(cid),\n    room: queueCheckedIn.room,\n    state: \"CheckedIn\"\n  }));\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Today/ProfessorCheckinButton.tsx"],"names":["API","Role","Modal","Radio","useRouter","React","useState","styled","useCourse","useProfile","useRoleInCourse","TACheckinButton","CheckinButton","ProfessorModalRadio","TodayPageCheckinButton","profile","modalVisible","setModalVisible","queueToCheckInto","setQueueToCheckInto","router","cid","query","Number","course","role","queueCheckedIn","queues","find","queue","staffList","staff","id","taStatus","checkIn","room","redirectID","push","e","target","value","map","q","i","TA","PROFESSOR"],"mappings":"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","sourcesContent":["import { API } from \"@koh/api-client\";\nimport { Role } from \"@koh/common\";\nimport { Modal, Radio } from \"antd\";\nimport { useRouter } from \"next/router\";\nimport React, { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useCourse } from \"../../hooks/useCourse\";\nimport { useProfile } from \"../../hooks/useProfile\";\nimport { useRoleInCourse } from \"../../hooks/useRoleInCourse\";\nimport TACheckinButton, { CheckinButton } from \"./TACheckinButton\";\n\nconst ProfessorModalRadio = styled(Radio)`\n  display: block;\n  height: 30px;\n  lineheight: 30px;\n`;\n\nexport default function TodayPageCheckinButton(): ReactElement {\n  const profile = useProfile();\n  const [modalVisible, setModalVisible] = useState(false);\n  const [queueToCheckInto, setQueueToCheckInto] = useState(0);\n  const router = useRouter();\n  const { cid } = router.query;\n  const { course } = useCourse(Number(cid));\n  const role = useRoleInCourse(Number(cid));\n  const queueCheckedIn = course?.queues.find((queue) =>\n    queue.staffList.find((staff) => staff.id === profile?.id)\n  );\n\n  return (\n    <>\n      {modalVisible && (\n        <Modal\n          title=\"Check-In To Office Hours\"\n          visible={modalVisible}\n          onCancel={() => setModalVisible(false)}\n          okText=\"Check In\"\n          onOk={async () => {\n            const redirectID = await API.taStatus.checkIn(\n              Number(cid),\n              course?.queues[queueToCheckInto].room\n            );\n\n            router.push(\n              \"/course/[cid]/queue/[qid]\",\n              `/course/${Number(cid)}/queue/${redirectID.id}`\n            );\n          }}\n        >\n          <h3>Which queue would you like to check into?</h3>\n          <Radio.Group\n            value={queueToCheckInto}\n            onChange={(e) => setQueueToCheckInto(e.target.value)}\n          >\n            {course?.queues.map((q, i) => (\n              <ProfessorModalRadio key={q.id} value={i}>\n                {q.room}\n              </ProfessorModalRadio>\n            ))}\n          </Radio.Group>\n        </Modal>\n      )}\n      {role === Role.TA && (\n        <TACheckinButton\n          courseId={Number(cid)}\n          room={\"Online\"}\n          state={queueCheckedIn ? \"CheckedIn\" : \"CheckedOut\"}\n        />\n      )}\n      {!queueCheckedIn && role === Role.PROFESSOR && (\n        <CheckinButton\n          type=\"default\"\n          size=\"large\"\n          onClick={() => setModalVisible(true)}\n        >\n          Check In\n        </CheckinButton>\n      )}\n      {queueCheckedIn && role === Role.PROFESSOR && (\n        <TACheckinButton\n          courseId={Number(cid)}\n          room={queueCheckedIn.room}\n          state=\"CheckedIn\"\n        />\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}