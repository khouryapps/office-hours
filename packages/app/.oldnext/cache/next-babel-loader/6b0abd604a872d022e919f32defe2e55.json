{"ast":null,"code":"// urlB64ToUint8Array is a magic function that will encode the base64 public key\n// to Array buffer which is needed by the subscription option\nexport var urlB64ToUint8Array = function urlB64ToUint8Array(base64String) {\n  var padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, \"+\").replace(/_/g, \"/\");\n  var rawData = atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n};","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/utils/urlB64ToUint8Array.ts"],"names":["urlB64ToUint8Array","base64String","padding","repeat","length","base64","replace","rawData","atob","outputArray","Uint8Array","i","charCodeAt"],"mappings":"AAAA;AACA;AACA,OAAO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,YAAD,EAAuC;AACvE,MAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAW,CAAC,IAAKF,YAAY,CAACG,MAAb,GAAsB,CAA5B,IAAkC,CAA7C,CAAhB;AACA,MAAMC,MAAM,GAAG,CAACJ,YAAY,GAAGC,OAAhB,EACZI,OADY,CACJ,KADI,EACG,GADH,EAEZA,OAFY,CAEJ,IAFI,EAEE,GAFF,CAAf;AAGA,MAAMC,OAAO,GAAGC,IAAI,CAACH,MAAD,CAApB;AACA,MAAMI,WAAW,GAAG,IAAIC,UAAJ,CAAeH,OAAO,CAACH,MAAvB,CAApB;;AACA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACH,MAA5B,EAAoC,EAAEO,CAAtC,EAAyC;AACvCF,IAAAA,WAAW,CAACE,CAAD,CAAX,GAAiBJ,OAAO,CAACK,UAAR,CAAmBD,CAAnB,CAAjB;AACD;;AACD,SAAOF,WAAP;AACD,CAXM","sourcesContent":["// urlB64ToUint8Array is a magic function that will encode the base64 public key\n// to Array buffer which is needed by the subscription option\nexport const urlB64ToUint8Array = (base64String: string): ArrayBuffer => {\n  const padding = \"=\".repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, \"+\")\n    .replace(/_/g, \"/\");\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n};\n"]},"metadata":{},"sourceType":"module"}