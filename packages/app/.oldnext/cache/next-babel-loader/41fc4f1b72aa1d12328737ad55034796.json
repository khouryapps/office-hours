{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Badge, Col, Row } from \"antd\";\nimport styled from \"styled-components\";\nimport { useQuestions } from \"../../hooks/useQuestions\";\nimport { useQueue } from \"../../hooks/useQueue\";\nimport { formatWaitTime } from \"../../utils/TimeUtil\";\nimport AvatarWithInitals from \"../common/AvatarWithInitials\";\nimport { RenderEvery } from \"../RenderEvery\";\n\n/**\n * Row of ta statuses\n */\nexport function TAStatuses({\n  queueId\n}) {\n  const {\n    questions\n  } = useQuestions(queueId);\n  const {\n    queue: {\n      staffList\n    }\n  } = useQueue(queueId);\n\n  if (!questions) {\n    return null;\n  }\n\n  const taToQuestion = {};\n  const taIds = staffList.map(t => t.id);\n  const helpingQuestions = questions.questionsGettingHelp;\n\n  for (const question of helpingQuestions) {\n    var _question$taHelped;\n\n    if (taIds.includes((_question$taHelped = question.taHelped) === null || _question$taHelped === void 0 ? void 0 : _question$taHelped.id)) {\n      taToQuestion[question.taHelped.id] = question;\n    }\n  }\n\n  return __jsx(Col, null, staffList.map(ta => {\n    var _taToQuestion$ta$id, _taToQuestion$ta$id$c, _taToQuestion$ta$id2;\n\n    return __jsx(Col, {\n      key: ta.id\n    }, __jsx(StatusCard, {\n      taName: ta.name,\n      taPhotoURL: ta.photoURL,\n      studentName: (_taToQuestion$ta$id = taToQuestion[ta.id]) === null || _taToQuestion$ta$id === void 0 ? void 0 : (_taToQuestion$ta$id$c = _taToQuestion$ta$id.creator) === null || _taToQuestion$ta$id$c === void 0 ? void 0 : _taToQuestion$ta$id$c.name,\n      helpedAt: (_taToQuestion$ta$id2 = taToQuestion[ta.id]) === null || _taToQuestion$ta$id2 === void 0 ? void 0 : _taToQuestion$ta$id2.helpedAt\n    }));\n  }));\n}\nconst StyledCard = styled.div.withConfig({\n  displayName: \"TAStatuses__StyledCard\",\n  componentId: \"sc-1buidjq-0\"\n})([\"background:#ffffff;box-shadow:0px 2px 8px rgba(0,0,0,0.15);border-radius:6px;padding:16px;display:flex;margin-bottom:16px;\"]);\nconst AvatarNoShrink = styled(AvatarWithInitals).withConfig({\n  displayName: \"TAStatuses__AvatarNoShrink\",\n  componentId: \"sc-1buidjq-1\"\n})([\"flex-shrink:0;\"]);\nconst CardContent = styled.div.withConfig({\n  displayName: \"TAStatuses__CardContent\",\n  componentId: \"sc-1buidjq-2\"\n})([\"margin-left:16px;\"]);\nconst TAName = styled.div.withConfig({\n  displayName: \"TAStatuses__TAName\",\n  componentId: \"sc-1buidjq-3\"\n})([\"font-weight:bold;color:#212934;\"]);\nconst HelpingInfo = styled.div.withConfig({\n  displayName: \"TAStatuses__HelpingInfo\",\n  componentId: \"sc-1buidjq-4\"\n})([\"margin-top:5px;font-style:italic;\"]);\n\n/**\n * View component just renders TA status\n */\nfunction StatusCard({\n  taName,\n  taPhotoURL,\n  studentName,\n  helpedAt\n}) {\n  const isBusy = !!helpedAt;\n  return __jsx(StyledCard, {\n    \"data-cy\": \"ta-status-card\"\n  }, __jsx(AvatarNoShrink, {\n    size: 48,\n    fontSize: 20,\n    name: taName\n  }), __jsx(CardContent, null, __jsx(Row, {\n    justify: \"space-between\"\n  }, __jsx(TAName, null, taName), __jsx(\"span\", null, __jsx(Badge, {\n    status: isBusy ? \"processing\" : \"success\"\n  }), isBusy ? \"Busy\" : \"Available\")), __jsx(HelpingInfo, null, isBusy ? __jsx(HelpingFor, {\n    studentName: studentName,\n    helpedAt: helpedAt\n  }) : \"Looking for my next student...\")));\n}\n\nconst BlueSpan = styled.span.withConfig({\n  displayName: \"TAStatuses__BlueSpan\",\n  componentId: \"sc-1buidjq-5\"\n})([\"color:#66a3d6;\"]);\n\nfunction HelpingFor({\n  studentName,\n  helpedAt\n}) {\n  return __jsx(RenderEvery, {\n    render: () => __jsx(\"span\", null, \"Helping \", __jsx(BlueSpan, null, studentName !== null && studentName !== void 0 ? studentName : \"a student\"), \" for\", \" \", __jsx(BlueSpan, null, formatWaitTime((Date.now() - helpedAt.getTime()) / 60000))),\n    interval: 60 * 1000\n  });\n}","map":null,"metadata":{},"sourceType":"module"}