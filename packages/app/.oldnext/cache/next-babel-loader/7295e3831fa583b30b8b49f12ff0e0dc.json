{"ast":null,"code":"// From https://gist.github.com/jlbruno/1535691/db35b4f3af3dcbb42babc01541410f291a8e8fac\nexport function toOrdinal(n) {\n  var s = [\"th\", \"st\", \"nd\", \"rd\"],\n      v = n % 100;\n  return n + (s[(v - 20) % 10] || s[v] || s[0]);\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/utils/ordinal.ts"],"names":["toOrdinal","n","s","v"],"mappings":"AAAA;AACA,OAAO,SAASA,SAAT,CAAmBC,CAAnB,EAAsC;AAC3C,MAAMC,CAAC,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAAV;AAAA,MACEC,CAAC,GAAGF,CAAC,GAAG,GADV;AAEA,SAAOA,CAAC,IAAIC,CAAC,CAAC,CAACC,CAAC,GAAG,EAAL,IAAW,EAAZ,CAAD,IAAoBD,CAAC,CAACC,CAAD,CAArB,IAA4BD,CAAC,CAAC,CAAD,CAAjC,CAAR;AACD","sourcesContent":["// From https://gist.github.com/jlbruno/1535691/db35b4f3af3dcbb42babc01541410f291a8e8fac\nexport function toOrdinal(n: number): string {\n  const s = [\"th\", \"st\", \"nd\", \"rd\"],\n    v = n % 100;\n  return n + (s[(v - 20) % 10] || s[v] || s[0]);\n}\n"]},"metadata":{},"sourceType":"module"}