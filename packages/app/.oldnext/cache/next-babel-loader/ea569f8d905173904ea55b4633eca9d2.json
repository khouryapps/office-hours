{"ast":null,"code":"var __jsx = React.createElement;\nimport { BellOutlined, EditOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { API } from \"@koh/api-client\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\nimport { Button, Col, Menu, message, Row, Skeleton, Space, Upload } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport SelfAvatar from \"../common/SelfAvatar\";\nimport NotificationsSettings from \"./NotificationsSettings\";\nimport ProfileSettings from \"./ProfileSettings\";\nexport let SettingsOptions;\n\n(function (SettingsOptions) {\n  SettingsOptions[\"PROFILE\"] = \"PROFILE\";\n  SettingsOptions[\"NOTIFICATIONS\"] = \"NOTIFICATIONS\";\n})(SettingsOptions || (SettingsOptions = {}));\n\nconst VerticalDivider = styled.div.withConfig({\n  displayName: \"SettingsPage__VerticalDivider\",\n  componentId: \"sc-14ibjpn-0\"\n})([\"@media (min-width:767px){border-right:1px solid #cfd6de;margin-right:32px;}\"]);\nexport default function SettingsPage({\n  defaultPage\n}) {\n  const {\n    data: profile,\n    error,\n    mutate\n  } = useSWR(`api/v1/profile`, async () => API.profile.index());\n  const {\n    0: currentSettings,\n    1: setCurrentSettings\n  } = useState(defaultPage || SettingsOptions.PROFILE);\n  const {\n    0: uploading,\n    1: setUploading\n  } = useState(false);\n  const avatarSize = useWindowWidth() / 10;\n\n  const beforeUpload = file => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPGs or PNGs!\");\n    }\n\n    const isLt1M = file.size / 1024 / 1024 < 1;\n\n    if (!isLt1M) {\n      message.error(\"Image must smaller than 1MB!\");\n    }\n\n    return isJpgOrPng && isLt1M;\n  };\n\n  if (error) {\n    message.error(error);\n  }\n\n  return __jsx(Row, null, __jsx(Col, {\n    span: 4,\n    style: {\n      textAlign: \"center\"\n    }\n  }, avatarSize ? __jsx(React.Fragment, null, uploading ? __jsx(Skeleton.Avatar, {\n    active: true,\n    size: avatarSize,\n    shape: \"circle\",\n    style: {\n      marginTop: avatarSize / 6,\n      marginBottom: avatarSize / 12\n    }\n  }) : __jsx(SelfAvatar, {\n    size: avatarSize,\n    style: {\n      marginTop: avatarSize / 6,\n      marginBottom: avatarSize / 12\n    }\n  }), __jsx(Upload, {\n    style: {\n      marginBottom: \"60px\"\n    },\n    action: \"/api/v1/profile/upload_picture\",\n    beforeUpload: beforeUpload,\n    showUploadList: false,\n    onChange: info => {\n      info.file.status === \"uploading\" ? setUploading(true) : setUploading(false);\n      mutate();\n    }\n  }, __jsx(Button, {\n    icon: __jsx(UploadOutlined, null),\n    style: {\n      marginBottom: \"60px\"\n    }\n  }, \"Upload a Profile Picture\"))) : null, __jsx(Menu, {\n    defaultSelectedKeys: [currentSettings],\n    onClick: e => setCurrentSettings(e.key),\n    style: {\n      background: \"#f8f9fb\"\n    }\n  }, __jsx(Menu.Item, {\n    key: SettingsOptions.PROFILE,\n    icon: __jsx(EditOutlined, null)\n  }, \"Edit Profile\"), __jsx(Menu.Item, {\n    key: SettingsOptions.NOTIFICATIONS,\n    icon: __jsx(BellOutlined, null)\n  }, \"Notifications Settings\"))), __jsx(VerticalDivider, null), __jsx(Space, {\n    direction: \"vertical\",\n    size: 40,\n    style: {\n      flexGrow: 1\n    }\n  }, __jsx(Col, {\n    span: 20\n  }, currentSettings === SettingsOptions.PROFILE && __jsx(ProfileSettings, null), currentSettings === SettingsOptions.NOTIFICATIONS && __jsx(NotificationsSettings, null))));\n}","map":null,"metadata":{},"sourceType":"module"}