{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport { BellOutlined, EditOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { API } from \"@koh/api-client\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\nimport { Button, Col, Menu, message, Row, Skeleton, Space, Upload } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport SelfAvatar from \"../common/SelfAvatar\";\nimport NotificationsSettings from \"./NotificationsSettings\";\nimport ProfileSettings from \"./ProfileSettings\";\nexport var SettingsOptions;\n\n(function (SettingsOptions) {\n  SettingsOptions[\"PROFILE\"] = \"PROFILE\";\n  SettingsOptions[\"NOTIFICATIONS\"] = \"NOTIFICATIONS\";\n})(SettingsOptions || (SettingsOptions = {}));\n\nvar VerticalDivider = styled.div.withConfig({\n  displayName: \"SettingsPage__VerticalDivider\",\n  componentId: \"sc-14ibjpn-0\"\n})([\"@media (min-width:767px){border-right:1px solid #cfd6de;margin-right:32px;}\"]);\nexport default function SettingsPage(_ref) {\n  var defaultPage = _ref.defaultPage;\n\n  var _useSWR = useSWR(\"api/v1/profile\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", API.profile.index());\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))),\n      profile = _useSWR.data,\n      error = _useSWR.error,\n      mutate = _useSWR.mutate;\n\n  var _useState = useState(defaultPage || SettingsOptions.PROFILE),\n      currentSettings = _useState[0],\n      setCurrentSettings = _useState[1];\n\n  var _useState2 = useState(false),\n      uploading = _useState2[0],\n      setUploading = _useState2[1];\n\n  var avatarSize = useWindowWidth() / 10;\n\n  var beforeUpload = function beforeUpload(file) {\n    var isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPGs or PNGs!\");\n    }\n\n    var isLt1M = file.size / 1024 / 1024 < 1;\n\n    if (!isLt1M) {\n      message.error(\"Image must smaller than 1MB!\");\n    }\n\n    return isJpgOrPng && isLt1M;\n  };\n\n  if (error) {\n    message.error(error);\n  }\n\n  return __jsx(Row, null, __jsx(Col, {\n    span: 4,\n    style: {\n      textAlign: \"center\"\n    }\n  }, avatarSize ? __jsx(React.Fragment, null, uploading ? __jsx(Skeleton.Avatar, {\n    active: true,\n    size: avatarSize,\n    shape: \"circle\",\n    style: {\n      marginTop: avatarSize / 6,\n      marginBottom: avatarSize / 12\n    }\n  }) : __jsx(SelfAvatar, {\n    size: avatarSize,\n    style: {\n      marginTop: avatarSize / 6,\n      marginBottom: avatarSize / 12\n    }\n  }), __jsx(Upload, {\n    style: {\n      marginBottom: \"60px\"\n    },\n    action: \"/api/v1/profile/upload_picture\",\n    beforeUpload: beforeUpload,\n    showUploadList: false,\n    onChange: function onChange(info) {\n      info.file.status === \"uploading\" ? setUploading(true) : setUploading(false);\n      mutate();\n    }\n  }, __jsx(Button, {\n    icon: __jsx(UploadOutlined, null),\n    style: {\n      marginBottom: \"60px\"\n    }\n  }, \"Upload a Profile Picture\"))) : null, __jsx(Menu, {\n    defaultSelectedKeys: [currentSettings],\n    onClick: function onClick(e) {\n      return setCurrentSettings(e.key);\n    },\n    style: {\n      background: \"#f8f9fb\"\n    }\n  }, __jsx(Menu.Item, {\n    key: SettingsOptions.PROFILE,\n    icon: __jsx(EditOutlined, null)\n  }, \"Edit Profile\"), __jsx(Menu.Item, {\n    key: SettingsOptions.NOTIFICATIONS,\n    icon: __jsx(BellOutlined, null)\n  }, \"Notifications Settings\"))), __jsx(VerticalDivider, null), __jsx(Space, {\n    direction: \"vertical\",\n    size: 40,\n    style: {\n      flexGrow: 1\n    }\n  }, __jsx(Col, {\n    span: 20\n  }, currentSettings === SettingsOptions.PROFILE && __jsx(ProfileSettings, null), currentSettings === SettingsOptions.NOTIFICATIONS && __jsx(NotificationsSettings, null))));\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Settings/SettingsPage.tsx"],"names":["BellOutlined","EditOutlined","UploadOutlined","API","useWindowWidth","Button","Col","Menu","message","Row","Skeleton","Space","Upload","React","useState","styled","useSWR","SelfAvatar","NotificationsSettings","ProfileSettings","SettingsOptions","VerticalDivider","div","SettingsPage","defaultPage","profile","index","data","error","mutate","PROFILE","currentSettings","setCurrentSettings","uploading","setUploading","avatarSize","beforeUpload","file","isJpgOrPng","type","isLt1M","size","textAlign","marginTop","marginBottom","info","status","e","key","background","NOTIFICATIONS","flexGrow"],"mappings":"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","sourcesContent":["import { BellOutlined, EditOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { API } from \"@koh/api-client\";\nimport { useWindowWidth } from \"@react-hook/window-size\";\nimport { Button, Col, Menu, message, Row, Skeleton, Space, Upload } from \"antd\";\nimport React, { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport useSWR from \"swr\";\nimport SelfAvatar from \"../common/SelfAvatar\";\nimport NotificationsSettings from \"./NotificationsSettings\";\nimport ProfileSettings from \"./ProfileSettings\";\n\nexport enum SettingsOptions {\n  PROFILE = \"PROFILE\",\n  NOTIFICATIONS = \"NOTIFICATIONS\",\n}\n\ninterface SettingsPageProps {\n  defaultPage: SettingsOptions;\n}\n\nconst VerticalDivider = styled.div`\n  @media (min-width: 767px) {\n    border-right: 1px solid #cfd6de;\n    margin-right: 32px;\n  }\n`;\n\nexport default function SettingsPage({\n  defaultPage,\n}: SettingsPageProps): ReactElement {\n  const { data: profile, error, mutate } = useSWR(`api/v1/profile`, async () =>\n    API.profile.index()\n  );\n\n  const [currentSettings, setCurrentSettings] = useState(\n    defaultPage || SettingsOptions.PROFILE\n  );\n  const [uploading, setUploading] = useState(false);\n\n  const avatarSize = useWindowWidth() / 10;\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPGs or PNGs!\");\n    }\n\n    const isLt1M = file.size / 1024 / 1024 < 1;\n    if (!isLt1M) {\n      message.error(\"Image must smaller than 1MB!\");\n    }\n    return isJpgOrPng && isLt1M;\n  };\n\n  if (error) {\n    message.error(error);\n  }\n\n  return (\n    <Row>\n      <Col span={4} style={{ textAlign: \"center\" }}>\n        {avatarSize ? (\n          <>\n            {uploading ? (\n              <Skeleton.Avatar\n                active={true}\n                size={avatarSize}\n                shape=\"circle\"\n                style={{\n                  marginTop: avatarSize / 6,\n                  marginBottom: avatarSize / 12,\n                }}\n              />\n            ) : (\n              <SelfAvatar\n                size={avatarSize}\n                style={{\n                  marginTop: avatarSize / 6,\n                  marginBottom: avatarSize / 12,\n                }}\n              />\n            )}\n            <Upload\n              style={{ marginBottom: \"60px\" }}\n              action={\"/api/v1/profile/upload_picture\"}\n              beforeUpload={beforeUpload}\n              showUploadList={false}\n              onChange={(info) => {\n                info.file.status === \"uploading\"\n                  ? setUploading(true)\n                  : setUploading(false);\n                mutate();\n              }}\n            >\n              <Button\n                icon={<UploadOutlined />}\n                style={{ marginBottom: \"60px\" }}\n              >\n                Upload a Profile Picture\n              </Button>\n            </Upload>\n          </>\n        ) : null}\n        <Menu\n          defaultSelectedKeys={[currentSettings]}\n          onClick={(e) => setCurrentSettings(e.key as SettingsOptions)}\n          style={{ background: \"#f8f9fb\" }}\n        >\n          <Menu.Item key={SettingsOptions.PROFILE} icon={<EditOutlined />}>\n            Edit Profile\n          </Menu.Item>\n          <Menu.Item\n            key={SettingsOptions.NOTIFICATIONS}\n            icon={<BellOutlined />}\n          >\n            Notifications Settings\n          </Menu.Item>\n        </Menu>\n      </Col>\n      <VerticalDivider />\n      <Space direction=\"vertical\" size={40} style={{ flexGrow: 1 }}>\n        <Col span={20}>\n          {currentSettings === SettingsOptions.PROFILE && <ProfileSettings />}\n          {currentSettings === SettingsOptions.NOTIFICATIONS && (\n            <NotificationsSettings />\n          )}\n        </Col>\n      </Space>\n    </Row>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}