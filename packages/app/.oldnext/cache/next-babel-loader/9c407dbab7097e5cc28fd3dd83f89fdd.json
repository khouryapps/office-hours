{"ast":null,"code":"import { useState } from \"react\";\nvar isWindow = true;\nexport function useLocalStorage(key, initialValue) {\n  var _useState = useState(function () {\n    try {\n      var item = isWindow && window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  }),\n      storedValue = _useState[0],\n      setStoredValue = _useState[1];\n\n  var setValue = function setValue(value) {\n    try {\n      var valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      isWindow && window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  var removeValue = function removeValue() {\n    try {\n      setStoredValue(null);\n      isWindow && window.localStorage.removeItem(key);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue, removeValue];\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/hooks/useLocalStorage.ts"],"names":["useState","isWindow","useLocalStorage","key","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","storedValue","setStoredValue","setValue","value","valueToStore","Function","setItem","stringify","removeValue","removeItem"],"mappings":"AAAA,SAASA,QAAT,QAAmD,OAAnD;AAEA,IAAMC,QAAQ,OAAd;AAEA,OAAO,SAASC,eAAT,CACLC,GADK,EAELC,YAFK,EAG6D;AAAA,kBAC5BJ,QAAQ,CAAI,YAAM;AACtD,QAAI;AACF,UAAMK,IAAI,GAAGJ,QAAQ,IAAIK,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,GAA5B,CAAzB;AACA,aAAOE,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAH,GAAsBD,YAAjC;AACD,KAHD,CAGE,OAAOO,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,aAAOP,YAAP;AACD;AACF,GAR6C,CADoB;AAAA,MAC3DS,WAD2D;AAAA,MAC9CC,cAD8C;;AAWlE,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAc;AAC7B,QAAI;AACF,UAAMC,YAAY,GAChBD,KAAK,YAAYE,QAAjB,GAA4BF,KAAK,CAACH,WAAD,CAAjC,GAAiDG,KADnD;AAEAF,MAAAA,cAAc,CAACG,YAAD,CAAd;AAEAhB,MAAAA,QAAQ,IACNK,MAAM,CAACC,YAAP,CAAoBY,OAApB,CAA4BhB,GAA5B,EAAiCM,IAAI,CAACW,SAAL,CAAeH,YAAf,CAAjC,CADF;AAED,KAPD,CAOE,OAAON,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAXD;;AAaA,MAAMU,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAI;AACFP,MAAAA,cAAc,CAAC,IAAD,CAAd;AAEAb,MAAAA,QAAQ,IAAIK,MAAM,CAACC,YAAP,CAAoBe,UAApB,CAA+BnB,GAA/B,CAAZ;AACD,KAJD,CAIE,OAAOQ,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GARD;;AAUA,SAAO,CAACE,WAAD,EAAcE,QAAd,EAAwBM,WAAxB,CAAP;AACD","sourcesContent":["import { useState, Dispatch, SetStateAction } from \"react\";\n\nconst isWindow = typeof window !== \"undefined\";\n\nexport function useLocalStorage<T>(\n  key: string,\n  initialValue: T\n): [T, Dispatch<SetStateAction<T>>, Dispatch<SetStateAction<void>>] {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    try {\n      const item = isWindow && window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: T) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n\n      isWindow &&\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const removeValue = () => {\n    try {\n      setStoredValue(null);\n\n      isWindow && window.localStorage.removeItem(key);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue, removeValue];\n}\n"]},"metadata":{},"sourceType":"module"}