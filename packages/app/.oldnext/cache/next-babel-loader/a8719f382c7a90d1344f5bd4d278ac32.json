{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { API } from \"@koh/api-client\";\nimport { Role } from \"@koh/common\";\nimport { Col, Row } from \"antd\";\nimport { chunk, mean } from \"lodash\";\nimport moment from \"moment\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { StandardPageContainer } from \"../../../components/common/PageContainer\";\nimport NavBar from \"../../../components/Nav/NavBar\";\nimport SchedulePanel from \"../../../components/Schedule/SchedulePanel\";\nimport OpenQueueCard, { OpenQueueCardSkeleton } from \"../../../components/Today/OpenQueueCard\";\nimport PopularTimes from \"../../../components/Today/PopularTimes/PopularTimes\";\nimport ReleaseNotes from \"../../../components/Today/ReleaseNotes\";\nimport TACheckinButton from \"../../../components/Today/TACheckinButton\";\nimport WelcomeStudents from \"../../../components/Today/WelcomeStudents\";\nimport { useCourse } from \"../../../hooks/useCourse\";\nimport { useProfile } from \"../../../hooks/useProfile\";\nimport { useRoleInCourse } from \"../../../hooks/useRoleInCourse\";\nconst Container = styled.div.withConfig({\n  displayName: \"today__Container\",\n  componentId: \"guxhv1-0\"\n})([\"margin-top:32px;\"]);\nconst Title = styled.div.withConfig({\n  displayName: \"today__Title\",\n  componentId: \"guxhv1-1\"\n})([\"font-weight:500;font-size:30px;color:#212934;\"]);\n\nfunction arrayRotate(arr, count) {\n  const adjustedCount = (arr.length + count) % arr.length;\n  return arr.slice(adjustedCount, arr.length).concat(arr.slice(0, adjustedCount));\n}\n\nconst collapseHeatmap = heatmap => chunk(heatmap, 4).map(hours => {\n  const filteredOfficeHours = hours.filter(v => v !== -1);\n  return filteredOfficeHours.length > 0 ? mean(filteredOfficeHours) : -1;\n});\n\nexport default function Today() {\n  var _course$queues, _course$queues2;\n\n  const router = useRouter();\n  const {\n    cid\n  } = router.query;\n  const profile = useProfile();\n  const role = useRoleInCourse(Number(cid));\n  const {\n    course,\n    mutateCourse\n  } = useCourse(Number(cid));\n\n  const updateQueueNotes = async (queue, notes) => {\n    const newQueues = course && course.queues.map(q => q.id === queue.id ? _objectSpread(_objectSpread({}, q), {}, {\n      notes\n    }) : q);\n    mutateCourse(_objectSpread(_objectSpread({}, course), {}, {\n      queues: newQueues\n    }), false);\n    await API.queues.update(queue.id, {\n      notes,\n      allowQuestions: queue.allowQuestions\n    });\n    mutateCourse();\n  };\n\n  const queueCheckedIn = course === null || course === void 0 ? void 0 : course.queues.find(queue => queue.staffList.find(staff => staff.id === (profile === null || profile === void 0 ? void 0 : profile.id)));\n  return __jsx(StandardPageContainer, null, __jsx(Head, null, __jsx(\"title\", null, course === null || course === void 0 ? void 0 : course.name, \" | Khoury Office Hours\")), __jsx(ReleaseNotes, null), __jsx(WelcomeStudents, null), __jsx(NavBar, {\n    courseId: Number(cid)\n  }), __jsx(Container, null, __jsx(Row, {\n    gutter: 64\n  }, __jsx(Col, {\n    md: 12,\n    xs: 24\n  }, __jsx(Row, {\n    justify: \"space-between\"\n  }, __jsx(Title, null, \"Current Office Hours\"), role === Role.TA && __jsx(TACheckinButton, {\n    courseId: Number(cid),\n    room: \"Online\",\n    state: queueCheckedIn ? \"CheckedIn\" : \"CheckedOut\"\n  })), role === Role.PROFESSOR && __jsx(Row, null, __jsx(\"div\", null, \"You are a professor for this course\")), (course === null || course === void 0 ? void 0 : (_course$queues = course.queues) === null || _course$queues === void 0 ? void 0 : _course$queues.length) === 0 ? __jsx(\"h1\", {\n    style: {\n      paddingTop: \"100px\"\n    }\n  }, \"There are currently no scheduled office hours\") : course === null || course === void 0 ? void 0 : (_course$queues2 = course.queues) === null || _course$queues2 === void 0 ? void 0 : _course$queues2.map(q => __jsx(OpenQueueCard, {\n    key: q.id,\n    queue: q,\n    isTA: role === Role.TA,\n    updateQueueNotes: updateQueueNotes\n  })), !course && __jsx(OpenQueueCardSkeleton, null), course && course.heatmap && __jsx(PopularTimes, {\n    heatmap: collapseHeatmap(arrayRotate(course.heatmap, -Math.floor(moment().utcOffset() / 15)))\n  })), __jsx(Col, {\n    md: 12,\n    sm: 24\n  }, __jsx(SchedulePanel, {\n    courseId: Number(cid),\n    defaultView: \"day\"\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}