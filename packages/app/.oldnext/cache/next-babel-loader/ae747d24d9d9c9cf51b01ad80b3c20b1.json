{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport { QuestionStatusKeys } from \"@koh/common\";\nimport { Tooltip } from \"antd\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useProfile } from \"../../../hooks/useProfile\";\nimport { useQuestions } from \"../../../hooks/useQuestions\";\nimport { useQueue } from \"../../../hooks/useQueue\";\nimport { useTAInQueueInfo } from \"../../../hooks/useTAInQueueInfo\";\nimport TACheckinButton from \"../../Today/TACheckinButton\";\nimport { QueueInfoColumn, QueueInfoColumnButton } from \"../QueueListSharedComponents\";\nimport { EditQueueModal } from \"./EditQueueModal\";\nimport onHelpQuestion from \"./onHelpQuestion\";\nimport TAQueueListDetail from \"./TAQueueListDetail\";\nvar Container = styled.div.withConfig({\n  displayName: \"TAQueue__Container\",\n  componentId: \"sc-173p98z-0\"\n})([\"flex:1;display:flex;flex-direction:column;@media (min-width:650px){flex-direction:row;}\"]);\nvar HelpNextButton = styled(QueueInfoColumnButton).withConfig({\n  displayName: \"TAQueue__HelpNextButton\",\n  componentId: \"sc-173p98z-1\"\n})([\"color:white;background:#2a9187;&:hover,&:focus{color:white;background:#39aca1;}\"]);\nvar EditQueueButton = styled(QueueInfoColumnButton).withConfig({\n  displayName: \"TAQueue__EditQueueButton\",\n  componentId: \"sc-173p98z-2\"\n})([\"color:#212934;\"]);\nvar MiddleSpacer = styled.div.withConfig({\n  displayName: \"TAQueue__MiddleSpacer\",\n  componentId: \"sc-173p98z-3\"\n})([\"margin-left:20px;\"]);\nexport default function TAQueue(_ref) {\n  var _questions$queue;\n\n  var qid = _ref.qid,\n      courseId = _ref.courseId;\n  var user = useProfile();\n\n  var _useQueue = useQueue(qid),\n      queue = _useQueue.queue,\n      mutateQueue = _useQueue.mutateQueue;\n\n  var _useQuestions = useQuestions(qid),\n      questions = _useQuestions.questions,\n      mutateQuestions = _useQuestions.mutateQuestions;\n\n  var _useTAInQueueInfo = useTAInQueueInfo(qid),\n      isCheckedIn = _useTAInQueueInfo.isCheckedIn,\n      isHelping = _useTAInQueueInfo.isHelping;\n\n  var _useState = useState(false),\n      queueSettingsModal = _useState[0],\n      setQueueSettingsModal = _useState[1];\n\n  var nextQuestion = (questions === null || questions === void 0 ? void 0 : questions.priorityQueue[0]) || ( // gets the first item of priority queue if it exists\n  questions === null || questions === void 0 ? void 0 : (_questions$queue = questions.queue) === null || _questions$queue === void 0 ? void 0 : _questions$queue.find(function (question) {\n    return question.status === QuestionStatusKeys.Queued;\n  }));\n\n  var helpNext = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return onHelpQuestion(nextQuestion.id);\n\n            case 2:\n              mutateQuestions();\n              window.open(\"https://teams.microsoft.com/l/chat/0/0?users=\".concat(nextQuestion.creator.email));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function helpNext() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  if (queue) {\n    return __jsx(React.Fragment, null, __jsx(Container, null, __jsx(QueueInfoColumn, {\n      queueId: qid,\n      buttons: __jsx(React.Fragment, null, __jsx(EditQueueButton, {\n        \"data-cy\": \"editQueue\",\n        onClick: function onClick() {\n          return setQueueSettingsModal(true);\n        }\n      }, \"Edit Queue Details\"), __jsx(Tooltip, {\n        title: !isCheckedIn && \"You must check in to help students!\"\n      }, __jsx(HelpNextButton, {\n        onClick: helpNext,\n        disabled: !isCheckedIn || !nextQuestion || isHelping,\n        \"data-cy\": \"help-next\"\n      }, \"Help Next\")), __jsx(\"div\", {\n        style: {\n          marginBottom: \"12px\"\n        }\n      }, __jsx(TACheckinButton, {\n        courseId: courseId,\n        room: queue === null || queue === void 0 ? void 0 : queue.room,\n        disabled: isHelping,\n        state: isCheckedIn ? \"CheckedIn\" : \"CheckedOut\",\n        block: true\n      })))\n    }), __jsx(MiddleSpacer, null), user && questions && __jsx(TAQueueListDetail, {\n      queueId: qid,\n      courseId: courseId\n    })), __jsx(EditQueueModal, {\n      queueId: qid,\n      visible: queueSettingsModal,\n      onClose: function onClose() {\n        return setQueueSettingsModal(false);\n      }\n    }));\n  } else {\n    return __jsx(\"div\", null);\n  }\n}","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/Queue/TA/TAQueue.tsx"],"names":["QuestionStatusKeys","Tooltip","React","useState","styled","useProfile","useQuestions","useQueue","useTAInQueueInfo","TACheckinButton","QueueInfoColumn","QueueInfoColumnButton","EditQueueModal","onHelpQuestion","TAQueueListDetail","Container","div","HelpNextButton","EditQueueButton","MiddleSpacer","TAQueue","qid","courseId","user","queue","mutateQueue","questions","mutateQuestions","isCheckedIn","isHelping","queueSettingsModal","setQueueSettingsModal","nextQuestion","priorityQueue","find","question","status","Queued","helpNext","id","window","open","creator","email","marginBottom","room"],"mappings":"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","sourcesContent":["import { API } from \"@koh/api-client\";\nimport { QuestionStatusKeys } from \"@koh/common\";\nimport { Tooltip } from \"antd\";\nimport React, { ReactElement, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useProfile } from \"../../../hooks/useProfile\";\nimport { useQuestions } from \"../../../hooks/useQuestions\";\nimport { useQueue } from \"../../../hooks/useQueue\";\nimport { useTAInQueueInfo } from \"../../../hooks/useTAInQueueInfo\";\nimport TACheckinButton from \"../../Today/TACheckinButton\";\nimport {\n  QueueInfoColumn,\n  QueueInfoColumnButton,\n} from \"../QueueListSharedComponents\";\nimport { EditQueueModal } from \"./EditQueueModal\";\nimport onHelpQuestion from \"./onHelpQuestion\";\nimport TAQueueListDetail from \"./TAQueueListDetail\";\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 650px) {\n    flex-direction: row;\n  }\n`;\n\nconst HelpNextButton = styled(QueueInfoColumnButton)`\n  color: white;\n  background: #2a9187;\n  &:hover,\n  &:focus {\n    color: white;\n    background: #39aca1;\n  }\n`;\n\nconst EditQueueButton = styled(QueueInfoColumnButton)`\n  color: #212934;\n`;\n\nconst MiddleSpacer = styled.div`\n  margin-left: 20px;\n`;\n\ninterface TAQueueProps {\n  qid: number;\n  courseId: number;\n}\n\nexport default function TAQueue({ qid, courseId }: TAQueueProps): ReactElement {\n  const user = useProfile();\n  const { queue, mutateQueue } = useQueue(qid);\n\n  const { questions, mutateQuestions } = useQuestions(qid);\n\n  const { isCheckedIn, isHelping } = useTAInQueueInfo(qid);\n\n  const [queueSettingsModal, setQueueSettingsModal] = useState(false);\n\n  const nextQuestion =\n    questions?.priorityQueue[0] || // gets the first item of priority queue if it exists\n    questions?.queue?.find(\n      (question) => question.status === QuestionStatusKeys.Queued\n    );\n\n  const helpNext = async () => {\n    await onHelpQuestion(nextQuestion.id);\n    mutateQuestions();\n    window.open(\n      `https://teams.microsoft.com/l/chat/0/0?users=${nextQuestion.creator.email}`\n    );\n  };\n\n  if (queue) {\n    return (\n      <>\n        <Container>\n          <QueueInfoColumn\n            queueId={qid}\n            buttons={\n              <>\n                <EditQueueButton\n                  data-cy=\"editQueue\"\n                  onClick={() => setQueueSettingsModal(true)}\n                >\n                  Edit Queue Details\n                </EditQueueButton>\n                <Tooltip\n                  title={!isCheckedIn && \"You must check in to help students!\"}\n                >\n                  <HelpNextButton\n                    onClick={helpNext}\n                    disabled={!isCheckedIn || !nextQuestion || isHelping}\n                    data-cy=\"help-next\"\n                  >\n                    Help Next\n                  </HelpNextButton>\n                </Tooltip>\n                <div style={{ marginBottom: \"12px\" }}>\n                  <TACheckinButton\n                    courseId={courseId}\n                    room={queue?.room}\n                    disabled={isHelping}\n                    state={isCheckedIn ? \"CheckedIn\" : \"CheckedOut\"}\n                    block\n                  />\n                </div>\n              </>\n            }\n          />\n          <MiddleSpacer />\n          {user && questions && (\n            <TAQueueListDetail queueId={qid} courseId={courseId} />\n          )}\n        </Container>\n        <EditQueueModal\n          queueId={qid}\n          visible={queueSettingsModal}\n          onClose={() => setQueueSettingsModal(false)}\n        />\n      </>\n    );\n  } else {\n    return <div />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}