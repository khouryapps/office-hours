{"ast":null,"code":"var __jsx = React.createElement;\nimport { CheckOutlined, CloseOutlined, DeleteOutlined, PhoneOutlined, UndoOutlined } from \"@ant-design/icons\";\nimport { API } from \"@koh/api-client\";\nimport { ClosedQuestionStatus, LimboQuestionStatus, OpenQuestionStatus } from \"@koh/common\";\nimport { message, Popconfirm, Tooltip } from \"antd\";\nimport React, { useCallback } from \"react\";\nimport { useQuestions } from \"../../../hooks/useQuestions\";\nimport { useTAInQueueInfo } from \"../../../hooks/useTAInQueueInfo\";\nimport { BannerDangerButton, BannerPrimaryButton, CantFindButton, FinishHelpingButton, RequeueButton } from \"../Banner\";\nconst PRORITY_QUEUED_MESSAGE_TEXT = \"This student has been temporarily removed from the queue. They must select to rejoin the queue and will then be placed in the Priority Queue.\";\nexport default function TAQueueDetailButtons({\n  queueId,\n  question\n}) {\n  const {\n    mutateQuestions\n  } = useQuestions(queueId);\n  const changeStatus = useCallback(async status => {\n    await API.questions.update(question.id, {\n      status\n    });\n    mutateQuestions();\n  }, [question.id, mutateQuestions]);\n  const {\n    isCheckedIn,\n    isHelping\n  } = useTAInQueueInfo(queueId);\n\n  if (question.status === OpenQuestionStatus.Helping) {\n    return __jsx(React.Fragment, null, __jsx(Popconfirm, {\n      title: \"Are you sure you want to send this student back to the queue?\",\n      okText: \"Yes\",\n      cancelText: \"No\",\n      onConfirm: async () => {\n        message.success(PRORITY_QUEUED_MESSAGE_TEXT, 2);\n        await changeStatus(LimboQuestionStatus.ReQueueing);\n      }\n    }, __jsx(Tooltip, {\n      title: \"Requeue Student\"\n    }, __jsx(RequeueButton, {\n      icon: __jsx(UndoOutlined, null),\n      \"data-cy\": \"requeue-student-button\"\n    }))), __jsx(Popconfirm, {\n      title: \"Are you sure you can't find this student?\",\n      okText: \"Yes\",\n      cancelText: \"No\",\n      onConfirm: async () => {\n        message.success(PRORITY_QUEUED_MESSAGE_TEXT, 2);\n        await changeStatus(LimboQuestionStatus.CantFind);\n        await API.questions.notify(question.id);\n      }\n    }, __jsx(Tooltip, {\n      title: \"Can't Find\"\n    }, __jsx(CantFindButton, {\n      shape: \"circle\",\n      icon: __jsx(CloseOutlined, null),\n      \"data-cy\": \"cant-find-button\"\n    }))), __jsx(Tooltip, {\n      title: \"Finish Helping\"\n    }, __jsx(FinishHelpingButton, {\n      icon: __jsx(CheckOutlined, null),\n      onClick: () => changeStatus(ClosedQuestionStatus.Resolved),\n      \"data-cy\": \"finish-helping-button\"\n    })));\n  } else {\n    const [canHelp, helpTooltip] = (() => {\n      if (!isCheckedIn) {\n        return [false, \"You must check in to help students!\"];\n      } else if (isHelping) {\n        return [false, \"You are already helping a student\"];\n      } else {\n        return [true, \"Help Student\"];\n      }\n    })();\n\n    return __jsx(React.Fragment, null, __jsx(Popconfirm, {\n      title: \"Are you sure you want to delete this question from the queue?\",\n      disabled: !isCheckedIn,\n      okText: \"Yes\",\n      cancelText: \"No\",\n      onConfirm: async () => {\n        await changeStatus(question.status === OpenQuestionStatus.Drafting ? ClosedQuestionStatus.DeletedDraft : LimboQuestionStatus.TADeleted);\n        await API.questions.notify(question.id);\n      }\n    }, __jsx(Tooltip, {\n      title: isCheckedIn ? \"Remove From Queue\" : \"You must check in to remove students from the queue\"\n    }, __jsx(\"span\", null, __jsx(BannerDangerButton, {\n      shape: \"circle\",\n      icon: __jsx(DeleteOutlined, null),\n      \"data-cy\": \"remove-from-queue\",\n      disabled: !isCheckedIn\n    })))), __jsx(Tooltip, {\n      title: helpTooltip\n    }, __jsx(\"span\", null, __jsx(BannerPrimaryButton, {\n      icon: __jsx(PhoneOutlined, null),\n      onClick: () => {\n        changeStatus(OpenQuestionStatus.Helping);\n\n        if (question.isOnline) {\n          window.open(`https://teams.microsoft.com/l/chat/0/0?users=${question.creator.email}`);\n        }\n      },\n      disabled: !canHelp,\n      \"data-cy\": \"help-student\"\n    }))));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}