{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { apm } from \"@elastic/apm-rum\";\nimport { Result } from \"antd\";\nimport React from \"react\";\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport var ErrorBoundary = /*#__PURE__*/function (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      if (window) {\n        apm.captureError(error);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        return __jsx(Result, {\n          status: \"500\",\n          title: \"We hit an unexpected error.\",\n          subTitle: \"Sorry about that! A report has automatically been filed. Try refreshing the page.\"\n        });\n      }\n\n      return this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return ErrorBoundary;\n}(React.Component);","map":{"version":3,"sources":["/home/runner/work/office-hours/office-hours/packages/app/components/common/ErrorBoundary.tsx"],"names":["apm","Result","React","ErrorBoundary","props","state","hasError","error","errorInfo","window","captureError","children","Component"],"mappings":";;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,MAAiC,OAAjC;AAKA;AACA,WAAaC,aAAb;AAAA;;AAAA;;AACE,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFiB;AAGlB;;AAJH;AAAA;AAAA,sCAUoBC,KAVpB,EAU2BC,SAV3B,EAU4C;AACxC,UAAIC,MAAJ,EAAY;AACVT,QAAAA,GAAG,CAACU,YAAJ,CAAiBH,KAAjB;AACD;AACF;AAdH;AAAA;AAAA,6BAgBsB;AAClB,UAAI,KAAKF,KAAL,CAAWC,QAAf,EAAyB;AACvB,eACE,MAAC,MAAD;AACE,UAAA,MAAM,EAAC,KADT;AAEE,UAAA,KAAK,EAAC,6BAFR;AAGE,UAAA,QAAQ,EAAC;AAHX,UADF;AAOD;;AAED,aAAO,KAAKF,KAAL,CAAWO,QAAlB;AACD;AA5BH;AAAA;AAAA,6CAMkCJ,KANlC,EAMkD;AAC9C,aAAO;AAAED,QAAAA,QAAQ,EAAE;AAAZ,OAAP;AACD;AARH;;AAAA;AAAA,EAAmCJ,KAAK,CAACU,SAAzC","sourcesContent":["import { apm } from \"@elastic/apm-rum\";\nimport { Result } from \"antd\";\nimport React, { ReactNode } from \"react\";\n\ninterface EBState {\n  hasError: boolean;\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport class ErrorBoundary extends React.Component<{}, EBState> {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error): EBState {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo): void {\n    if (window) {\n      apm.captureError(error);\n    }\n  }\n\n  render(): ReactNode {\n    if (this.state.hasError) {\n      return (\n        <Result\n          status=\"500\"\n          title=\"We hit an unexpected error.\"\n          subTitle=\"Sorry about that! A report has automatically been filed. Try refreshing the page.\"\n        />\n      );\n    }\n\n    return this.props.children;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}